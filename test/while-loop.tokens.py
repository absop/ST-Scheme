Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='inc!')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='x')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='x')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='x')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='dec!')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='x')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='x')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='x')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='while')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='while')
Token(type='at', text='condition')
Token(type='at', text='body')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='break')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='ob', text='(')
Token(type='at', text='syntax')
Token(type='at', text='while')
Token(type='cb', text=')')
Token(type='at', text="'break")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='continue')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='ob', text='(')
Token(type='at', text='syntax')
Token(type='at', text='while')
Token(type='cb', text=')')
Token(type='at', text="'continue")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax')
Token(type='ob', text='(')
Token(type='at', text='call/cc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='break')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='continue')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='condition')
Token(type='at', text='body')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text='continue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='while')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='while')
Token(type='at', text='condition')
Token(type='at', text='body')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='break')
Token(type='at', text='continue')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='call/cc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='break')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='continue')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='condition')
Token(type='at', text='body')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text='continue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text="'#(")
Token(type='at', text='1')
Token(type='at', text='2')
Token(type='at', text='3')
Token(type='at', text='4')
Token(type='at', text='5')
Token(type='at', text='6')
Token(type='at', text='7')
Token(type='at', text='8')
Token(type='at', text='9')
Token(type='at', text='10')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='get')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"(get 3) = ~a\\n"')
Token(type='ob', text='(')
Token(type='at', text='get')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text="'#(")
Token(type='at', text='1')
Token(type='at', text='2')
Token(type='at', text='3')
Token(type='at', text='4')
Token(type='at', text='5')
Token(type='at', text='6')
Token(type='at', text='7')
Token(type='at', text='8')
Token(type='at', text='9')
Token(type='at', text='10')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='get')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"(get 3) = ~a\\n"')
Token(type='ob', text='(')
Token(type='at', text='get')
Token(type='at', text='v')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n\n')
Token(type='dc', text='#;')
Token(type='dc', text='#;')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='print-gensym')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pretty-print')
Token(type='ob', text='(')
Token(type='at', text='expand/optimize')
Token(type='ob', text="'(")
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='sum-while-syntax')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='bc', text='#|  |#')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='while')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='i')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='odd?')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='continue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='s')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='m')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='lc', text=';')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='while')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='at', text='i')
Token(type='at', text='100')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='at', text='i')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='continue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='>')
Token(type='at', text='i')
Token(type='at', text='50')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"terminal at ~a\\n"')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='break')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='j')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='while')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='j')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"~a"')
Token(type='at', text='j')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='j')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='j')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='j')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='" "')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='", "')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"~a\\n"')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='m')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='2')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='bc', text='#|  |#')
Token(type='cb', text=')')
Token(type='lc', text='; #!eof')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='sum-while-syntax')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='while')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='i')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='s')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='sum-let-loop-with-set')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='i')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='s')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inc!')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='sum-let-loop-without-set')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='while')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='i')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='while')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='s')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='collect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='time')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='s')
Token(type='ob', text='(')
Token(type='at', text='sum-while-syntax')
Token(type='at', text='100000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"~a\\n"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='collect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='time')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='s')
Token(type='ob', text='(')
Token(type='at', text='sum-let-loop-with-set')
Token(type='at', text='100000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"~a\\n"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='collect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='time')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='s')
Token(type='ob', text='(')
Token(type='at', text='sum-let-loop-without-set')
Token(type='at', text='100000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"~a\\n"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
