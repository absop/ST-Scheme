Token(type='st', text='"read.ss"')
Token(type='lc', text=';;; read.ss')
Token(type='lc', text=';;; Copyright 1984-2017 Cisco Systems, Inc.')
Token(type='lc', text=';;;')
Token(type='lc', text=';;; Licensed under the Apache License, Version 2.0 (the "License");')
Token(type='lc', text=';;; you may not use this file except in compliance with the License.')
Token(type='lc', text=';;; You may obtain a copy of the License at')
Token(type='lc', text=';;;')
Token(type='lc', text=';;; http://www.apache.org/licenses/LICENSE-2.0')
Token(type='lc', text=';;;')
Token(type='lc', text=';;; Unless required by applicable law or agreed to in writing, software')
Token(type='lc', text=';;; distributed under the License is distributed on an "AS IS" BASIS,')
Token(type='lc', text=';;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.')
Token(type='lc', text=';;; See the License for the specific language governing permissions and')
Token(type='lc', text=';;; limitations under the License.')
Token(type='nl', text='\n')
Token(type='lc', text=';;; this makes loading this file independently bomb')
Token(type='lc', text=';(define read)')
Token(type='lc', text=';(define $read)')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='rcb')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='ip')
Token(type='lc', text='; input port')
Token(type='at', text='sfd')
Token(type='lc', text='; a source-file descriptor or #f')
Token(type='at', text='a?')
Token(type='lc', text='; if true, wrap s-expressions with source annotations')
Token(type='at', text='who')
Token(type='lc', text="; who's calling (read, read-token)")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';;; xdefine, xcall, xmvlet, and xvalues manage implicit arguments and')
Token(type='lc', text=';;; return values for most of the procedures defined in this file.  This')
Token(type='lc', text=';;; simplifies the code and makes it much easier to add new arguments')
Token(type='lc', text=';;; universally.  The implicit variables are:')
Token(type='lc', text=';;;   [i ] rcb      reader control block')
Token(type='lc', text=';;;   [io] fp       current file position or #f')
Token(type='lc', text=';;;   [i ] bfp      beginning file position or #f')
Token(type='lc', text=';;;   [io] tb       token buffer')
Token(type='lc', text=';;;   [io] it       insert table (for marks and references)')
Token(type='lc', text=';;; i: input (xcall argument)')
Token(type='lc', text=';;; o: output (xvalues return value)')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='xlambda')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='args')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='rcb')
Token(type='at', text='fp')
Token(type='at', text='bfp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rcb')
Token(type='at', text='fp')
Token(type='at', text='bfp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='at', text='.')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='.')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='rcb')
Token(type='at', text='fp')
Token(type='at', text='bfp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='rcb')
Token(type='at', text='fp')
Token(type='at', text='bfp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='at', text='.')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='xcall')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='p')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='rcb')
Token(type='at', text='fp')
Token(type='at', text='bfp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='p')
Token(type='at', text='rcb')
Token(type='at', text='fp')
Token(type='at', text='bfp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='exp')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='fp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='call-with-values')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='at', text='exp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='fp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='fp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='values')
Token(type='at', text='fp')
Token(type='at', text='tb')
Token(type='at', text='it')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';;; state-lambda, define-state, *state, and state-return are used to form')
Token(type='lc', text=';;; scanner states.  They are defined in terms of xdefine and family.')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='ob', text='(')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='xlambda')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='xlambda')
Token(type='ob', text='(')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='xdefine')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='*state')
Token(type='lc', text='; move to state')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='s')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='xcall')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='xcall')
Token(type='at', text='s')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='state-return')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='xvalues')
Token(type='at', text='bfp')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='xvalues')
Token(type='at', text='bfp')
Token(type='at', text="'type")
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='call-with-token')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='pexpr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='xcall')
Token(type='at', text='xmvlet')
Token(type='at', text='bfp')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='p')
Token(type='at', text='pexpr')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='bfp')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='p')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='at', text='expr1')
Token(type='at', text='expr2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'type")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'value")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='xcall')
Token(type='at', text='xmvlet')
Token(type='at', text='bfp')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='bfp')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='expr1')
Token(type='at', text='expr2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';;; token-buffers are represented as strings and are expanded as necessary')
Token(type='lc', text=';;; by the stretch form, which otherwise behaves much like string-set!')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-stretch-buffer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='tb')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='g')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='tb')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='g')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='tb')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string-stretch')
Token(type='at', text='tb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string-set!')
Token(type='at', text='tb')
Token(type='at', text='g')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';;; insert tables are eq hash tables; could simply use vector that grows')
Token(type='lc', text=';;; on demand, except that programmer might use widely spread numbers or')
Token(type='lc', text=';;; even bignums')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-insert-table')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='it')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='it')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='it')
Token(type='ob', text='(')
Token(type='at', text='make-eq-hashtable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';;; with-read-char, with-peek-char, and with-unread-char')
Token(type='lc', text=';;; manage the fp (file-position) value')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-read-char')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='id')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'id")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='rcb')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='id')
Token(type='ob', text='(')
Token(type='at', text='read-char')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='fp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-peek-char')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='id')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'id")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='id')
Token(type='ob', text='(')
Token(type='at', text='peek-char')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-unread-char')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='?c')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='key')
Token(type='at', text='rcb')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='at', text='?c')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='fp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='delayed-record')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='immutable')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immutable')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immutable')
Token(type='at', text='bfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immutable')
Token(type='at', text='efp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='update')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rtd')
Token(type='at', text='vals')
Token(type='at', text='bfp')
Token(type='at', text='efp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='rtd')
Token(type='at', text='vals')
Token(type='at', text='bfp')
Token(type='at', text='efp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='insert')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='immutable')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immutable')
Token(type='at', text='bfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immutable')
Token(type='at', text='efp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='seen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='visited')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='bfp')
Token(type='at', text='efp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='n')
Token(type='at', text='bfp')
Token(type='at', text='efp')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='char-name-table')
Token(type='ob', text='(')
Token(type='at', text='make-hashtable')
Token(type='at', text='char->integer')
Token(type='at', text='char=?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='digit-value')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='char<=?')
Token(type='ch', text='#\\0')
Token(type='at', text='c')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-')
Token(type='at', text='c')
Token(type='ch', text='#\\0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='char<=?')
Token(type='ch', text='#\\A')
Token(type='at', text='c')
Token(type='ch', text='#\\Z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-')
Token(type='at', text='c')
Token(type='ch', text='#\\7')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='char<=?')
Token(type='ch', text='#\\a')
Token(type='at', text='c')
Token(type='ch', text='#\\z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-')
Token(type='at', text='c')
Token(type='ch', text='#\\W')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='36')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='v')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/intern')
Token(type='at', text='maybe-fold/gensym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='fold-case?')
Token(type='at', text='ip')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='at', text='slashed?')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-fold-case')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-no-fold-case')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='case-sensitive')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-fold/intern')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fold-case?')
Token(type='at', text='ip')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='ob', text='(')
Token(type='at', text='string-foldcase')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$intern2')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='m')
Token(type='at', text='slashed1?')
Token(type='at', text='slashed2?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fold-case?')
Token(type='at', text='ip')
Token(type='at', text='slashed1?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s1')
Token(type='ob', text='(')
Token(type='at', text='string-foldcase')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='s2')
Token(type='ob', text='(')
Token(type='at', text='string-append')
Token(type='at', text='s1')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fold-case?')
Token(type='at', text='ip')
Token(type='at', text='slashed2?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string-foldcase')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$intern3')
Token(type='at', text='s2')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='s1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='s2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fold-case?')
Token(type='at', text='ip')
Token(type='at', text='slashed2?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s2')
Token(type='ob', text='(')
Token(type='at', text='string-append')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string-foldcase')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$intern3')
Token(type='at', text='s2')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='s2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$intern3')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-fold/gensym')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fold-case?')
Token(type='at', text='ip')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='gensym')
Token(type='ob', text='(')
Token(type='at', text='string-foldcase')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='gensym')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='string-stretch')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='lc', text='; string overhead header plus 1 for null byte')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='overhead-bytes')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-string')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; allocator will align anyway, so start with as many as we')
Token(type='lc', text='; can without grabbing more real space')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='smart-size')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='c-alloc-align')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='overhead-bytes')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='overhead-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='lc', text='; start with at least 5 characters.')
Token(type='ob', text='(')
Token(type='at', text='make-string')
Token(type='ob', text='(')
Token(type='at', text='smart-size')
Token(type='at', text='5')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; double n and double the overhead doubles the whole object')
Token(type='lc', text='; and thereby maintains the alignment w/o wasting space')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new')
Token(type='ob', text='(')
Token(type='at', text='make-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='n')
Token(type='at', text='n')
Token(type='at', text='overhead-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string-set!')
Token(type='at', text='new')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='string-ref')
Token(type='at', text='old')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='$make-source-object')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='stx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='stx')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='sfd-expr')
Token(type='at', text='bfp-expr')
Token(type='at', text='efp-expr')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='sfd')
Token(type='at', text='sfd-expr')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='bfp-expr')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='efp')
Token(type='at', text='efp-expr')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='$current-mso')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='$current-mso')
Token(type='cb', text=')')
Token(type='at', text='sfd')
Token(type='at', text='bfp')
Token(type='at', text='efp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-source')
Token(type='at', text='sfd')
Token(type='at', text='bfp')
Token(type='at', text='efp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-error')
Token(type='at', text='ir?')
Token(type='at', text='start?')
Token(type='at', text='msg')
Token(type='at', text='.')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='console-input-port')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$lexical-error')
Token(type='ob', text='(')
Token(type='at', text='rcb-who')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='msg')
Token(type='at', text='args')
Token(type='at', text='ip')
Token(type='at', text='ir?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$lexical-error')
Token(type='ob', text='(')
Token(type='at', text='rcb-who')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='st', text='"~? on ~s"')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='msg')
Token(type='at', text='args')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='at', text='ip')
Token(type='at', text='ir?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rcb-sfd')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$lexical-error')
Token(type='ob', text='(')
Token(type='at', text='rcb-who')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='msg')
Token(type='at', text='args')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='$make-source-object')
Token(type='ob', text='(')
Token(type='at', text='rcb-sfd')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='at', text='start?')
Token(type='at', text='ir?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$lexical-error')
Token(type='ob', text='(')
Token(type='at', text='rcb-who')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='st', text='"~? at char ~a of ~s"')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='msg')
Token(type='at', text='args')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='start?')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='at', text='ip')
Token(type='at', text='ir?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-eof-error')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unexpected end-of-file reading ~a"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-delimiter-error')
Token(type='at', text='c')
Token(type='at', text='what')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid delimiter ~a for ~a"')
Token(type='at', text='c')
Token(type='at', text='what')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-nonstandard-error')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"~a syntax is not allowed in #!r6rs mode"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='nonstandard')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='str')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='rcb')
Token(type='at', text='xcall')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-r6rs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-nonstandard-error')
Token(type='at', text='str')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-nonstandard-delimiter-error')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"delimiter ~a is not allowed in #!r6rs mode"')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='nonstandard-delimiter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='rcb')
Token(type='at', text='xcall')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-r6rs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-nonstandard-delimiter-error')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='eof')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\tab')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\Z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='1')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\(')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='lparen')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\)')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='rparen')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\[')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='lbrack')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\]')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='rbrack')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text="#\\'")
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'quote")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number-or-symbol')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\-')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-minus')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\+')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-plus')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\;')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-comment')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\#')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\"')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-dot')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\,')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-comma')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\`')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'quasiquote")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\*')
Token(type='ch', text='#\\=')
Token(type='ch', text='#\\<')
Token(type='ch', text='#\\>')
Token(type='ch', text='#\\/')
Token(type='ch', text='#\\!')
Token(type='ch', text='#\\$')
Token(type='ch', text='#\\%')
Token(type='ch', text='#\\&')
Token(type='ch', text='#\\:')
Token(type='ch', text='#\\?')
Token(type='ch', text='#\\^')
Token(type='ch', text='#\\_')
Token(type='ch', text='#\\~')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='1')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='$constituent?')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='1')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\|')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\\\')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\{')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"open brace"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'{")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\}')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"close brace"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'}")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\page')
Token(type='ch', text='#\\return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern-nonstandard')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-minus')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'-")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'-")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\>')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\-')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='1')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'-")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'-")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\-')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number-or-symbol')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-plus')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'+")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'+")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'+")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'+")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\+')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number-or-symbol')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-dot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='dot')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\.')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-dot-dot')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='dot')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='dot')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='dot')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number-or-symbol')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-dot-dot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='".. symbol"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'..")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\.')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-dot-dot-dot')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='1')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='2')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern-nonstandard')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-dot-dot-dot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'...")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'...")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'...")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text="'...")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='1')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='2')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='3')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern-nonstandard')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-comma')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'unquote")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\@')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'unquote-splicing")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'unquote")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-hash-comma')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'unsyntax")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\@')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'unsyntax-splicing")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'unsyntax")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-comment')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\return')
Token(type='ch', text='#\\nel')
Token(type='ch', text='#\\ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-comment')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-hash')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"# prefix"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\f')
Token(type='ch', text='#\\F')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token-delimiter')
Token(type='at', text='#f')
Token(type='st', text='"boolean"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\t')
Token(type='ch', text='#\\T')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token-delimiter')
Token(type='at', text='#t')
Token(type='st', text='"boolean"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\\\')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-char')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\(')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='vparen')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text=';) for paren bouncer')
Token(type='ob', text='[')
Token(type='ch', text="#\\'")
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'syntax")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\`')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'quasisyntax")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\,')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash-comma')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\#')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='1')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash-num')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c')
Token(type='at', text='10')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\@')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='fasl')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\[')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#[...] record"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='record-brack')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\{')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#{...} gensym"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-gensym')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\&')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#& box"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='box')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\;')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='rcb-who')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text="'read-token")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='quote')
Token(type='at', text="'datum-comment")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-expression-comment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\!')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash-bang')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\x')
Token(type='ch', text='#\\X')
Token(type='ch', text='#\\o')
Token(type='ch', text='#\\O')
Token(type='ch', text='#\\b')
Token(type='ch', text='#\\B')
Token(type='ch', text='#\\d')
Token(type='ch', text='#\\D')
Token(type='ch', text='#\\i')
Token(type='ch', text='#\\I')
Token(type='ch', text='#\\e')
Token(type='ch', text='#\\E')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\#')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='1')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\v')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash-v')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\%')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#% primitive"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text="'$primitive")
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/intern')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\:')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#: gensym"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/gensym')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\|')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-block-comment')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid sharp-sign prefix #~c"')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-delimiter')
Token(type='at', text='x')
Token(type='at', text='what')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-delimiter-error')
Token(type='at', text='c')
Token(type='at', text='what')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-gensym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"gensym"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='rec')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='slashed1?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"gensym"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\tab')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='f')
Token(type='at', text='n')
Token(type='at', text='slashed1?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='n')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='m')
Token(type='at', text='slashed2?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"gensym"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/intern')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='m')
Token(type='at', text='slashed1?')
Token(type='at', text='slashed2?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"expected close brace terminating gensym syntax"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-block-comment')
Token(type='at', text='depth')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"block comment"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\|')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"block comment"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\#')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='at', text='depth')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-block-comment')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='depth')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-block-comment')
Token(type='at', text='depth')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\#')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"block comment"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\|')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-block-comment')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='depth')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-block-comment')
Token(type='at', text='depth')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-block-comment')
Token(type='at', text='depth')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-hash-num')
Token(type='at', text='n')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"# prefix"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash-num')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='n')
Token(type='at', text='10')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c')
Token(type='at', text='10')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\(')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#<n>(...) vector"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='vnparen')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; ) for paren bouncer')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\r')
Token(type='ch', text='#\\R')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#<n>r number prefix"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\q')
Token(type='ch', text='#\\Q')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"outdated object file format"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\#')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#<n># insert"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-insert')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\=')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#<n>= mark"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-mark')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\v')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash-num-v')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\%')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='memv')
Token(type='at', text='n')
Token(type='ob', text="'(")
Token(type='at', text='2')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid sharp-sign prefix ~a~a"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#<n>% primitive"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='m')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text="'$primitive")
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/intern')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='at', text='m')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid sharp-sign prefix ~a~a"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-insert')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-insert-table')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='insert')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-mark')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-insert-table')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='mark')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-char')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"character"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c1')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\F')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='0')
Token(type='ch', text='#\\x')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-char-hex')
Token(type='at', text='0')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token-delimiter')
Token(type='at', text='c')
Token(type='st', text='"character"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\w')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\y')
Token(type='at', text='-')
Token(type='ch', text='#\\z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\Z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c1')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\Z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-to-delimiter')
Token(type='at', text='0')
Token(type='at', text='c')
Token(type='at', text='rd-token-charname')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token-delimiter')
Token(type='at', text='c')
Token(type='st', text='"character"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c1')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"octal character"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c2')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c2')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c2')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"character"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c1')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c2')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='v')
Token(type='at', text='255')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid character #\\\\~a~a~a"')
Token(type='at', text='c')
Token(type='at', text='c1')
Token(type='at', text='c2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token-delimiter')
Token(type='ob', text='(')
Token(type='at', text='integer->char')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='st', text='"character"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid character #\\\\~a~a"')
Token(type='at', text='c')
Token(type='at', text='c1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token-delimiter')
Token(type='at', text='c')
Token(type='st', text='"character"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token-delimiter')
Token(type='at', text='c')
Token(type='st', text='"character"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-char-hex')
Token(type='at', text='n')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='int->char')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='at', text='#xD7FF')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='#xE000')
Token(type='at', text='n')
Token(type='at', text='#x10FFFF')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='integer->char')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid hex character escape ~a"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='int->char')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\F')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-char-hex')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='n')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='int->char')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='int->char')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='int->char')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-to-delimiter')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='at', text='rd-token-charname')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-charname')
Token(type='at', text='n')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='r6rs-char-names')
Token(type='ob', text="'(")
Token(type='ob', text='(')
Token(type='at', text='nul')
Token(type='at', text='.')
Token(type='ch', text='#\\nul')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='alarm')
Token(type='at', text='.')
Token(type='ch', text='#\\alarm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='backspace')
Token(type='at', text='.')
Token(type='ch', text='#\\backspace')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tab')
Token(type='at', text='.')
Token(type='ch', text='#\\tab')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='linefeed')
Token(type='at', text='.')
Token(type='ch', text='#\\newline')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='.')
Token(type='ch', text='#\\newline')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vtab')
Token(type='at', text='.')
Token(type='ch', text='#\\vtab')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='page')
Token(type='at', text='.')
Token(type='ch', text='#\\page')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='return')
Token(type='at', text='.')
Token(type='ch', text='#\\return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='esc')
Token(type='at', text='.')
Token(type='ch', text='#\\esc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='space')
Token(type='at', text='.')
Token(type='ch', text='#\\space')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='delete')
Token(type='at', text='.')
Token(type='ch', text='#\\delete')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='r6rs-char-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='assq')
Token(type='at', text='x')
Token(type='at', text='r6rs-char-names')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='at', text='cdr')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/intern')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-r6rs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='r6rs-char-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='valid-prefix?')
Token(type='at', text='s')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='symbol->string')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-r6rs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='car')
Token(type='at', text='r6rs-char-names')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='keys')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='hashtable-entries')
Token(type='at', text='char-name-table')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='vector->list')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"character"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid character name #\\\\~a"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='valid-prefix?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='string-prefix?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='prefix?')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='char=?')
Token(type='ob', text='(')
Token(type='at', text='string-ref')
Token(type='at', text='x')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string-ref')
Token(type='at', text='y')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='prefix?')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='valid-prefix?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ormap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string-prefix?')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-hash-bang')
Token(type='cb', text=')')
Token(type='lc', text='; more complex than necessary because #!r6rs need not be delimited')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash-bang2')
Token(type='at', text='0')
Token(type='lc', text='; list only those that need not be delimited')
Token(type='ob', text="'(")
Token(type='ob', text='(')
Token(type='st', text='"r6rs"')
Token(type='at', text='.')
Token(type='at', text='r6rs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='st', text='"fold-case"')
Token(type='at', text='.')
Token(type='at', text='fold-case')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='st', text='"no-fold-case"')
Token(type='at', text='.')
Token(type='at', text='no-fold-case')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='st', text='"chezscheme"')
Token(type='at', text='.')
Token(type='at', text='chezscheme')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-hash-bang2')
Token(type='at', text='i')
Token(type='at', text='undelimited*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ormap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='undelimited*')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='r6rs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$set-port-flags!')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-r6rs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fold-case')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$reset-port-flags!')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-no-fold-case')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$set-port-flags!')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-fold-case')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='no-fold-case')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$reset-port-flags!')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-fold-case')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$set-port-flags!')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-no-fold-case')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='chezscheme')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$reset-port-flags!')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-r6rs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unexpected #!~s"')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"#! syntax"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='undelimited*')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char=?')
Token(type='ob', text='(')
Token(type='at', text='string-ref')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='undelimited*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='undelimited*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-to-delimiter')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='s')
Token(type='st', text='"eof"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#!eof"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='#!eof')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='s')
Token(type='st', text='"bwp"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#!bwp"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='#!bwp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='s')
Token(type='st', text='"base-rtd"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#!base-rtd"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='at', text='#!base-rtd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='valid-prefix?')
Token(type='at', text='s')
Token(type='ob', text="'(")
Token(type='st', text='"eof"')
Token(type='st', text='"bwp"')
Token(type='st', text='"base-rtd"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"#! syntax"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid syntax #!~a"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-hash-bang2')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='undelimited*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-hash-v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-to-delimiter')
Token(type='at', text='0')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='valid-prefix?')
Token(type='at', text='s')
Token(type='ob', text="'(")
Token(type='st', text='"fx"')
Token(type='st', text='"u8"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"#v prefix"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid syntax #v~a"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\(')
Token(type='lc', text=';)')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='s')
Token(type='st', text='"fx"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#vfx(...) fxvector"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='vfxparen')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='s')
Token(type='st', text='"u8"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='vu8paren')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid syntax #v~a("')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text=';)')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='valid-prefix?')
Token(type='at', text='s')
Token(type='ob', text="'(")
Token(type='st', text='"fx"')
Token(type='st', text='"u8"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"expected left paren after #v~a prefix"')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid syntax #v~a~a"')
Token(type='at', text='s')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-hash-num-v')
Token(type='at', text='preflen')
Token(type='at', text='nelts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-to-delimiter')
Token(type='at', text='0')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='s')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='valid-prefix?')
Token(type='at', text='s')
Token(type='ob', text="'(")
Token(type='st', text='"fx"')
Token(type='st', text='"u8"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"#v prefix"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid syntax #~v,\'0dv~a"')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='preflen')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='nelts')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\(')
Token(type='lc', text=';)')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='s')
Token(type='st', text='"fx"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#<n>vfx(...) fxvector"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='vfxnparen')
Token(type='at', text='nelts')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='s')
Token(type='st', text='"u8"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"#<n>vu8(...) bytevector"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='vu8nparen')
Token(type='at', text='nelts')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid syntax #~v,\'0dv~a("')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='preflen')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='nelts')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text=';)')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='valid-prefix?')
Token(type='at', text='s')
Token(type='ob', text="'(")
Token(type='st', text='"fx"')
Token(type='st', text='"u8"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"expected left paren after #~v,\'0dv~a prefix"')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='preflen')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='nelts')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid syntax #~v,\'0dv~a~a"')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='preflen')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='nelts')
Token(type='at', text='s')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-to-delimiter')
Token(type='at', text='n')
Token(type='at', text='c')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='next')
Token(type='at', text='n')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='next')
Token(type='at', text='n')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='next')
Token(type='at', text='n')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='n')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-to-delimiter')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='intraline-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='char=?')
Token(type='at', text='c')
Token(type='ch', text='#\\tab')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='char-general-category')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text="'Zs")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-string')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='char-bfp')
Token(type='at', text='fp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\"')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\\\')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\\\')
Token(type='ch', text='#\\"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\n')
Token(type='ch', text='#\\a')
Token(type='ch', text='#\\b')
Token(type='ch', text='#\\f')
Token(type='ch', text='#\\r')
Token(type='ch', text='#\\t')
Token(type='ch', text='#\\v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='ch', text='#\\a')
Token(type='ch', text='#\\bel')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\b')
Token(type='ch', text='#\\backspace')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\f')
Token(type='ch', text='#\\page')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\n')
Token(type='ch', text='#\\newline')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\r')
Token(type='ch', text='#\\return')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\t')
Token(type='ch', text='#\\tab')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\v')
Token(type='ch', text='#\\vt')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\x')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string-hex-char')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='at', text='char-bfp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\return')
Token(type='ch', text='#\\nel')
Token(type='ch', text='#\\ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string-whitespace')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='intraline-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string-whitespace')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"octal string-character"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c1')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c2')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c2')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c2')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c1')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c2')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='v')
Token(type='at', text='255')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='char-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid string character \\\\~c~c~c"')
Token(type='at', text='c')
Token(type='at', text='c1')
Token(type='at', text='c2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='integer->char')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c2')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='char-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid string character \\\\~c~c"')
Token(type='at', text='c')
Token(type='at', text='c1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='char-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid string character \\\\~c"')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text="#\\'")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"\\\\\' string character"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='char-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid string character \\\\~c"')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\nel')
Token(type='ch', text='#\\ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='ch', text='#\\newline')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\nel')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='ch', text='#\\newline')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='ch', text='#\\newline')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-string-whitespace')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\nel')
Token(type='ch', text='#\\ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string-skipwhite')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\nel')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string-skipwhite')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string-skipwhite')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='intraline-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-token-string-whitespace')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unexpected character ~c after \\\\<intraline whitespace> in string"')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-string-skipwhite')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='intraline-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string-skipwhite')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-token-string-hex-char')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='at', text='char-bfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c1')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"string"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\F')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string-hex-char')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='n')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c1')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='char-bfp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\;')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='at', text='#xD7FF')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='#xE000')
Token(type='at', text='n')
Token(type='at', text='#x10FFFF')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='integer->char')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-string')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='char-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid code point value ~s in string hex escape"')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='char-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid character ~c in string hex escape"')
Token(type='at', text='c1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-make-number-or-symbol')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='z')
Token(type='ob', text='(')
Token(type='at', text='$str->num')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='10')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-r6rs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='number?')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='at', text='z')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='z')
Token(type='at', text="'norep")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='st', text='"cannot represent ~a"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='z')
Token(type='at', text="'!r6rs")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-nonstandard-error')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~a number"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~a symbol"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/intern')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-number-or-symbol')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-make-number-or-symbol')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\z')
Token(type='cb', text=')')
Token(type='ch', text='#\\-')
Token(type='ch', text='#\\+')
Token(type='ch', text='#\\.')
Token(type='ch', text='#\\/')
Token(type='ch', text='#\\@')
Token(type='ch', text='#\\#')
Token(type='ch', text='#\\|')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number-or-symbol')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\Z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number-or-symbol')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-make-number-or-symbol')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-make-number-or-symbol')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-make-number-or-symbol')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='i')
Token(type='at', text='#f')
Token(type='at', text='rd-token-intern-nonstandard')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-make-number')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='z')
Token(type='ob', text='(')
Token(type='at', text='$str->num')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='10')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-r6rs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='number?')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='at', text='z')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='z')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-peek-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"number"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='z')
Token(type='at', text="'!r6rs")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-nonstandard-error')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~a number"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='z')
Token(type='at', text="'norep")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='st', text='"cannot represent ~a"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid number syntax ~a"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-number')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-make-number')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\Z')
Token(type='cb', text=')')
Token(type='ch', text='#\\-')
Token(type='ch', text='#\\+')
Token(type='ch', text='#\\.')
Token(type='ch', text='#\\/')
Token(type='ch', text='#\\@')
Token(type='ch', text='#\\#')
Token(type='ch', text='#\\|')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\]')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-make-number')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-make-number')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-make-number')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-number')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-intern')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/intern')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-intern-nonstandard')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~a symbol"')
Token(type='ob', text='(')
Token(type='at', text='substring')
Token(type='at', text='tb')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-return')
Token(type='at', text='atomic')
Token(type='ob', text='(')
Token(type='at', text='maybe-fold/intern')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='tb')
Token(type='at', text='n')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='i')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='next')
Token(type='at', text='i')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text=';[(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\space')
Token(type='ch', text='#\\newline')
Token(type='ch', text='#\\)')
Token(type='ch', text='#\\]')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='next')
Token(type='at', text='i')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\-')
Token(type='ch', text='#\\?')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='ch', text='#\\*')
Token(type='ch', text='#\\!')
Token(type='ch', text='#\\=')
Token(type='ch', text='#\\>')
Token(type='ch', text='#\\<')
Token(type='ch', text='#\\$')
Token(type='ch', text='#\\%')
Token(type='ch', text='#\\&')
Token(type='ch', text='#\\/')
Token(type='ch', text='#\\:')
Token(type='ch', text='#\\^')
Token(type='ch', text='#\\_')
Token(type='ch', text='#\\~')
Token(type='ch', text='#\\+')
Token(type='ch', text='#\\.')
Token(type='ch', text='#\\@')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\Z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\\\')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"symbol"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\x')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol-hex-char')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='fp')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"non-hex back-slash symbol escape"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\|')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='st', text='"|...| symbol escape"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol-bar')
Token(type='at', text='i')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\(')
Token(type='ch', text='#\\[')
Token(type='ch', text='#\\"')
Token(type='ch', text='#\\;')
Token(type='ch', text='#\\#')
Token(type='cb', text=')')
Token(type='lc', text=';)] for paren bouncer')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='next')
Token(type='at', text='i')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='char-whitespace?')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='next')
Token(type='at', text='i')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='$constituent?')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='$subsequent?')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\{')
Token(type='ch', text='#\\}')
Token(type='ch', text="#\\'")
Token(type='ch', text='#\\`')
Token(type='ch', text='#\\,')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nonstandard-delimiter')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='next')
Token(type='at', text='i')
Token(type='at', text='slashed?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='nonstandard')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"character ~c in symbol"')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-token-symbol-hex-char')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='at', text='char-bfp')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c1')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"symbol"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='ch', text='#\\0')
Token(type='at', text='-')
Token(type='ch', text='#\\9')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\a')
Token(type='at', text='-')
Token(type='ch', text='#\\f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ch', text='#\\A')
Token(type='at', text='-')
Token(type='ch', text='#\\F')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol-hex-char')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='n')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='digit-value')
Token(type='at', text='c1')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='char-bfp')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ch', text='#\\;')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='at', text='#xD7FF')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='#xE000')
Token(type='at', text='n')
Token(type='at', text='#x10FFFF')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='integer->char')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='slashed?')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='char-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid code point value ~s in symbol hex escape"')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c1')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='char-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid character ~c in symbol hex escape"')
Token(type='at', text='c1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-state')
Token(type='ob', text='(')
Token(type='at', text='rd-token-symbol-bar')
Token(type='at', text='i')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='state-case')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='eof')
Token(type='ob', text='(')
Token(type='at', text='with-unread-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"symbol"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ch', text='#\\|')
Token(type='ob', text='(')
Token(type='at', text='with-read-char')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol')
Token(type='at', text='c')
Token(type='at', text='i')
Token(type='at', text='#t')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-stretch-buffer')
Token(type='at', text='i')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='*state')
Token(type='at', text='rd-token-symbol-bar')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-top-level')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='atomic')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='value')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'rparen")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'rbrack")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='rcb-ip')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='console-input-port')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call-with-token')
Token(type='at', text='rd-top-level')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='it')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fix-graph')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='rd-set-car!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-car!')
Token(type='at', text='obj')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='rd-set-cdr!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-cdr!')
Token(type='at', text='obj')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='rd-set-box!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-box!')
Token(type='at', text='obj')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='rd-field-set!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='obj')
Token(type='at', text='i')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='$record-type-descriptor')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='csv7:record-field-mutator')
Token(type='at', text='d')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='at', text='obj')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='rd-set-vector-tail!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='m')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='vector-length')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='m')
Token(type='at', text='m')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='m')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='x')
Token(type='at', text='m')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='m')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='work-list')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-update!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='dr')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-update-set!')
Token(type='at', text='dr')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-update')
Token(type='at', text='dr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='seen-table')
Token(type='ob', text='(')
Token(type='at', text='make-eq-hashtable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='at', text='x')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='insert?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='insert-seen')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='insert-bfp')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='insert-efp')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"mark #~s= missing"')
Token(type='ob', text='(')
Token(type='at', text='insert-n')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='z')
Token(type='ob', text='(')
Token(type='at', text='insert-obj')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='insert-visited')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='insert?')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='delayed-record?')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-update!')
Token(type='at', text='z')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='insert-visited-set!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='at', text='z')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; we get shared structure from annotations, so we avoid duplicate')
Token(type='lc', text='; processing and possible infinite regression by dropping out here')
Token(type='lc', text="; if we see something we've seen before.")
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='eq-hashtable-cell')
Token(type='at', text='seen-table')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set-cdr!')
Token(type='at', text='a')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='delayed-record?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-update!')
Token(type='at', text='x')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='delayed-record?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-vals')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-update!')
Token(type='at', text='x')
Token(type='at', text='update!')
Token(type='at', text='obj')
Token(type='at', text='idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='work-list')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='work-list')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='rd-set-car!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='rd-set-cdr!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vector?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='vector-length')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='m')
Token(type='ob', text='(')
Token(type='at', text='$last-new-vector-element')
Token(type='at', text='vector-length')
Token(type='at', text='vector-ref')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='i')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='x')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='at', text='vector-set!')
Token(type='at', text='x')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='x')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='at', text='rd-set-vector-tail!')
Token(type='at', text='x')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$record?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='$record-type-descriptor')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='csv7:record-type-field-names')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='fields')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='fields')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='csv7:record-field-accessible?')
Token(type='at', text='d')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='csv7:record-field-accessor')
Token(type='at', text='d')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='rd-field-set!')
Token(type='at', text='x')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='box?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='ob', text='(')
Token(type='at', text='unbox')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='rd-set-box!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rd-fix-graph')
Token(type='at', text='x')
Token(type='at', text='rd-set-car!')
Token(type='at', text='p')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='wl')
Token(type='at', text='work-list')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rwl')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='progress?')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='wl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='rwl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='progress?')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='rwl')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-bfp')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rwl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-efp')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rwl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unresolvable cycle constructing record of type ~s"')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-rtd')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rwl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='dr')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='wl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rtd')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-rtd')
Token(type='at', text='dr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vals')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-vals')
Token(type='at', text='dr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='csv7:record-type-field-names')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='delayed-record?')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='csv7:record-field-mutable?')
Token(type='at', text='rtd')
Token(type='at', text='f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='fields')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='r')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='record-constructor')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='delayed-record?')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-update!')
Token(type='at', text='v')
Token(type='at', text='rd-field-set!')
Token(type='at', text='r')
Token(type='at', text='f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='fields')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='delayed-record-update')
Token(type='at', text='dr')
Token(type='cb', text=')')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='wl')
Token(type='cb', text=')')
Token(type='at', text='rwl')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='wl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='dr')
Token(type='at', text='rwl')
Token(type='cb', text=')')
Token(type='at', text='progress?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-help')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-annotation')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='$make-source-object')
Token(type='ob', text='(')
Token(type='at', text='rcb-sfd')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='at', text='stripped')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='stripped')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; trick cp0 into not inlining rd-help into rd above, which would result')
Token(type='lc', text='; in a call-with-values expression that cp1 cannot turn into mvlet and')
Token(type='lc', text='; concomitant closure creation expenses')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='GROSS-HACK')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-help')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-help')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='atomic')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='value')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-paren-list')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-brack-list')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-quote')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-vector')
Token(type='at', text='bfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vnparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-sized-vector')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vfxparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fxvector')
Token(type='at', text='bfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vfxnparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-sized-fxvector')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vu8paren')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-bytevector')
Token(type='at', text='bfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vu8nparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-sized-bytevector')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='box')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-box')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fasl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unsupported old fasl format detected---use new format with binary i/o"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mark')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-mark')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='insert')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-insert')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='record-brack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-record')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unexpected close parenthesis"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unexpected close bracket"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unexpected dot (.)"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; eof should be caught elsewhere, but just in case ...')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"unexpected end-of-file"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"unexpected internal token type ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-paren-list')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr-bfp')
Token(type='at', text='bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"parenthesized list terminated by bracket"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"list"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='first')
Token(type='at', text='stripped-first')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='rest')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-paren-tail')
Token(type='at', text='expr-bfp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='first')
Token(type='at', text='rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='stripped-first')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-paren-tail')
Token(type='at', text='expr-bfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"parenthesized list terminated by bracket"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"list"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"expected one item after dot (.)"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"list"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"parenthesized list terminated by bracket"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unexpected dot"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"list"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"more than one item found after dot (.)"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='first')
Token(type='at', text='stripped-first')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='rest')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-paren-tail')
Token(type='at', text='expr-bfp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='first')
Token(type='at', text='rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='stripped-first')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-brack-list')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr-bfp')
Token(type='at', text='bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"bracketed list terminated by parenthesis"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"bracketed list"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='first')
Token(type='at', text='stripped-first')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='rest')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-brack-tail')
Token(type='at', text='expr-bfp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='first')
Token(type='at', text='rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='stripped-first')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-brack-tail')
Token(type='at', text='expr-bfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"bracketed list terminated by parenthesis"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"bracketed list"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"expected one item after dot (.)"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"bracketed list"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='st', text='"bracketed list terminated by parenthesis"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unexpected dot"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"bracketed list"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"more than one item found after dot (.)"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='first')
Token(type='at', text='stripped-first')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='rest')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-brack-tail')
Token(type='at', text='expr-bfp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='first')
Token(type='at', text='rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='stripped-first')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-quote')
Token(type='at', text='kind')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr-bfp')
Token(type='at', text='bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='ob', text='(')
Token(type='at', text='symbol->string')
Token(type='at', text='kind')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='kind')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='kind')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-record')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr-bfp')
Token(type='at', text='bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"record"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'atomic")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"non-symbol found after #["')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text=';]')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='record-reader')
Token(type='ob', text='(')
Token(type='at', text='symbol->string')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='at', text='name')
Token(type='at', text="'*rtd*")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='decls')
Token(type='ob', text='(')
Token(type='at', text='csv7:record-type-field-decls')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='vals')
Token(type='at', text='stripped-vals')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-record-tail')
Token(type='at', text='expr-bfp')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='decls')
Token(type='cb', text=')')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; strip annotations from vals headed for non-ptr fields')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='vals')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='stripped-vals')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='decl')
Token(type='at', text='val')
Token(type='at', text='sval')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='m')
Token(type='at', text='t')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='filter-foreign-type')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='at', text="'scheme-object")
Token(type='cb', text=')')
Token(type='at', text='val')
Token(type='at', text='sval')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='decl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='decls')
Token(type='at', text='vals')
Token(type='at', text='stripped-vals')
Token(type='cb', text=')')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fds')
Token(type='at', text='decls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vs')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='stripped-vals')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='fds')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='record-constructor')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='at', text='vals')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='record-constructor')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='at', text='stripped-vals')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='m')
Token(type='at', text='t')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='m')
Token(type='at', text="'immutable")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='filter-foreign-type')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='at', text="'scheme-object")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='fds')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='insert?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='vs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='delayed-record?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='vs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='make-delayed-record')
Token(type='at', text='rtd')
Token(type='at', text='vals')
Token(type='at', text='expr-bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-delayed-record')
Token(type='at', text='rtd')
Token(type='at', text='stripped-vals')
Token(type='at', text='expr-bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='fds')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='vs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"unrecognized record name ~s"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-record-tail')
Token(type='at', text='expr-bfp')
Token(type='at', text='n')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rbrack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"too few fields supplied for record ~s"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"record"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='first')
Token(type='at', text='stripped-first')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"too many fields supplied for record ~s"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='rest')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-record-tail')
Token(type='at', text='expr-bfp')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='first')
Token(type='at', text='rest')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='stripped-first')
Token(type='at', text='stripped-rest')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-vector')
Token(type='at', text='expr-bfp')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"vector"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='at', text='stripped-v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-vector')
Token(type='at', text='expr-bfp')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='stripped-v')
Token(type='at', text='i')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='at', text='stripped-v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-sized-vector')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxnonnegative?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='bfp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='fp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid vector length ~s"')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fill-vector')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-fill-vector')
Token(type='at', text='expr-bfp')
Token(type='at', text='v')
Token(type='at', text='stripped-v')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='0')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='prev')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='prev')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='stripped-v')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='prev')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='stripped-v')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='stripped-v')
Token(type='at', text='i')
Token(type='at', text='prev')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='at', text='stripped-v')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"vector"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"too many vector elements supplied"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='stripped-v')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='stripped-v')
Token(type='at', text='i')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fill-vector')
Token(type='at', text='expr-bfp')
Token(type='at', text='v')
Token(type='at', text='stripped-v')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=";; an fxvector contains a sequence of fixnum tokens.  we don't handle")
Token(type='lc', text=";; graph marks and references because to do so generally, we'd have to")
Token(type='lc', text=';; put non-fixnums (insert records) into the fxvector or perhaps')
Token(type='lc', text=';; somehow generalize delayed records to handle fxvectors')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-fxvector')
Token(type='at', text='expr-bfp')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='make-fxvector')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"fxvector"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'atomic")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"non-fixnum found in fxvector"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fxvector')
Token(type='at', text='expr-bfp')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxvector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-sized-fxvector')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxnonnegative?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='bfp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='fp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid fxvector length ~s"')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fill-fxvector')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='make-fxvector')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-fill-fxvector')
Token(type='at', text='expr-bfp')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='0')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='prev')
Token(type='ob', text='(')
Token(type='at', text='fxvector-ref')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxvector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='prev')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"fxvector"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'atomic")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"non-fixnum found in fxvector"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"too many fxvector elements supplied"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxvector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fill-fxvector')
Token(type='at', text='expr-bfp')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=";; a bytevector contains a sequence of fixnum tokens.  we don't handle")
Token(type='lc', text=";; graph marks and references because to do so generally, we'd have to")
Token(type='lc', text=';; put non-fixnums (insert records) into the bytevector or perhaps')
Token(type='lc', text=';; somehow generalize delayed records to handle bytevectors')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-bytevector')
Token(type='at', text='expr-bfp')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='make-bytevector')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"bytevector"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'atomic")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='value')
Token(type='at', text='255')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid value ~s found in bytevector"')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-bytevector')
Token(type='at', text='expr-bfp')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bytevector-u8-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-sized-bytevector')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxnonnegative?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='bfp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='fp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid bytevector length ~s"')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fill-bytevector')
Token(type='at', text='bfp')
Token(type='ob', text='(')
Token(type='at', text='make-bytevector')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-fill-bytevector')
Token(type='at', text='expr-bfp')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rparen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='0')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='prev')
Token(type='ob', text='(')
Token(type='at', text='bytevector-u8-ref')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bytevector-u8-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='prev')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"bytevector"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'atomic")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='value')
Token(type='at', text='255')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"invalid value ~s found in bytevector"')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"too many bytevector elements supplied"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bytevector-u8-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-fill-bytevector')
Token(type='at', text='expr-bfp')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-box')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr-bfp')
Token(type='at', text='bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"box"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='box')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='box')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-mark')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='eq-hashtable-cell')
Token(type='at', text='it')
Token(type='at', text='n')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; set up insert(s) if not already present')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-cdr!')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-insert')
Token(type='at', text='n')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-insert')
Token(type='at', text='n')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; check for duplicate marks')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='insert-seen')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-error')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='st', text='"duplicate mark #~s= seen"')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; mark seen before reading so that error comes from second duplicate')
Token(type='ob', text='(')
Token(type='at', text='insert-seen-set!')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='insert-seen-set!')
Token(type='ob', text='(')
Token(type='at', text='cddr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr-bfp')
Token(type='at', text='bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"graph mark"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='obj')
Token(type='at', text='stripped-obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ins')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='stripped-ins')
Token(type='ob', text='(')
Token(type='at', text='cddr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='stripped-obj')
Token(type='at', text='stripped-ins')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='insert-obj-set!')
Token(type='at', text='ins')
Token(type='at', text="'#1#")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='insert-obj-set!')
Token(type='at', text='stripped-ins')
Token(type='at', text="'#1#")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='lc', text='; remove annotation below mark to avoid redundant annotation')
Token(type='ob', text='(')
Token(type='at', text='insert-obj-set!')
Token(type='at', text='ins')
Token(type='ob', text='(')
Token(type='at', text='annotation-expression')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='insert-obj-set!')
Token(type='at', text='stripped-ins')
Token(type='at', text='stripped-obj')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='ins')
Token(type='at', text='stripped-ins')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ins')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='insert-obj-set!')
Token(type='at', text='ins')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='obj')
Token(type='at', text='ins')
Token(type='cb', text=')')
Token(type='at', text="'#1=#1#")
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='at', text='ins')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-insert')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='eq-hashtable-cell')
Token(type='at', text='it')
Token(type='at', text='n')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; set up insert(s) if not already present')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-cdr!')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-insert')
Token(type='at', text='n')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-insert')
Token(type='at', text='n')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='rcb-a?')
Token(type='at', text='rcb')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cddr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='xdefine')
Token(type='ob', text='(')
Token(type='at', text='rd-expression-comment')
Token(type='cb', text=')')
Token(type='lc', text='; called from scanner')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr-bfp')
Token(type='at', text='bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='expr-bfp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd-eof-error')
Token(type='st', text='"s-expression comment"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='xmvlet')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='stripped-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xcall')
Token(type='at', text='rd')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xvalues')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='read-token')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='who')
Token(type='at', text="'read-token")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='read-token')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='port-closed?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"not permitted on closed port ~s"')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='port-has-port-position?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-char-positions')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='port-position')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rcb')
Token(type='ob', text='(')
Token(type='at', text='make-rcb')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='at', text='#f')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tb')
Token(type='st', text='""')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='it')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-token')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='type')
Token(type='at', text='value')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='read-token')
Token(type='ob', text='(')
Token(type='at', text='current-input-port')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='input-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='textual-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a textual input port"')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='read-token')
Token(type='at', text='ip')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='input-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='textual-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a textual input port"')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='source-file-descriptor?')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a source-file descriptor"')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='read-token')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-read')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='who')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='at', text='a?')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='port-closed?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"not permitted on closed port ~s"')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='port-has-port-position?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$port-flags-set?')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-char-positions')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='port-position')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rcb')
Token(type='ob', text='(')
Token(type='at', text='make-rcb')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='a?')
Token(type='at', text='sfd')
Token(type='at', text='fp')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tb')
Token(type='st', text='""')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='bfp')
Token(type='at', text='fp')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='it')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call-with-token')
Token(type='at', text='rd-top-level')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-who!')
Token(type='at', text='get-datum')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='input-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='textual-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a textual input port"')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-values')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='at', text='who')
Token(type='at', text='ip')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-who!')
Token(type='at', text='read')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-values')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='at', text='who')
Token(type='ob', text='(')
Token(type='at', text='current-input-port')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='input-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='textual-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a textual input port"')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-values')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='at', text='who')
Token(type='at', text='ip')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-who!')
Token(type='at', text='get-datum/annotations')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='input-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='textual-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a textual input port"')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='source-file-descriptor?')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a source-file descriptor"')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='integer?')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='exact?')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='at', text='fp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a valid file position"')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='at', text='who')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='at', text='#t')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$make-read')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='who')
Token(type='at', text="'read")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='input-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='textual-port?')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a textual input port"')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='source-file-descriptor?')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a source-file descriptor"')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='new-fp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='at', text='who')
Token(type='at', text='ip')
Token(type='at', text='sfd')
Token(type='at', text='#t')
Token(type='at', text='fp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='fp')
Token(type='at', text='new-fp')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$open-source-file')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='source-port')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='paths-tried')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='path')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='member')
Token(type='at', text='path')
Token(type='at', text='paths-tried')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='paths-tried')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='path')
Token(type='at', text='paths-tried')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='$open-file-input-port')
Token(type='at', text="'$open-source-file")
Token(type='at', text='path')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-sfd')
Token(type='ob', text='(')
Token(type='at', text='$source-file-descriptor')
Token(type='at', text='path')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='source-file-descriptor-crc')
Token(type='at', text='new-sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='source-file-descriptor-crc')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='source-file-descriptor-length')
Token(type='at', text='new-sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='source-file-descriptor-length')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='transcoded-port')
Token(type='at', text='ip')
Token(type='ob', text='(')
Token(type='at', text='current-transcoder')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='close-input-port')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='search')
Token(type='at', text='name')
Token(type='at', text='dir*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='dir*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='source-port')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='dir')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='dir*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='dir')
Token(type='st', text='""')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='dir')
Token(type='st', text='"."')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='directory-separator?')
Token(type='ob', text='(')
Token(type='at', text='string-ref')
Token(type='at', text='dir')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='dir')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='st', text='"~a~a"')
Token(type='st', text='"~a/~a"')
Token(type='cb', text=')')
Token(type='at', text='dir')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='search')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='dir*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='source-file-descriptor-name')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='$fixed-path?')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='source-port')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='dir*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='source-directories')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='car')
Token(type='ob', text='(')
Token(type='at', text='library-directories')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='pathloop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='at', text='name')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='search')
Token(type='at', text='name')
Token(type='at', text='dir*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rest')
Token(type='ob', text='(')
Token(type='at', text='path-rest')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='string=?')
Token(type='at', text='rest')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pathloop')
Token(type='at', text='rest')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='source-lines-cache')
Token(type='ob', text='(')
Token(type='at', text='make-weak-eq-hashtable')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$locate-source')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='sfd')
Token(type='at', text='fp')
Token(type='at', text='use-cache?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='binary-search')
Token(type='at', text='table')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lo')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='hi')
Token(type='ob', text='(')
Token(type='at', text='vector-length')
Token(type='at', text='table')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='1')
Token(type='at', text='lo')
Token(type='cb', text=')')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='name')
Token(type='at', text='hi')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='table')
Token(type='at', text='lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='mid')
Token(type='ob', text='(')
Token(type='at', text='fxsra')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='table')
Token(type='at', text='mid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='lo')
Token(type='at', text='mid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='mid')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='use-cache?')
Token(type='ob', text='(')
Token(type='at', text='with-tc-mutex')
Token(type='ob', text='(')
Token(type='at', text='hashtable-ref')
Token(type='at', text='source-lines-cache')
Token(type='at', text='sfd')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name+table')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binary-search')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='name+table')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='name+table')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$open-source-file')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='port-name')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='table')
Token(type='lc', text=';; Make a vector for the position (counting from zero)')
Token(type='lc', text=';; that starts each line (= vector index + 1)')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='accum')
Token(type='ob', text="'(")
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ch')
Token(type='ob', text='(')
Token(type='at', text='read-char')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='ch')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='close-input-port')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list->vector')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='accum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='ch')
Token(type='ch', text='#\\newline')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='fp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='fp')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='fp')
Token(type='at', text='accum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='fp')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='accum')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='use-cache?')
Token(type='ob', text='(')
Token(type='at', text='with-tc-mutex')
Token(type='ob', text='(')
Token(type='at', text='hashtable-set!')
Token(type='at', text='source-lines-cache')
Token(type='at', text='sfd')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='name')
Token(type='at', text='table')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binary-search')
Token(type='at', text='table')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$clear-source-lines-cache')
Token(type='lc', text='; called from single-threaded docollect')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='hashtable-clear!')
Token(type='at', text='source-lines-cache')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$source-file-descriptor')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='crc16')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='crc16-table')
Token(type='ob', text="'#(")
Token(type='at', text='#x0000')
Token(type='at', text='#x1189')
Token(type='at', text='#x2312')
Token(type='at', text='#x329b')
Token(type='at', text='#x4624')
Token(type='at', text='#x57ad')
Token(type='at', text='#x6536')
Token(type='at', text='#x74bf')
Token(type='at', text='#x8c48')
Token(type='at', text='#x9dc1')
Token(type='at', text='#xaf5a')
Token(type='at', text='#xbed3')
Token(type='at', text='#xca6c')
Token(type='at', text='#xdbe5')
Token(type='at', text='#xe97e')
Token(type='at', text='#xf8f7')
Token(type='at', text='#x1081')
Token(type='at', text='#x0108')
Token(type='at', text='#x3393')
Token(type='at', text='#x221a')
Token(type='at', text='#x56a5')
Token(type='at', text='#x472c')
Token(type='at', text='#x75b7')
Token(type='at', text='#x643e')
Token(type='at', text='#x9cc9')
Token(type='at', text='#x8d40')
Token(type='at', text='#xbfdb')
Token(type='at', text='#xae52')
Token(type='at', text='#xdaed')
Token(type='at', text='#xcb64')
Token(type='at', text='#xf9ff')
Token(type='at', text='#xe876')
Token(type='at', text='#x2102')
Token(type='at', text='#x308b')
Token(type='at', text='#x0210')
Token(type='at', text='#x1399')
Token(type='at', text='#x6726')
Token(type='at', text='#x76af')
Token(type='at', text='#x4434')
Token(type='at', text='#x55bd')
Token(type='at', text='#xad4a')
Token(type='at', text='#xbcc3')
Token(type='at', text='#x8e58')
Token(type='at', text='#x9fd1')
Token(type='at', text='#xeb6e')
Token(type='at', text='#xfae7')
Token(type='at', text='#xc87c')
Token(type='at', text='#xd9f5')
Token(type='at', text='#x3183')
Token(type='at', text='#x200a')
Token(type='at', text='#x1291')
Token(type='at', text='#x0318')
Token(type='at', text='#x77a7')
Token(type='at', text='#x662e')
Token(type='at', text='#x54b5')
Token(type='at', text='#x453c')
Token(type='at', text='#xbdcb')
Token(type='at', text='#xac42')
Token(type='at', text='#x9ed9')
Token(type='at', text='#x8f50')
Token(type='at', text='#xfbef')
Token(type='at', text='#xea66')
Token(type='at', text='#xd8fd')
Token(type='at', text='#xc974')
Token(type='at', text='#x4204')
Token(type='at', text='#x538d')
Token(type='at', text='#x6116')
Token(type='at', text='#x709f')
Token(type='at', text='#x0420')
Token(type='at', text='#x15a9')
Token(type='at', text='#x2732')
Token(type='at', text='#x36bb')
Token(type='at', text='#xce4c')
Token(type='at', text='#xdfc5')
Token(type='at', text='#xed5e')
Token(type='at', text='#xfcd7')
Token(type='at', text='#x8868')
Token(type='at', text='#x99e1')
Token(type='at', text='#xab7a')
Token(type='at', text='#xbaf3')
Token(type='at', text='#x5285')
Token(type='at', text='#x430c')
Token(type='at', text='#x7197')
Token(type='at', text='#x601e')
Token(type='at', text='#x14a1')
Token(type='at', text='#x0528')
Token(type='at', text='#x37b3')
Token(type='at', text='#x263a')
Token(type='at', text='#xdecd')
Token(type='at', text='#xcf44')
Token(type='at', text='#xfddf')
Token(type='at', text='#xec56')
Token(type='at', text='#x98e9')
Token(type='at', text='#x8960')
Token(type='at', text='#xbbfb')
Token(type='at', text='#xaa72')
Token(type='at', text='#x6306')
Token(type='at', text='#x728f')
Token(type='at', text='#x4014')
Token(type='at', text='#x519d')
Token(type='at', text='#x2522')
Token(type='at', text='#x34ab')
Token(type='at', text='#x0630')
Token(type='at', text='#x17b9')
Token(type='at', text='#xef4e')
Token(type='at', text='#xfec7')
Token(type='at', text='#xcc5c')
Token(type='at', text='#xddd5')
Token(type='at', text='#xa96a')
Token(type='at', text='#xb8e3')
Token(type='at', text='#x8a78')
Token(type='at', text='#x9bf1')
Token(type='at', text='#x7387')
Token(type='at', text='#x620e')
Token(type='at', text='#x5095')
Token(type='at', text='#x411c')
Token(type='at', text='#x35a3')
Token(type='at', text='#x242a')
Token(type='at', text='#x16b1')
Token(type='at', text='#x0738')
Token(type='at', text='#xffcf')
Token(type='at', text='#xee46')
Token(type='at', text='#xdcdd')
Token(type='at', text='#xcd54')
Token(type='at', text='#xb9eb')
Token(type='at', text='#xa862')
Token(type='at', text='#x9af9')
Token(type='at', text='#x8b70')
Token(type='at', text='#x8408')
Token(type='at', text='#x9581')
Token(type='at', text='#xa71a')
Token(type='at', text='#xb693')
Token(type='at', text='#xc22c')
Token(type='at', text='#xd3a5')
Token(type='at', text='#xe13e')
Token(type='at', text='#xf0b7')
Token(type='at', text='#x0840')
Token(type='at', text='#x19c9')
Token(type='at', text='#x2b52')
Token(type='at', text='#x3adb')
Token(type='at', text='#x4e64')
Token(type='at', text='#x5fed')
Token(type='at', text='#x6d76')
Token(type='at', text='#x7cff')
Token(type='at', text='#x9489')
Token(type='at', text='#x8500')
Token(type='at', text='#xb79b')
Token(type='at', text='#xa612')
Token(type='at', text='#xd2ad')
Token(type='at', text='#xc324')
Token(type='at', text='#xf1bf')
Token(type='at', text='#xe036')
Token(type='at', text='#x18c1')
Token(type='at', text='#x0948')
Token(type='at', text='#x3bd3')
Token(type='at', text='#x2a5a')
Token(type='at', text='#x5ee5')
Token(type='at', text='#x4f6c')
Token(type='at', text='#x7df7')
Token(type='at', text='#x6c7e')
Token(type='at', text='#xa50a')
Token(type='at', text='#xb483')
Token(type='at', text='#x8618')
Token(type='at', text='#x9791')
Token(type='at', text='#xe32e')
Token(type='at', text='#xf2a7')
Token(type='at', text='#xc03c')
Token(type='at', text='#xd1b5')
Token(type='at', text='#x2942')
Token(type='at', text='#x38cb')
Token(type='at', text='#x0a50')
Token(type='at', text='#x1bd9')
Token(type='at', text='#x6f66')
Token(type='at', text='#x7eef')
Token(type='at', text='#x4c74')
Token(type='at', text='#x5dfd')
Token(type='at', text='#xb58b')
Token(type='at', text='#xa402')
Token(type='at', text='#x9699')
Token(type='at', text='#x8710')
Token(type='at', text='#xf3af')
Token(type='at', text='#xe226')
Token(type='at', text='#xd0bd')
Token(type='at', text='#xc134')
Token(type='at', text='#x39c3')
Token(type='at', text='#x284a')
Token(type='at', text='#x1ad1')
Token(type='at', text='#x0b58')
Token(type='at', text='#x7fe7')
Token(type='at', text='#x6e6e')
Token(type='at', text='#x5cf5')
Token(type='at', text='#x4d7c')
Token(type='at', text='#xc60c')
Token(type='at', text='#xd785')
Token(type='at', text='#xe51e')
Token(type='at', text='#xf497')
Token(type='at', text='#x8028')
Token(type='at', text='#x91a1')
Token(type='at', text='#xa33a')
Token(type='at', text='#xb2b3')
Token(type='at', text='#x4a44')
Token(type='at', text='#x5bcd')
Token(type='at', text='#x6956')
Token(type='at', text='#x78df')
Token(type='at', text='#x0c60')
Token(type='at', text='#x1de9')
Token(type='at', text='#x2f72')
Token(type='at', text='#x3efb')
Token(type='at', text='#xd68d')
Token(type='at', text='#xc704')
Token(type='at', text='#xf59f')
Token(type='at', text='#xe416')
Token(type='at', text='#x90a9')
Token(type='at', text='#x8120')
Token(type='at', text='#xb3bb')
Token(type='at', text='#xa232')
Token(type='at', text='#x5ac5')
Token(type='at', text='#x4b4c')
Token(type='at', text='#x79d7')
Token(type='at', text='#x685e')
Token(type='at', text='#x1ce1')
Token(type='at', text='#x0d68')
Token(type='at', text='#x3ff3')
Token(type='at', text='#x2e7a')
Token(type='at', text='#xe70e')
Token(type='at', text='#xf687')
Token(type='at', text='#xc41c')
Token(type='at', text='#xd595')
Token(type='at', text='#xa12a')
Token(type='at', text='#xb0a3')
Token(type='at', text='#x8238')
Token(type='at', text='#x93b1')
Token(type='at', text='#x6b46')
Token(type='at', text='#x7acf')
Token(type='at', text='#x4854')
Token(type='at', text='#x59dd')
Token(type='at', text='#x2d62')
Token(type='at', text='#x3ceb')
Token(type='at', text='#x0e70')
Token(type='at', text='#x1ff9')
Token(type='at', text='#xf78f')
Token(type='at', text='#xe606')
Token(type='at', text='#xd49d')
Token(type='at', text='#xc514')
Token(type='at', text='#xb1ab')
Token(type='at', text='#xa022')
Token(type='at', text='#x92b9')
Token(type='at', text='#x8330')
Token(type='at', text='#x7bc7')
Token(type='at', text='#x6a4e')
Token(type='at', text='#x58d5')
Token(type='at', text='#x495c')
Token(type='at', text='#x3de3')
Token(type='at', text='#x2c6a')
Token(type='at', text='#x1ef1')
Token(type='at', text='#x0f78')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; invoke with crc = #xffff for start of data')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='crc')
Token(type='at', text='s')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='crc')
Token(type='at', text='crc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='at', text='crc')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogxor')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='crc')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='crc16-table')
Token(type='ob', text='(')
Token(type='at', text='fxlogand')
Token(type='ob', text='(')
Token(type='at', text='fxlogxor')
Token(type='at', text='crc')
Token(type='ob', text='(')
Token(type='at', text='bytevector-u8-ref')
Token(type='at', text='s')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='go/reset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ifn')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='pos')
Token(type='ob', text='(')
Token(type='at', text='port-position')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-port-position!')
Token(type='at', text='ip')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='sfd')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='ifn')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-port-position!')
Token(type='at', text='ip')
Token(type='at', text='pos')
Token(type='cb', text=')')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='go')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ifn')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='buflen')
Token(type='ob', text='(')
Token(type='at', text='file-buffer-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='buf')
Token(type='ob', text='(')
Token(type='at', text='make-bytevector')
Token(type='at', text='buflen')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='len')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='crc')
Token(type='at', text='#xffff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='get-bytevector-n!')
Token(type='at', text='ip')
Token(type='at', text='buf')
Token(type='at', text='0')
Token(type='at', text='buflen')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-source-file-descriptor')
Token(type='at', text='ifn')
Token(type='at', text='len')
Token(type='at', text='crc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='len')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='crc16')
Token(type='at', text='crc')
Token(type='at', text='buf')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ifn')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go/reset')
Token(type='at', text='ifn')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ifn')
Token(type='at', text='ip')
Token(type='at', text='reset?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='reset?')
Token(type='ob', text='(')
Token(type='at', text='go/reset')
Token(type='at', text='ifn')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='ifn')
Token(type='at', text='ip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='char-name')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='valid-name?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='string-length')
Token(type='at', text='s')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='allalpha')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='char-alphabetic?')
Token(type='ob', text='(')
Token(type='at', text='string-ref')
Token(type='at', text='s')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='allalpha')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='allalphahex')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='string-ref')
Token(type='at', text='s')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='char<=?')
Token(type='ch', text='#\\a')
Token(type='at', text='c')
Token(type='ch', text='#\\f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char<=?')
Token(type='ch', text='#\\A')
Token(type='at', text='c')
Token(type='ch', text='#\\F')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='allalphahex')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='char?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='hashtable-ref')
Token(type='at', text='char-name-table')
Token(type='at', text='x')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='at', text='x')
Token(type='at', text="'*char-name*")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='valid-name?')
Token(type='ob', text='(')
Token(type='at', text='symbol->string')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'char-name")
Token(type='st', text='"~s is not a valid character name"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-tc-mutex')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='oldc')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='at', text='x')
Token(type='at', text="'*char-name*")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='oldc')
Token(type='lc', text='; remove x from table entry for oldc')
Token(type='ob', text='(')
Token(type='at', text='hashtable-update!')
Token(type='at', text='char-name-table')
Token(type='at', text='oldc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='c')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sremprop')
Token(type='at', text='x')
Token(type='at', text="'*char-name*")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='char?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='lc', text='; add x to char-name-table entry for c')
Token(type='ob', text='(')
Token(type='at', text='hashtable-update!')
Token(type='at', text='char-name-table')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; make c entry for x')
Token(type='ob', text='(')
Token(type='at', text='$sputprop')
Token(type='at', text='x')
Token(type='at', text="'*char-name*")
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'char-name")
Token(type='st', text='"~s is not a character"')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text=';let')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='source-directories')
Token(type='ob', text='(')
Token(type='at', text='make-parameter')
Token(type='ob', text="'(")
Token(type='st', text='"."')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='list?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='string?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'source-directories")
Token(type='st', text='"invalid path list ~s"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='record-reader')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='ob', text='(')
Token(type='at', text='record-type-uid')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='at', text="'reader-record")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='at', text="'record-reader")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='at', text='name/rtd')
Token(type='at', text="'record-reader")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'record-reader")
Token(type='st', text='"invalid input ~s"')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='name/rtd')
Token(type='at', text='rtd/false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='rtd/false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rtd')
Token(type='at', text='name/rtd')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-tc-mutex')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='ob', text='(')
Token(type='at', text='record-type-uid')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='at', text="'reader-record")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sremprop')
Token(type='ob', text='(')
Token(type='at', text='record-type-uid')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='at', text="'reader-record")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sremprop')
Token(type='at', text='name')
Token(type='at', text="'record-reader")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='at', text='name/rtd')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='string?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-tc-mutex')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='at', text='name')
Token(type='at', text="'record-reader")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sremprop')
Token(type='ob', text='(')
Token(type='at', text='record-type-uid')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='at', text="'reader-record")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sremprop')
Token(type='at', text='name')
Token(type='at', text="'record-reader")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'record-reader")
Token(type='st', text='"invalid first argument ~s"')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor?')
Token(type='at', text='rtd/false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rtd')
Token(type='at', text='rtd/false')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='at', text='name/rtd')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='string?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-tc-mutex')
Token(type='ob', text='(')
Token(type='at', text='$sputprop')
Token(type='at', text='name')
Token(type='at', text="'record-reader")
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sputprop')
Token(type='ob', text='(')
Token(type='at', text='record-type-uid')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='at', text="'reader-record")
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor?')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'record-reader")
Token(type='st', text='"~s valid as first argument only when second is #f"')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'record-reader")
Token(type='st', text='"invalid first argument ~s"')
Token(type='at', text='name/rtd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'record-reader")
Token(type='st', text='"invalid second argument ~s"')
Token(type='at', text='rtd/false')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'space")
Token(type='ch', text='#\\space')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'tab")
Token(type='ch', text='#\\tab')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'return")
Token(type='ch', text='#\\return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'page")
Token(type='ch', text='#\\page')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'linefeed")
Token(type='ch', text='#\\linefeed')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'newline")
Token(type='ch', text='#\\newline')
Token(type='cb', text=')')
Token(type='lc', text='; must come after linefeed entry')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'backspace")
Token(type='ch', text='#\\backspace')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'rubout")
Token(type='ch', text='#\\rubout')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'nul")
Token(type='ch', text='#\\nul')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'bel")
Token(type='ch', text='#\\bel')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'vt")
Token(type='ch', text='#\\vt')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'esc")
Token(type='ch', text='#\\esc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'vtab")
Token(type='ch', text='#\\vtab')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'delete")
Token(type='ch', text='#\\rubout')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'alarm")
Token(type='ch', text='#\\bel')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'nel")
Token(type='ch', text='#\\nel')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-name')
Token(type='at', text="'ls")
Token(type='ch', text='#\\ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
