Token(type='st', text='"cpnanopass.ss"')
Token(type='lc', text=';;; cpnanopass.ss')
Token(type='lc', text=';;; Copyright 1984-2017 Cisco Systems, Inc.')
Token(type='lc', text=';;;')
Token(type='lc', text=';;; Licensed under the Apache License, Version 2.0 (the "License");')
Token(type='lc', text=';;; you may not use this file except in compliance with the License.')
Token(type='lc', text=';;; You may obtain a copy of the License at')
Token(type='lc', text=';;;')
Token(type='lc', text=';;; http://www.apache.org/licenses/LICENSE-2.0')
Token(type='lc', text=';;;')
Token(type='lc', text=';;; Unless required by applicable law or agreed to in writing, software')
Token(type='lc', text=';;; distributed under the License is distributed on an "AS IS" BASIS,')
Token(type='lc', text=';;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.')
Token(type='lc', text=';;; See the License for the specific language governing permissions and')
Token(type='lc', text=';;; limitations under the License.')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"np-languages.ss"')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='track-dynamic-closure-counts')
Token(type='ob', text='(')
Token(type='at', text='$make-thread-parameter')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='track-static-closure-counts')
Token(type='ob', text='(')
Token(type='at', text='$make-thread-parameter')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-static-closure-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'$trace-static-closure-counts")
Token(type='st', text='"~s is not a static-closure-info record or #f"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set-who!')
Token(type='at', text='$dynamic-closure-counts')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{raw-ref-count bhowt6w0coxl0s2y-1}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{raw-create-count bhowt6w0coxl0s2y-2}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{raw-alloc-count bhowt6w0coxl0s2y-3}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{ref-count bhowt6w0coxl0s2y-4}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{pair-create-count bhowt6w0coxl0s2y-5}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{vector-create-count bhowt6w0coxl0s2y-6}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{vector-alloc-count bhowt6w0coxl0s2y-8}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{padded-vector-alloc-count bhowt6w0coxl0s2y-11}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{closure-create-count bhowt6w0coxl0s2y-7}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{closure-alloc-count bhowt6w0coxl0s2y-9}')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count')
Token(type='at', text='#{padded-closure-alloc-count bhowt6w0coxl0s2y-10}')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set-who!')
Token(type='at', text='$clear-dynamic-closure-counts')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{raw-ref-count bhowt6w0coxl0s2y-1}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{raw-create-count bhowt6w0coxl0s2y-2}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{raw-alloc-count bhowt6w0coxl0s2y-3}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{ref-count bhowt6w0coxl0s2y-4}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{pair-create-count bhowt6w0coxl0s2y-5}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{vector-create-count bhowt6w0coxl0s2y-6}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{vector-alloc-count bhowt6w0coxl0s2y-8}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{padded-vector-alloc-count bhowt6w0coxl0s2y-11}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{closure-create-count bhowt6w0coxl0s2y-7}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{closure-alloc-count bhowt6w0coxl0s2y-9}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='profile-counter-count-set!')
Token(type='at', text='#{padded-closure-alloc-count bhowt6w0coxl0s2y-10}')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='traceit')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='at', text='name')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='trace-lambda')
Token(type='at', text='name')
Token(type='at', text='args')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='t')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='architecture')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fn')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~a.ss"')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='architecture')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-source-path')
Token(type='at', text="'architecture")
Token(type='at', text='fn')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='fn')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='p')
Token(type='ob', text='(')
Token(type='at', text='$open-file-input-port')
Token(type='at', text="'include")
Token(type='at', text='fn')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='sfd')
Token(type='ob', text='(')
Token(type='at', text='$source-file-descriptor')
Token(type='at', text='fn')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='p')
Token(type='ob', text='(')
Token(type='at', text='transcoded-port')
Token(type='at', text='p')
Token(type='ob', text='(')
Token(type='at', text='current-transcoder')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='do-read')
Token(type='ob', text='(')
Token(type='at', text='$make-read')
Token(type='at', text='p')
Token(type='at', text='sfd')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regs')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='inst')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='asm')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='asm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='#f')
Token(type='st', text='"too few expressions in ~a"')
Token(type='at', text='fn')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='ob', text='(')
Token(type='at', text='do-read')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='#f')
Token(type='st', text='"too many expressions in ~a"')
Token(type='at', text='fn')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='close-input-port')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='registers')
Token(type='at', text='instructions')
Token(type='at', text='assembler')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='registers')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'k")
Token(type='at', text='regs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='instructions')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'k")
Token(type='at', text='inst')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='assembler')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'k")
Token(type='at', text='asm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; version in cmacros uses keyword as template and should')
Token(type='lc', text='; probably be changed to use the id')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-who')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='ob', text='(')
Token(type='at', text='id')
Token(type='at', text='.')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'id")
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define-who')
Token(type='at', text='id')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text='args')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='id')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'id")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='id')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define')
Token(type='at', text='id')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='who')
Token(type='at', text="'id")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='get-passes')
Token(type='at', text='pass')
Token(type='at', text='xpass')
Token(type='at', text='pass-time?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='passes-loc')
Token(type='ob', text='(')
Token(type='at', text='make-compile-time-value')
Token(type='ob', text='(')
Token(type='at', text='box')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='get-passes')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='unbox')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text='#,(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'*")
Token(type='ob', text='(')
Token(type='at', text='r')
Token(type='at', text="#'passes-loc")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ir-printer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='unparser')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pretty-print')
Token(type='ob', text='(')
Token(type='at', text='flatten-seq')
Token(type='ob', text='(')
Token(type='at', text='unparser')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='values-printer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"no output\\n"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pretty-print')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='pass')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='ob', text='(')
Token(type='at', text='pass-name')
Token(type='at', text='?arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='?unparser')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'pass-name")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='pass-name')
Token(type='ob', text='(')
Token(type='at', text='pass-name')
Token(type='at', text='?arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text='args')
Token(type='ob', text='(')
Token(type='at', text='xpass')
Token(type='at', text='pass-name')
Token(type='ob', text='(')
Token(type='at', text='ir-printer')
Token(type='at', text='?unparser')
Token(type='cb', text=')')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='pass-name')
Token(type='at', text='?unparser')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'pass-name")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text='args')
Token(type='ob', text='(')
Token(type='at', text='xpass')
Token(type='at', text='pass-name')
Token(type='ob', text='(')
Token(type='at', text='ir-printer')
Token(type='at', text='?unparser')
Token(type='cb', text=')')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='ob', text='(')
Token(type='at', text='pass-name')
Token(type='at', text='?arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'pass-name")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='pass-name')
Token(type='ob', text='(')
Token(type='at', text='pass-name')
Token(type='at', text='?arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text='args')
Token(type='ob', text='(')
Token(type='at', text='xpass')
Token(type='at', text='pass-name')
Token(type='at', text='values-printer')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='pass-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'pass-name")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text='args')
Token(type='ob', text='(')
Token(type='at', text='xpass')
Token(type='at', text='pass-name')
Token(type='at', text='values-printer')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='xpass')
Token(type='at', text='pass-time?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='pass-time?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='$xpass')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='printer')
Token(type='at', text='pass-name')
Token(type='at', text='pass')
Token(type='at', text='arg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='val*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='th')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='pass')
Token(type='at', text='arg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='pass-time?')
Token(type='ob', text='(')
Token(type='at', text='$pass-time')
Token(type='at', text='pass-name')
Token(type='at', text='th')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='th')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='pass-name')
Token(type='ob', text='(')
Token(type='at', text='tracer')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"output of ~s:\\n"')
Token(type='at', text='pass-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printer')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='values')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='xpass')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='pass-name')
Token(type='at', text='?printer')
Token(type='at', text='?args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='r')
Token(type='at', text="#'passes-loc")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-box!')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='pass-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unbox')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='$xpass')
Token(type='at', text='?printer')
Token(type='at', text="'pass-name")
Token(type='at', text='pass-name')
Token(type='at', text='?args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='flatten-seq')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='helper')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text="'seq")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='helper')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='helper')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='flatten-seq')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='helper')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text="'seq")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='helper')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text="'begin")
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text="'quote")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='list?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='flatten-seq')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='compose')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='at', text='p')
Token(type='at', text='.')
Token(type='at', text='p*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v*')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='p')
Token(type='at', text='p')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='p*')
Token(type='at', text='p*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='p*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='p')
Token(type='at', text='v*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v*')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='p')
Token(type='at', text='v*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='v*')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='p*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='p*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-virgin-quasiquote')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='let-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='#,(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'k")
Token(type='at', text="'quasiquote")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='`x')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='valid-pass?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='get-passes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='last-pass')
Token(type='lc', text='; potentially not thread-safe, but currently unused')
Token(type='ob', text='(')
Token(type='at', text='make-parameter')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='valid-pass?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='errorf')
Token(type='at', text="'last-pass")
Token(type='st', text='"~s is not a valid pass"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tracer')
Token(type='lc', text='; potentially not thread-safe, but currently unused')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='ls')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='get-passes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='valid-pass?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='list?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='tracer')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='errorf')
Token(type='at', text="'tracer")
Token(type='st', text='"invalid trace list or pass name: ~s"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-cons')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='unannotate')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='annotation?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='annotation-expression')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='nanopass')
Token(type='cb', text=')')
Token(type='at', text='np-languages')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='signed-32?')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='bitwise-arithmetic-shift-left')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='32')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='low')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='high')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='low')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='low')
Token(type='at', text='x')
Token(type='at', text='high')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='low')
Token(type='at', text='x')
Token(type='at', text='high')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='nodups')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text='x**')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='append')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ans')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='ans')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='chunked-bytevector-bitcount')
Token(type='lc', text='; assumes "chunked" bytevector a multiple of 2 in size')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bitcount-bv')
Token(type='ob', text='(')
Token(type='at', text='make-bytevector')
Token(type='at', text='#x10000')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='#x10000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bytevector-u8-set!')
Token(type='at', text='bitcount-bv')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fxbit-count')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='bv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='bytevector-length')
Token(type='at', text='bv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='count')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='count')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='bytevector-u8-ref')
Token(type='at', text='bitcount-bv')
Token(type='ob', text='(')
Token(type='at', text='bytevector-u16-native-ref')
Token(type='at', text='bv')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='count')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='empty-tree')
Token(type='at', text='full-tree')
Token(type='at', text='tree-extract')
Token(type='at', text='tree-for-each')
Token(type='at', text='tree-fold-left')
Token(type='at', text='tree-bit-set?')
Token(type='at', text='tree-bit-set')
Token(type='at', text='tree-bit-unset')
Token(type='at', text='tree-bit-count')
Token(type='at', text='tree-same?')
Token(type='at', text='tree-merge')
Token(type='cb', text=')')
Token(type='lc', text='; tree -> fixnum | (tree-node tree tree)')
Token(type='lc', text='; 0 represents any tree or subtree with no bits set, and a tree or subtree')
Token(type='lc', text='; with no bits set is always 0')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='empty-tree')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; any tree or subtree with all bits set')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='full-tree')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='full-fixnum')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='ob', text='(')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fixnum-width')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='compute-split')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='size')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='lc', text="; 2015/03/15 rkd: tried the following under the theory that we'd allocate")
Token(type='lc', text='; fewer nodes.  for example, say fixmun-width is 30 and size is 80.  if we')
Token(type='lc', text='; split 40/40 we create two nodes under the current node.  if instead we')
Token(type='lc', text='; split 29/51 we create just one node and one fixnum under the current')
Token(type='lc', text='; node.  this worked as planned; however, it reduced the number of nodes')
Token(type='lc', text='; created by only 3.3% on the x86 and made compile times slightly worse.')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='size')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fixnum-width')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fixnum-width')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='size')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='optimize-level')
Token(type='cb', text=')')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='tree-node?')
Token(type='at', text='tree-node-left')
Token(type='at', text='tree-node-right')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-tree-node')
Token(type='at', text='cons')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-node?')
Token(type='at', text='pair?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-node-left')
Token(type='at', text='car')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-node-right')
Token(type='at', text='cdr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='tree-node?')
Token(type='at', text='tree-node-left')
Token(type='at', text='tree-node-right')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='tree-node')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='left')
Token(type='at', text='right')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='left')
Token(type='at', text='right')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='left')
Token(type='at', text='right')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-writer')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor')
Token(type='at', text='tree-node')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='r')
Token(type='at', text='p')
Token(type='at', text='wr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-node->s-exp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tn')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-virgin-quasiquote')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='left')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='tn')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='right')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='tn')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='tree-node')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='tree-node?')
Token(type='at', text='left')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-node->s-exp')
Token(type='at', text='left')
Token(type='cb', text=')')
Token(type='at', text='left')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='tree-node?')
Token(type='at', text='right')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-node->s-exp')
Token(type='at', text='right')
Token(type='cb', text=')')
Token(type='at', text='right')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='wr')
Token(type='ob', text='(')
Token(type='at', text='tree-node->s-exp')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-extract')
Token(type='lc', text='; assumes empty-tree is 0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='st')
Token(type='at', text='size')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='extract')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='at', text='st')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='size')
Token(type='at', text='size')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='st')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fxodd?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='v')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='st')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='size')
Token(type='at', text='size')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='v')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='size')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='extract')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='extract')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='at', text='split')
Token(type='at', text='offset')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-for-each')
Token(type='lc', text='; assumes empty-tree is 0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='st')
Token(type='at', text='size')
Token(type='at', text='start')
Token(type='at', text='end')
Token(type='at', text='action')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='at', text='st')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='size')
Token(type='at', text='size')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='start')
Token(type='at', text='start')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='end')
Token(type='at', text='end')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='fxbit-field')
Token(type='at', text='st')
Token(type='at', text='start')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='st')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='st')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fxodd?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='action')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='start')
Token(type='at', text='start')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='start')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='start')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='action')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='start')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='at', text='split')
Token(type='at', text='start')
Token(type='ob', text='(')
Token(type='at', text='fxmin')
Token(type='at', text='end')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='end')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='start')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='end')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-fold-left')
Token(type='lc', text='; assumes empty-tree is 0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='proc')
Token(type='at', text='size')
Token(type='at', text='init')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='at', text='st')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='size')
Token(type='at', text='size')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='init')
Token(type='at', text='init')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='st')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='init')
Token(type='at', text='init')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fxodd?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='proc')
Token(type='at', text='init')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text='init')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='st')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='init')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='size')
Token(type='at', text='size')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='init')
Token(type='at', text='init')
Token(type='ob', text='(')
Token(type='at', text='proc')
Token(type='at', text='init')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='size')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='init')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='at', text='split')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='at', text='init')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-bit-set?')
Token(type='lc', text='; assumes empty-tree is 0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='st')
Token(type='at', text='size')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='at', text='st')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='size')
Token(type='at', text='size')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='bit')
Token(type='at', text='bit')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='st')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; fxlogbit? is unnecessarily general, so roll our own')
Token(type='ob', text='(')
Token(type='at', text='fxlogtest')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='at', text='split')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-bit-set')
Token(type='lc', text='; assumes empty-tree is 0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='st')
Token(type='at', text='size')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='lc', text='; set bit in tree.  result is eq? to tr if result is same as tr.')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='at', text='st')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='size')
Token(type='ob', text='(')
Token(type='at', text='fixnum-width')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='fxlogbit1')
Token(type='at', text='bit')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='full-fixnum')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='full-tree')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='st')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set')
Token(type='at', text='empty-tree')
Token(type='at', text='split')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='empty-tree')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set')
Token(type='at', text='empty-tree')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lst')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rst')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-lst')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set')
Token(type='at', text='lst')
Token(type='at', text='split')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-lst')
Token(type='at', text='lst')
Token(type='cb', text=')')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-lst')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='rst')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='full-tree')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='new-lst')
Token(type='at', text='rst')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-rst')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set')
Token(type='at', text='rst')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-rst')
Token(type='at', text='rst')
Token(type='cb', text=')')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='lst')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-rst')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='full-tree')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='lst')
Token(type='at', text='new-rst')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-bit-unset')
Token(type='lc', text='; assumes empty-tree is 0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='st')
Token(type='at', text='size')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='lc', text='; reset bit in tree.  result is eq? to tr if result is same as tr.')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='st')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='at', text='empty-tree')
Token(type='ob', text='(')
Token(type='at', text='fxlogbit0')
Token(type='at', text='bit')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='size')
Token(type='ob', text='(')
Token(type='at', text='fixnum-width')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogbit0')
Token(type='at', text='bit')
Token(type='ob', text='(')
Token(type='at', text='full-fixnum')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-unset')
Token(type='at', text='full-tree')
Token(type='at', text='split')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='full-tree')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-unset')
Token(type='at', text='full-tree')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='lst')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rst')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-lst')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-unset')
Token(type='at', text='lst')
Token(type='at', text='split')
Token(type='at', text='bit')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-lst')
Token(type='at', text='lst')
Token(type='cb', text=')')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-lst')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='rst')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='empty-tree')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='new-lst')
Token(type='at', text='rst')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-rst')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-unset')
Token(type='at', text='rst')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bit')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-rst')
Token(type='at', text='rst')
Token(type='cb', text=')')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='lst')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-rst')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='empty-tree')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='lst')
Token(type='at', text='new-rst')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-bit-count')
Token(type='lc', text='; assumes empty-tree is 0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='st')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxbit-count')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-count')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-count')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-same?')
Token(type='lc', text='; assumes empty-tree is 0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='st1')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st1')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='lc', text='; assuming fixnums and full trees are eq-comparable')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='tree-node?')
Token(type='at', text='st1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-node?')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-same?')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-same?')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='tree-merge')
Token(type='lc', text='; merge tr1 and tr2.  result is eq? to tr1 if result is same as tr1.')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='st1')
Token(type='at', text='st2')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st1')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st2')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='st1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st1')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='at', text='st2')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st1')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='st2')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='full-tree')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='st1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='at', text='st1')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='st')
Token(type='ob', text='(')
Token(type='at', text='full-fixnum')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='full-tree')
Token(type='at', text='st')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lst1')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rst1')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='lst2')
Token(type='ob', text='(')
Token(type='at', text='tree-node-left')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rst2')
Token(type='ob', text='(')
Token(type='at', text='tree-node-right')
Token(type='at', text='st2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='split')
Token(type='ob', text='(')
Token(type='at', text='compute-split')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='tree-merge')
Token(type='at', text='lst1')
Token(type='at', text='lst2')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='r')
Token(type='ob', text='(')
Token(type='at', text='tree-merge')
Token(type='at', text='rst1')
Token(type='at', text='rst2')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='split')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='l')
Token(type='at', text='lst1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='r')
Token(type='at', text='rst1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='st1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='l')
Token(type='at', text='lst2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='r')
Token(type='at', text='rst2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='st2')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='l')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='r')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='full-tree')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='make-tree-node')
Token(type='at', text='l')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='tc-disp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-ac0-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-ac1-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%sfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-sfp-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-cp-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-esp-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%ap')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-ap-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%eap')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-eap-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%trap')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-trap-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-xp-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%yp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-yp-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-reserved-registers')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='ob', text='[')
Token(type='at', text='regid')
Token(type='at', text='alias')
Token(type='at', text='...')
Token(type='at', text='callee-save?')
Token(type='at', text='mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='ob', text="#'(")
Token(type='at', text='regid')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%tc')
Token(type='at', text='%sfp')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%tc')
Token(type='at', text='%sfp')
Token(type='at', text='.')
Token(type='at', text='others')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='_')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='regid')
Token(type='ob', text='(')
Token(type='at', text='make-reg')
Token(type='at', text="'regid")
Token(type='at', text="'mdinfo")
Token(type='ob', text='(')
Token(type='at', text='tc-disp')
Token(type='at', text='regid')
Token(type='cb', text=')')
Token(type='at', text='callee-save?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='alias')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='x')
Token(type='at', text='regid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='alias')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-allocable-registers')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='assert')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='asm-arg-reg-cnt')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='asm-arg-reg-max')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='regvec')
Token(type='at', text='arg-registers')
Token(type='at', text='extra-registers')
Token(type='at', text='with-initialized-registers')
Token(type='ob', text='[')
Token(type='at', text='regid')
Token(type='at', text='reg-alias')
Token(type='at', text='...')
Token(type='at', text='callee-save?')
Token(type='at', text='mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='tc-disp')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='arg-regid')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='extra-regid')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='ob', text="#'(")
Token(type='at', text='regid')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='at', text='%xp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='at', text='%xp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='other')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='other*')
Token(type='ob', text="#'(")
Token(type='at', text='other')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rtc-disp*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='arg-offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-arg-regs-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rextra*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='other*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='rextra*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='asm-arg-reg-max')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='extra*')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='rextra*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='list*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-ac0-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-xp-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-ts-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-td-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='rtc-disp*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-head')
Token(type='at', text='extra*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='asm-arg-reg-cnt')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-tail')
Token(type='at', text='extra*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='asm-arg-reg-cnt')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"asm-arg-reg-max extra registers are not specified ~s"')
Token(type='ob', text='(')
Token(type='at', text='syntax->datum')
Token(type='at', text='rextra*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='other')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='other*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='ob', text='(')
Token(type='at', text='syntax->datum')
Token(type='at', text='other')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='at', text='%ac1')
Token(type='at', text='%yp')
Token(type='at', text='%cp')
Token(type='at', text='%ret')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='other*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='#`(')
Token(type='at', text='tc-disp')
Token(type='at', text='#,other')
Token(type='cb', text=')')
Token(type='at', text='rtc-disp*')
Token(type='cb', text=')')
Token(type='at', text='arg-offset')
Token(type='at', text='rextra*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='other*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='arg-offset')
Token(type='at', text='rtc-disp*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='arg-offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='other')
Token(type='at', text='rextra*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='_')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='st', text='"missing or out-of-order required registers"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='regid-loc')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='generate-temporaries')
Token(type='ob', text="#'(")
Token(type='at', text='regid')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-squawking-parameter')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='ob', text='(')
Token(type='at', text='id')
Token(type='ob', text='(')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='$make-thread-parameter')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='id')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='q')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text='q')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='q')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text="#'#,q")
Token(type='st', text='"uninitialized"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='id')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-squawking-parameter')
Token(type='ob', text='(')
Token(type='at', text='id')
Token(type='cb', text=')')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-squawking-parameter')
Token(type='ob', text='(')
Token(type='at', text='regid')
Token(type='at', text='reg-alias')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='regid-loc')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text='define-squawking-parameter')
Token(type='at', text='regvec')
Token(type='at', text='regvec-loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-squawking-parameter')
Token(type='at', text='arg-registers')
Token(type='at', text='arg-registers-loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-squawking-parameter')
Token(type='at', text='extra-registers')
Token(type='at', text='extra-registers-loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-initialized-registers')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='ob', text='(')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regid-loc')
Token(type='ob', text='(')
Token(type='at', text='make-reg')
Token(type='at', text="'regid")
Token(type='at', text="'mdinfo")
Token(type='at', text='tc-disp')
Token(type='at', text='callee-save?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regvec-loc')
Token(type='ob', text='(')
Token(type='at', text='vector')
Token(type='at', text='regid')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='arg-registers-loc')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='arg-regid')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='extra-registers-loc')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='extra-regid')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='ob', text='(')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-machine-dependent-registers')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='ob', text='[')
Token(type='at', text='regid')
Token(type='at', text='alias')
Token(type='at', text='...')
Token(type='at', text='callee-save?')
Token(type='at', text='mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='regid')
Token(type='ob', text='(')
Token(type='at', text='make-reg')
Token(type='at', text="'regid")
Token(type='at', text="'mdinfo")
Token(type='at', text='#f')
Token(type='at', text='callee-save?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='alias')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='x')
Token(type='at', text='regid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='alias')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-registers')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='reserved')
Token(type='at', text='allocable')
Token(type='at', text='machine-dependent')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='reserved')
Token(type='ob', text='[')
Token(type='at', text='rreg')
Token(type='at', text='rreg-alias')
Token(type='at', text='...')
Token(type='at', text='rreg-callee-save?')
Token(type='at', text='rreg-mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='allocable')
Token(type='ob', text='[')
Token(type='at', text='areg')
Token(type='at', text='areg-alias')
Token(type='at', text='...')
Token(type='at', text='areg-callee-save?')
Token(type='at', text='areg-mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='machine-depdendent')
Token(type='ob', text='[')
Token(type='at', text='mdreg')
Token(type='at', text='mdreg-alias')
Token(type='at', text='...')
Token(type='at', text='mdreg-callee-save?')
Token(type='at', text='mdreg-mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='regvec')
Token(type='at', text='arg-registers')
Token(type='at', text='extra-registers')
Token(type='at', text='real-register?')
Token(type='at', text='with-initialized-registers')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define-reserved-registers')
Token(type='ob', text='[')
Token(type='at', text='rreg')
Token(type='at', text='rreg-alias')
Token(type='at', text='...')
Token(type='at', text='rreg-callee-save?')
Token(type='at', text='rreg-mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-allocable-registers')
Token(type='at', text='regvec')
Token(type='at', text='arg-registers')
Token(type='at', text='extra-registers')
Token(type='at', text='with-initialized-registers')
Token(type='ob', text='[')
Token(type='at', text='areg')
Token(type='at', text='areg-alias')
Token(type='at', text='...')
Token(type='at', text='areg-callee-save?')
Token(type='at', text='areg-mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-machine-dependent-registers')
Token(type='ob', text='[')
Token(type='at', text='mdreg')
Token(type='at', text='mdreg-alias')
Token(type='at', text='...')
Token(type='at', text='mdreg-callee-save?')
Token(type='at', text='mdreg-mdinfo')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='real-register?')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='real-reg*')
Token(type='ob', text="#''(")
Token(type='at', text='rreg')
Token(type='at', text='...')
Token(type='at', text='rreg-alias')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='at', text='areg')
Token(type='at', text='...')
Token(type='at', text='areg-alias')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='at', text='mdreg')
Token(type='at', text='...')
Token(type='at', text='mdreg-alias')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='e')
Token(type='at', text='real-reg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='architecture')
Token(type='at', text='registers')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text="; pseudo register used for mref's with no actual index")
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='%zero')
Token(type='ob', text='(')
Token(type='at', text='make-reg')
Token(type='at', text="'zero")
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; define %ref-ret to be sfp[0] on machines w/no ret register')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%ref-ret')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='at', text="#'%ret")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='%mref')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text='x')
Token(type='at', text="'%mref")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-Ldoargerr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-libspec-label')
Token(type='at', text="'doargerr")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='doargerr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%ret')
Token(type='at', text='%ac0')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-Ldomvleterr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-libspec-label')
Token(type='at', text="'domvleterr")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='domvleterr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%ret')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-Lcall-error')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-libspec-label')
Token(type='at', text="'call-error")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='call-error')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%ret')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='frame-vars')
Token(type='at', text='get-fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='frame-vars')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='get-fv')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='vector-length')
Token(type='at', text='frame-vars')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='x')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-vec')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='x')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='at', text='n')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='new-vec')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='frame-vars')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='frame-vars')
Token(type='at', text='new-vec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='frame-vars')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='$make-fv')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='frame-vars')
Token(type='at', text='x')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='reg-cons*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?reg')
Token(type='at', text='...')
Token(type='at', text='?reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='ob', text='(')
Token(type='at', text='syntax->datum')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='cons')
Token(type='at', text='#,reg')
Token(type='at', text='#,reg*')
Token(type='cb', text=')')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text="#'?reg*")
Token(type='ob', text="#'(")
Token(type='at', text='?reg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='reg-list')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?reg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-cons*')
Token(type='at', text='?reg')
Token(type='at', text='...')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-saved-ret-reg')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='?e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='%seq')
Token(type='at', text='%mref')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',%ret')
Token(type='cb', text=')')
Token(type='at', text=',?e')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ret')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text="#'?e")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='restore-scheme-state')
Token(type='at', text='save-scheme-state')
Token(type='at', text='with-saved-scheme-state')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='build-reg-list')
Token(type='lc', text='; TODO: create reg records at compile time, and build these lists at compile time')
Token(type='lc', text='; TODO: include ts & td')
Token(type='lc', text='; TODO: specify three lists: things that need to be saved/restored via the thread context,')
Token(type='lc', text='; things that need to be saved/restored somehow, and things that can be trashed')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='base-in')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='orig-x')
Token(type='ob', text='(')
Token(type='at', text='base-in')
Token(type='at', text='base-inreg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='inreg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='outreg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='all*')
Token(type='ob', text="'(")
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='in*')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='ob', text='(')
Token(type='at', text='inreg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='out*')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='ob', text='(')
Token(type='at', text='outreg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='remove*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='remove*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bogus*')
Token(type='ob', text='(')
Token(type='at', text='remove*')
Token(type='at', text='all*')
Token(type='at', text='in*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='equal?')
Token(type='at', text='bogus*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text="#'orig-x")
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"bogus in registers ~s"')
Token(type='at', text='bogus*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bogus*')
Token(type='ob', text='(')
Token(type='at', text='remove*')
Token(type='at', text='all*')
Token(type='at', text='out*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='equal?')
Token(type='at', text='bogus*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text="#'orig-x")
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"bogus out registers ~s"')
Token(type='at', text='bogus*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='equal?')
Token(type='ob', text='(')
Token(type='at', text='remove*')
Token(type='at', text='in*')
Token(type='at', text='out*')
Token(type='cb', text=')')
Token(type='at', text='out*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text="#'orig-x")
Token(type='st', text='"non-empty intersection"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='other*')
Token(type='ob', text='(')
Token(type='at', text='remove*')
Token(type='at', text='in*')
Token(type='ob', text='(')
Token(type='at', text='remove*')
Token(type='at', text='out*')
Token(type='at', text='all*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='other*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text="#'orig-x")
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"registers not mentioned: ~s"')
Token(type='at', text='other*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'*")
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='ob', text='(')
Token(type='at', text='base-inreg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='in*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='cons*')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='in')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='ob', text='#,(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text="'scheme-args")
Token(type='at', text='in*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text="'extra-regs")
Token(type='at', text='in*')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='append')
Token(type='at', text='arg-registers')
Token(type='at', text='extra-registers')
Token(type='cb', text=')')
Token(type='at', text="#'arg-registers")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text="'extra-regs")
Token(type='at', text='in*')
Token(type='cb', text=')')
Token(type='at', text="#'extra-registers")
Token(type='ob', text="#''(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='get-tcslot')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='k')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='in-context')
Token(type='at', text='%mref')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='ob', text=',(')
Token(type='at', text='reg-tc-disp')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='$save-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='k')
Token(type='at', text='orig-x')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='lc', text='; although eap might be changed by dirty writes, and esp might be changed by')
Token(type='lc', text='; one-shot continuation handling, we always write through to the tc so that')
Token(type='lc', text='; we never need to save eap or esp and also so that eap, which serves as the')
Token(type='lc', text='; base of the current dirty list, is always accurate, even when an invalid')
Token(type='lc', text='; memory reference or invalid instruction occurs.  so we leave eap and esp')
Token(type='lc', text='; out of the save list (but not the restore list below).')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regs-to-save')
Token(type='ob', text='(')
Token(type='at', text='build-reg-list')
Token(type='at', text='orig-x')
Token(type='ob', text='(')
Token(type='at', text='base-in')
Token(type='at', text='%sfp')
Token(type='at', text='%ap')
Token(type='at', text='%trap')
Token(type='cb', text=')')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='get-tcslot')
Token(type='at', text='k')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='at', text=',reg')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='at', text='regs-to-save')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='$restore-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='k')
Token(type='at', text='orig-x')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regs-to-restore')
Token(type='ob', text='(')
Token(type='at', text='build-reg-list')
Token(type='at', text='orig-x')
Token(type='ob', text='(')
Token(type='at', text='base-in')
Token(type='at', text='%sfp')
Token(type='at', text='%ap')
Token(type='at', text='%trap')
Token(type='at', text='%eap')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',reg')
Token(type='ob', text=',(')
Token(type='at', text='get-tcslot')
Token(type='at', text='k')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='at', text='regs-to-restore')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='save-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='$save-scheme-state')
Token(type='at', text='k')
Token(type='at', text='#,x')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='restore-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='$restore-scheme-state')
Token(type='at', text='k')
Token(type='at', text='#,x')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-saved-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='at', text='?body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='at', text='%seq')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='$save-scheme-state')
Token(type='at', text='k')
Token(type='at', text='#,x')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text=',?body')
Token(type='ob', text=',(')
Token(type='at', text='$restore-scheme-state')
Token(type='at', text='k')
Token(type='at', text='#,x')
Token(type='at', text='in')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='ctci')
Token(type='lc', text='; compile-time version of code-info')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='rpi*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='closure-fv-names')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='#f')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='ctrpi')
Token(type='lc', text='; compile-time version of rp-info')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='label')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='next-lambda-seqno')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-lambda')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libspec')
Token(type='at', text='interface*')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='flags')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='well-known?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='closure-rep')
Token(type='cb', text=')')
Token(type='at', text='ctci')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='pinfo*')
Token(type='cb', text=')')
Token(type='at', text='seqno')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='next-seqno')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='seqno')
Token(type='at', text='next-lambda-seqno')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='next-lambda-seqno')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='seqno')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='seqno')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rec')
Token(type='at', text='cons-info-lambda')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libspec')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons-info-lambda')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libspec')
Token(type='at', text='interface*')
Token(type='at', text='#f')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libspec')
Token(type='at', text='interface*')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons-info-lambda')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libspec')
Token(type='at', text='interface*')
Token(type='at', text='name')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libspec')
Token(type='at', text='interface*')
Token(type='at', text='name')
Token(type='at', text='flags')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libspec')
Token(type='at', text='interface*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='iface')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-direct-call-label')
Token(type='at', text="'dcl")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='subset-mode')
Token(type='cb', text=')')
Token(type='at', text="'system")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='at', text='flags')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-flag-system')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='flags')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='name')
Token(type='at', text='#f')
Token(type='at', text="'closure")
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='generate-inspector-information')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-ctci')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='next-seqno')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-call')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='check?')
Token(type='cb', text=')')
Token(type='at', text='pariah?')
Token(type='at', text='error?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='check?')
Token(type='at', text='pariah?')
Token(type='at', text='error?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='check?')
Token(type='at', text='pariah?')
Token(type='at', text='error?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-newframe')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cnfv*')
Token(type='at', text='nfv*')
Token(type='at', text='nfv**')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='frame-words')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='local-save*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cnfv*')
Token(type='at', text='nfv*')
Token(type='at', text='nfv**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cnfv*')
Token(type='at', text='nfv*')
Token(type='at', text='nfv**')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-kill*')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='kill*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-kill*-live*')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info-kill*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='kill*')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='kill*')
Token(type='cb', text=')')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='kill*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='kill*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-asmlib')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info-kill*-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='libspec')
Token(type='at', text='save-ra?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='kill*')
Token(type='at', text='libspec')
Token(type='at', text='save-ra?')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='kill*')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='at', text='libspec')
Token(type='at', text='save-ra?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='kill*')
Token(type='at', text='libspec')
Token(type='at', text='save-ra?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='kill*')
Token(type='cb', text=')')
Token(type='at', text='libspec')
Token(type='at', text='save-ra?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dorest-intrinsics')
Token(type='cb', text=')')
Token(type='lc', text='; standing on our heads here to avoid referencing registers at')
Token(type='lc', text='; load time...would be cleaner if registers were immutable,')
Token(type='lc', text='; i.e., mutable fields (direct and inherited from var) were kept')
Token(type='lc', text='; in separate tables...but that might add more cost to register')
Token(type='lc', text='; allocation, which is already expensive.')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='intrinsic')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='libspec')
Token(type='at', text='get-kill*')
Token(type='at', text='get-live*')
Token(type='at', text='get-rv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='intrinsic')
Token(type='at', text='save-ra?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-info-asmlib')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-get-kill*')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-libspec')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='at', text='save-ra?')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-get-live*')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='intrinsic-return-live*')
Token(type='lc', text="; used a handful of times, just while compiling library.ss...don't bother optimizing")
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='kill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='kill')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector->list')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-get-kill*')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='intrinsic-entry-live*')
Token(type='lc', text="; used a handful of times, just while compiling library.ss...don't bother optimizing")
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='lc', text='; return-live* - rv + live*')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='live')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='at', text='live*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='live')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='rv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='rv')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-get-rv*')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-get-live*')
Token(type='at', text='intrinsic')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='declare-intrinsic')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='at', text='unquote')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='entry-name')
Token(type='ob', text='(')
Token(type='at', text='kill')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rv')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='make-intrinsic')
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='entry-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='kill')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='live')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='rv')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='export')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; must include in kill ... any register explicitly assigned by the intrinsic')
Token(type='lc', text='; plus additional registers as needed to avoid spilled unspillables.  the')
Token(type='lc', text="; list could be machine-dependent but at this point it doesn't matter.")
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofargint32')
Token(type='at', text='dofargint32')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofargint64')
Token(type='at', text='dofargint64')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofargint64')
Token(type='at', text='dofargint64')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretint32')
Token(type='at', text='dofretint32')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretint64')
Token(type='at', text='dofretint64')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretint64')
Token(type='at', text='dofretint64')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretuns32')
Token(type='at', text='dofretuns32')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretuns64')
Token(type='at', text='dofretuns64')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretuns64')
Token(type='at', text='dofretuns64')
Token(type='ob', text='(')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretu8*')
Token(type='at', text='dofretu8*')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%cp')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretu16*')
Token(type='at', text='dofretu16*')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%cp')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dofretu32*')
Token(type='at', text='dofretu32*')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='%cp')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='get-room')
Token(type='at', text='get-room')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='scan-remembered-set')
Token(type='at', text='scan-remembered-set')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dooverflow')
Token(type='at', text='dooverflow')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='declare-intrinsic')
Token(type='at', text='dooverflood')
Token(type='at', text='dooverflood')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; a dorest routine takes all of the register and frame arguments from the rest')
Token(type='lc', text='; argument forward and also modifies the rest argument.  for the rest argument,')
Token(type='lc', text="; this is a wash (it's live both before and after).  the others should also be")
Token(type='lc', text="; listed as live.  it's inconvenient and currently unnecessary to do so.")
Token(type='lc', text='; (actually currently impossible to list the infinite set of frame arguments)')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='dorest-intrinsic-max')
Token(type='ob', text='(')
Token(type='at', text='identifier-syntax')
Token(type='at', text='5')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='export')
Token(type='at', text='dorest-intrinsic-max')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='list-xtail')
Token(type='at', text='ls')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='list-xtail')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx1-')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dorest-intrinsics')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='dorests')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='vector')
Token(type='ob', text='#,@(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='i')
Token(type='at', text='dorest-intrinsic-max')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='#`(')
Token(type='at', text='make-intrinsic')
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='ob', text='#,(')
Token(type='at', text='construct-name')
Token(type='at', text="#'k")
Token(type='st', text='"dorest"')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%ac0')
Token(type='at', text='%xp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%ac0')
Token(type='ob', text='(')
Token(type='at', text='list-xtail')
Token(type='at', text='arg-registers')
Token(type='at', text='#,i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='list-xtail')
Token(type='at', text='arg-registers')
Token(type='at', text='#,i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='dorests')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-alloc')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='tag')
Token(type='at', text='save-flrv?')
Token(type='at', text='save-ra?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-foreign')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='conv*')
Token(type='at', text='arg-type*')
Token(type='at', text='result-type')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='conv*')
Token(type='at', text='arg-type*')
Token(type='at', text='result-type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='conv*')
Token(type='at', text='arg-type*')
Token(type='at', text='result-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-literal')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='indirect?')
Token(type='at', text='type')
Token(type='at', text='addr')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-lea')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-load')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-loadfl')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='flreg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-condition-code')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='type')
Token(type='at', text='reversed?')
Token(type='at', text='invertible?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-c-simple-call')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info-kill*-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='save-ra?')
Token(type='at', text='entry')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='save-ra?')
Token(type='at', text='entry')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='save-ra?')
Token(type='at', text='entry')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='save-ra?')
Token(type='at', text='entry')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='at', text='save-ra?')
Token(type='at', text='entry')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='info-c-return')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-writer')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor')
Token(type='at', text='info-load')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='p')
Token(type='at', text='wr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"#<info-load ~s>"')
Token(type='ob', text='(')
Token(type='at', text='info-load-type')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-writer')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor')
Token(type='at', text='info-lambda')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='p')
Token(type='at', text='wr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"#<info-lambda ~s ~s ~s ~s ~s>"')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-libspec')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-interface*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-well-known?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-writer')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor')
Token(type='at', text='info-foreign')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='p')
Token(type='at', text='wr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"#<info-foreign~@[ ~a~]>"')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-writer')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor')
Token(type='at', text='info-literal')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='p')
Token(type='at', text='wr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"#<literal ~s>"')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='cpnanopass')
Token(type='at', text=':')
Token(type='at', text='Lsrc')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L1')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-uvars')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='id*')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'x*")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'id*")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='uvar*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='prelex->uvar')
Token(type='at', text='id*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='name*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='prelex-name')
Token(type='at', text='id*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dynamic-wind')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='prelex-name-set!')
Token(type='at', text='id*')
Token(type='at', text='uvar*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='uvar*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='b1')
Token(type='at', text='b2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='prelex-name-set!')
Token(type='at', text='id*')
Token(type='at', text='name*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='extract-uvar')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='id')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='prelex-name')
Token(type='at', text='id')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text="'extract-uvar")
Token(type='st', text='"~s is not a uvar"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',preinfo')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='make-info-lambda')
Token(type='ob', text='(')
Token(type='at', text='preinfo-src')
Token(type='at', text='preinfo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='preinfo-sexpr')
Token(type='at', text='preinfo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='preinfo-lambda-libspec')
Token(type='at', text='preinfo')
Token(type='cb', text=')')
Token(type='at', text='interface*')
Token(type='ob', text='(')
Token(type='at', text='preinfo-lambda-name')
Token(type='at', text='preinfo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='preinfo-lambda-flags')
Token(type='at', text='preinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda-set!')
Token(type='at', text='x')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='interface')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-uvars')
Token(type='ob', text='(')
Token(type='at', text='uvar*')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',uvar*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x**')
Token(type='at', text='interface*')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',preinfo')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"found unreachable clause"')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ref')
Token(type='at', text=',maybe-src')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='extract-uvar')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',maybe-src')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='extract-uvar')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',preinfo')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='ir')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-uvars')
Token(type='ob', text='(')
Token(type='at', text='uvar*')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='e*')
Token(type='at', text='uvar*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',uvar*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',preinfo')
Token(type='at', text=',e')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='ob', text='(')
Token(type='at', text='preinfo-src')
Token(type='at', text='preinfo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='preinfo-sexpr')
Token(type='at', text='preinfo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='optimize-level')
Token(type='cb', text=')')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign')
Token(type='ob', text='(')
Token(type='at', text=',conv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',name')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text=',arg-type*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',result-type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='make-info-foreign')
Token(type='at', text='conv*')
Token(type='at', text='arg-type*')
Token(type='at', text='result-type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-name-set!')
Token(type='at', text='info')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='foreign')
Token(type='at', text=',info')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='ob', text='(')
Token(type='at', text=',conv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text=',arg-type*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',result-type')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='fcallable')
Token(type='ob', text=',(')
Token(type='at', text='make-info-foreign')
Token(type='at', text='conv*')
Token(type='at', text='arg-type*')
Token(type='at', text='result-type')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='ir')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='find-matching-clause')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='len')
Token(type='at', text='x**')
Token(type='at', text='interface*')
Token(type='at', text='body*')
Token(type='at', text='kfixed')
Token(type='at', text='kvariable')
Token(type='at', text='kfail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x**')
Token(type='at', text='x**')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='interface*')
Token(type='at', text='interface*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body*')
Token(type='at', text='body*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='kfail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='interface')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='interface')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nfixed')
Token(type='ob', text='(')
Token(type='at', text='fxlognot')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='len')
Token(type='at', text='nfixed')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='kvariable')
Token(type='at', text='nfixed')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='interface')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='kfixed')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-$type-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='L')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='$type-check')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define')
Token(type='at', text='$type-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='at', text='L')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='type')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='log!test')
Token(type='at', text=',expr')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='at', text='mask')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-constant-mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',expr')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='type-check?')
Token(type='at', text=',expr')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',mask')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%type-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='$type-check')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='$type-check')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='at', text='`expr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%typed-object-check')
Token(type='lc', text='; NB: caller must bind e')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='at', text='%type-check')
Token(type='at', text='%constant')
Token(type='at', text='%mref')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text='expr')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='e1')
Token(type='at', text='...')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text='#``#,(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='seq')
Token(type='at', text='#,x')
Token(type='at', text='#,body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text="#'e2")
Token(type='ob', text="#'(")
Token(type='at', text='e1')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%mref')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='mref')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='e0')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='mref')
Token(type='at', text='e0')
Token(type='at', text=',%zero')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='name')
Token(type='at', text='e')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='inline')
Token(type='at', text=',null-info')
Token(type='ob', text=',(')
Token(type='at', text='%primitive')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%lea')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='base')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-lea')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text=',%lea1')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-lea')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text=',%lea2')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%constant')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%tc-ref')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='field-type')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='struct')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='assq')
Token(type='at', text='field')
Token(type='ob', text='(')
Token(type='at', text='getprop')
Token(type='at', text='struct')
Token(type='at', text="'*fields*")
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='field')
Token(type='at', text='type')
Token(type='at', text='disp')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"undefined field ~s-~s"')
Token(type='at', text='struct')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='k')
Token(type='at', text=',%tc')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='e-tc')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='ob', text='(')
Token(type='at', text='field-type')
Token(type='at', text="'tc")
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='at', text='ptr')
Token(type='at', text='void*')
Token(type='at', text='uptr')
Token(type='at', text='iptr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='%mref')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='%mref')
Token(type='at', text='e-tc')
Token(type='ob', text='#,(')
Token(type='at', text='lookup-constant')
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"tc-~a-disp"')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='st', text='"non-ptr-size tc field"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%constant-alloc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='tag')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='k')
Token(type='at', text='tag')
Token(type='at', text='size')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='tag')
Token(type='at', text='size')
Token(type='at', text='save-flrv?')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='k')
Token(type='at', text='tag')
Token(type='at', text='size')
Token(type='at', text='save-flrv?')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='tag')
Token(type='at', text='size')
Token(type='at', text='save-flrv?')
Token(type='at', text='save-asm-ra?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tag')
Token(type='cb', text=')')
Token(type='at', text='save-flrv?')
Token(type='at', text='save-asm-ra?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='c-alloc-align')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-recognize-let')
Token(type='at', text=':')
Token(type='at', text='L1')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L2')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='seqs-and-profiles?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L1')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='seqs-and-profiles?')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seqs-and-profiles?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Profile')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='profile*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L1')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='seqs-and-profiles?')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e1')
Token(type='at', text='profile*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='e')
Token(type='at', text='profile*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-seq')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L2')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-seq*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='at', text='build-seq')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='ob', text=',[')
Token(type='at', text='Profile')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='at', text='profile1*')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L1')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info2')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='profile1*')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x1')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='le*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='Profile')
Token(type='at', text=':')
Token(type='at', text='body')
Token(type='at', text='profile2*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text="; can't use a guard, since body isn't bound in guard.")
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='body')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='profile1*')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='profile2*')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x1')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text=',x1')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='ob', text=',(')
Token(type='at', text='build-seq*')
Token(type='at', text='profile1*')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='ob', text=',(')
Token(type='at', text='build-seq*')
Token(type='at', text='profile1*')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-discover-names')
Token(type='at', text=':')
Token(type='at', text='L2')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L3')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='->name')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='->name')
Token(type='ob', text='(')
Token(type='at', text='uvar-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='string?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='$symbol-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='#f')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='error')
Token(type='at', text="'np-discover-names")
Token(type='st', text='"x is not a name"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='name')
Token(type='at', text='moi')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='le*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='le')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='le')
Token(type='ob', text='(')
Token(type='at', text='->name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='moi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='le*')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='->name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='moi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; handle top-level set! (i.e. $set-top-level-value)')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='at', text=',e0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'$set-top-level-value!")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e0')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e0')
Token(type='ob', text='(')
Token(type='at', text='->name')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='at', text='moi')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='at', text=',e0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='at', text='#f')
Token(type='at', text='moi')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1*')
Token(type='at', text='#f')
Token(type='at', text='moi')
Token(type='at', text='->')
Token(type='at', text='e1*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',e0')
Token(type='at', text=',e1*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='at', text='#f')
Token(type='at', text='moi')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='at', text='#f')
Token(type='at', text='moi')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='#f')
Token(type='at', text='moi')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-name-set!')
Token(type='at', text='info')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='foreign')
Token(type='at', text=',info')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='#f')
Token(type='at', text='moi')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-name-set!')
Token(type='at', text='info')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',e0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e0')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e0')
Token(type='ob', text='(')
Token(type='at', text='->name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='moi')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',e0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='moi')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text=',moi')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='moi')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='cl')
Token(type='at', text='#f')
Token(type='at', text='name')
Token(type='at', text='->')
Token(type='at', text='cl')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name-set!')
Token(type='at', text='info')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='name')
Token(type='at', text='moi')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-convert-assignments')
Token(type='at', text=':')
Token(type='at', text='L3')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L4')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%primcall')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='prim')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'prim")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text='#``(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='lookup-primref')
Token(type='at', text='3')
Token(type='at', text="'prim")
Token(type='cb', text=')')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='unbound-object')
Token(type='ob', text='(')
Token(type='at', text='$unbound-object')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='partition-assigned')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='t*')
Token(type='at', text='a*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='partition-assigned')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-assigned?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-assigned!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='t')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='t')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='a*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='t*')
Token(type='at', text='a*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='handle-assigned')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='t*')
Token(type='at', text='a*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='partition-assigned')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='a*')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L4')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',a*')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='cons')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',unbound-object')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-assigned?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='car')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='set-car!')
Token(type='at', text=',x')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-assigned')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-assigned')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; for use only after mdcl field has been added to the call syntax')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%primcall')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='prim')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'prim")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text='#``(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='lookup-primref')
Token(type='at', text='3')
Token(type='at', text="'prim")
Token(type='cb', text=')')
Token(type='at', text='arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-sanitize-bindings')
Token(type='at', text=':')
Token(type='at', text='L4')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L4')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; must come before suppress-procedure-checks and recognize-mrvs')
Token(type='lc', text='; since it sets up uvar-info-lambda, but after convert-assignments')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-build-let')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='e*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L4')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-build-letrec')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='e*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L4')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-values')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ex*')
Token(type='at', text='ee*')
Token(type='at', text='lx*')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L4')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda-set!')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='ex*')
Token(type='at', text='ee*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='lx*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='ex*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='ee*')
Token(type='cb', text=')')
Token(type='at', text='lx*')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ex*')
Token(type='at', text='ee*')
Token(type='at', text='lx*')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-build-let')
Token(type='at', text='ex*')
Token(type='at', text='ee*')
Token(type='ob', text='(')
Token(type='at', text='maybe-build-letrec')
Token(type='at', text='lx*')
Token(type='at', text='le*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-suppress-procedure-checks')
Token(type='at', text=':')
Token(type='at', text='L4')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L4')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; N.B. check must be done after e and e* have been evaluated, so we attach')
Token(type='lc', text='; a flag to the call syntax rather than introducing explicit checks.')
Token(type='lc', text='; if we could introduce explicit checks instead, we could avoid doing')
Token(type='lc', text='; so along some branches of an if in call context, even if others')
Token(type='lc', text="; need the check.  c'est la vie.")
Token(type='ob', text='(')
Token(type='at', text='Proc')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='procedure?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='*')
Token(type='at', text='suppress?')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='suppress?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='*')
Token(type='at', text='suppress1?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='*')
Token(type='at', text='suppress2?')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='suppress1?')
Token(type='at', text='suppress2?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='*')
Token(type='at', text='suppress?')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='suppress?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='*')
Token(type='at', text='suppress?')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='suppress?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text="; NB: explicitly handling every form because the nanopass infrastructure can't autofill when the output is *")
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info0')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'$top-level-value")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-check?-set!')
Token(type='at', text='info0')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-check?-set!')
Token(type='at', text='info1')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='*')
Token(type='at', text='suppress?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='suppress?')
Token(type='ob', text='(')
Token(type='at', text='info-call-check?-set!')
Token(type='at', text='info')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unhandled expression ~s"')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-recognize-mrvs')
Token(type='at', text=':')
Token(type='at', text='L4')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L4.5')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='insert-procedure-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='check?')
Token(type='at', text='tmp')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L4.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check?')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='procedure?')
Token(type='at', text=',tmp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='$oops')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='st', text='"attempt to apply non-procedure ~s"')
Token(type='cb', text=')')
Token(type='at', text=',tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',pr')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'call-with-values")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='check?')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Producer')
Token(type='at', text='e1')
Token(type='at', text='check?')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Consumer')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='at', text='check?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text='#f')
Token(type='at', text=',e')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Producer')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='check?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='check?')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='find-matching-clause')
Token(type='at', text='0')
Token(type='at', text='x**')
Token(type='at', text='interface*')
Token(type='at', text='body*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='nfixed')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tp")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda-set!')
Token(type='at', text='tmp')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',tmp')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='at', text='tmp')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='Producer')
Token(type='at', text=':')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='Producer')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='le*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='Producer')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text=',pr')
Token(type='cb', text=')')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tp")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; force last part of producer to be evaluated before consumer, to')
Token(type='lc', text='; avoid interleaved evaluation of producer and consumer')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',tmp')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='check?')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text=',tmp')
Token(type='cb', text=')')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Consumer')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='producer-or')
Token(type='at', text='check?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; generate same code for single-value let-values as for let')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='at', text='interface')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='at', text=',producer-or')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='body*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='at', text=',producer-or')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-tmps')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tmp*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='at', text='tmp*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='tmp*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='interface*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-interface*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='info*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='make-list')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x**')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='make-tmps')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='at', text=',producer-or')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info*')
Token(type='ob', text=',(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text=',x*')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='insert-procedure-check')
Token(type='at', text='check?')
Token(type='at', text='x')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',producer-or')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='Consumer')
Token(type='at', text=':')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='Consumer')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='le*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='Consumer')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',producer-or')
Token(type='at', text=',pr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='procedure?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',producer-or')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tc")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; force consumer expression to be evaluated before producer body')
Token(type='lc', text='; this includes references to top-level variables: since they can')
Token(type='lc', text='; be altered by the producer, we can use a pvalue call')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',tmp')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='insert-procedure-check')
Token(type='at', text='check?')
Token(type='at', text='tmp')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',producer-or')
Token(type='at', text=',tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-expand-foreign')
Token(type='at', text=':')
Token(type='at', text='L4.5')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L4.75')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='iface')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-arg-type*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tentry")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-arg-type*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lambda-info')
Token(type='ob', text='(')
Token(type='at', text='make-info-lambda')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='iface')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='at', text=',e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',lambda-info')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',iface')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='at', text=',t')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='$instantiate-code-object')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='lc', text='; hard-wiring "cookie" to 0')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-recognize-loops')
Token(type='at', text=':')
Token(type='at', text='L4.75')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L4.875')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: also recognize andmap/for-all, ormap/exists, for-each')
Token(type='lc', text=';       and remove inline handlers')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-assigned-tmp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tloop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-assigned!')
Token(type='at', text='t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='ob', text='[')
Token(type='at', text='tail*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-loop!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x1')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info1')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info2')
Token(type='at', text=',mdcl')
Token(type='at', text=',x2')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x2')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced!')
Token(type='at', text='x1')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-loop!')
Token(type='at', text='x1')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tref?*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='tail*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tail*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x1')
Token(type='at', text='tail*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body-tref?*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='tail*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='tref?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='tref?')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tail*')
Token(type='at', text='tref?*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-loop?')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x1')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='body-tref?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='body-tref?')
Token(type='ob', text='(')
Token(type='at', text='uvar-loop!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tail*')
Token(type='at', text='body-tref?*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x1')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info1')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info2')
Token(type='at', text=',mdcl')
Token(type='at', text=',x2')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='le*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='x')
Token(type='at', text='tail*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='interface*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-interface*')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-loop!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',e')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='at', text=',e')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvlet')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='ob', text=',[')
Token(type='at', text='body*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='cl')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='at', text='pr')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unexpected Expr ~s"')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-name-anonymous-lambda')
Token(type='at', text=':')
Token(type='at', text='L4.875')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L5')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='cl')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='anon')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text="'anon")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda-set!')
Token(type='at', text='anon')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',anon')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',anon')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L4.875')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='cl')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-convert-closures')
Token(type='at', text=':')
Token(type='at', text='L5')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L6')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='clinfo')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='lid')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='index')
Token(type='at', text='0')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-offsets!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='index')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='index')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index-set!')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-offsets')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='index')
Token(type='at', text='?x*')
Token(type='at', text='?e1')
Token(type='at', text='?e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'index")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='?x*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='set-offsets!')
Token(type='at', text='x*')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='at', text='?e1')
Token(type='at', text='?e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='record-ref!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"variable ~a lost its binding"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='clinfo-lid')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='mask')
Token(type='ob', text='(')
Token(type='at', text='clinfo-mask')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='bitwise-bit-set?')
Token(type='at', text='mask')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='clinfo-mask-set!')
Token(type='at', text='clinfo')
Token(type='ob', text='(')
Token(type='at', text='bitwise-copy-bit')
Token(type='at', text='mask')
Token(type='at', text='index')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='clinfo-fv*-set!')
Token(type='at', text='clinfo')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='clinfo-fv*')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='index')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='record-ref!')
Token(type='at', text='x')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='letrec')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='le*')
Token(type='at', text='le*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rle*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rfv**')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='closures')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='reverse')
Token(type='at', text='rfv**')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='reverse')
Token(type='at', text='rle*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='le')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='le')
Token(type='at', text='rle*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='fv*')
Token(type='at', text='rfv**')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='at', text='x*')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvlet')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x**')
Token(type='at', text='x**')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body*')
Token(type='at', text='body*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='index')
Token(type='at', text='outer-clinfo')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='clinfo')
Token(type='ob', text='(')
Token(type='at', text='make-clinfo')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cl*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text='cl')
Token(type='at', text='index')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv*')
Token(type='ob', text='(')
Token(type='at', text='clinfo-fv*')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-ref!')
Token(type='at', text='x')
Token(type='at', text='outer-clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='index')
Token(type='at', text='parent-clinfo')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='clinfo')
Token(type='ob', text='(')
Token(type='at', text='make-clinfo')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv*')
Token(type='ob', text='(')
Token(type='at', text='clinfo-fv*')
Token(type='at', text='clinfo')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-ref!')
Token(type='at', text='x')
Token(type='at', text='parent-clinfo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='make-cpvar')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='le')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='make-clinfo')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"found unbound variables ~s"')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='le')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-optimize-direct-call')
Token(type='at', text=':')
Token(type='at', text='L6')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L6')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='find-matching-clause')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='len')
Token(type='at', text='info')
Token(type='at', text='kfixed')
Token(type='at', text='kvariable')
Token(type='at', text='kfail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='interface*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-interface*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='dcl*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='kfail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='interface')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='interface')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nfixed')
Token(type='ob', text='(')
Token(type='at', text='fxlognot')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='len')
Token(type='at', text='nfixed')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='kvariable')
Token(type='at', text='nfixed')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='interface')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='kfixed')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='kfail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr1')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-well-known?-set!')
Token(type='at', text='info')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr2')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-well-known?-set!')
Token(type='at', text='info')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closures')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='CaseLambdaExpr1')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='closures')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='CaseLambdaExpr2')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text="'loop")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text="'loop")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='mdcl')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='lc', text='; already a direct-call produced, e.g., by recognize-mrvs')
Token(type='ob', text='(')
Token(type='at', text='direct-call-label-referenced-set!')
Token(type='at', text='mdcl')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='find-matching-clause')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='direct-call-label-referenced-set!')
Token(type='at', text='dcl')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',dcl')
Token(type='at', text=',x')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='nfixed')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='direct-call-label-referenced-set!')
Token(type='at', text='dcl')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fixed-e*')
Token(type='ob', text='(')
Token(type='at', text='list-head')
Token(type='at', text='e*')
Token(type='at', text='nfixed')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rest-e*')
Token(type='ob', text='(')
Token(type='at', text='list-tail')
Token(type='at', text='e*')
Token(type='at', text='nfixed')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='fixed-e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; evaluate fixed-e* first, before the rest list is created.  rest-e* should')
Token(type='lc', text='; be evaluated before as well assuming later passes handle calls correctly')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t*')
Token(type='at', text=',fixed-e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',dcl')
Token(type='at', text=',x')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='ob', text=',(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='list')
Token(type='at', text=',rest-e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr2')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text="; this pass doesn't change the language, but it does add an extragrammatical")
Token(type='lc', text='; restriction: each letrec is now strongly connected')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-identify-scc')
Token(type='at', text=':')
Token(type='at', text='L6')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L6')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='lc', text='; returns a list of lists of strongly connected bindings sorted so that')
Token(type='lc', text='; if a binding in some list binding1* binds a variable x that is in the')
Token(type='lc', text='; free list of a binding in some other list binding2*, binding1* comes')
Token(type='lc', text='; before binding2*.')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='binding')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='le')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='link*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='root')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='done')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='le')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='le')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='compute-sccs')
Token(type='at', text='v*')
Token(type='cb', text=')')
Token(type='lc', text="; Tarjan's algorithm")
Token(type='lc', text='; adapted from cpletrec')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='scc*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='compute-sccs')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='index')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='stack')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='tarjan')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v-index')
Token(type='at', text='index')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binding-root-set!')
Token(type='at', text='v')
Token(type='at', text='v-index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='stack')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='v')
Token(type='at', text='stack')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='index')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='v^')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='binding-done')
Token(type='at', text='v^')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='binding-root')
Token(type='at', text='v^')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tarjan')
Token(type='at', text='v^')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binding-root-set!')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='fxmin')
Token(type='ob', text='(')
Token(type='at', text='binding-root')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binding-root')
Token(type='at', text='v^')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binding-link*')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='binding-root')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='at', text='v-index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='scc*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='at', text='stack')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v^')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binding-done-set!')
Token(type='at', text='v^')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='v^')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='v^')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='stack')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='scc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tarjan')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='binding-done')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='compute-sccs')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='v*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='scc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closures')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='le*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text="; create bindings and set each uvar's location to the corresponding binding")
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='make-binding')
Token(type='at', text='le*')
Token(type='at', text='x*')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; establish links from each binding to the bindings of its free variables')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binding-link*-set!')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='link*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='binding?')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='loc')
Token(type='at', text='link*')
Token(type='cb', text=')')
Token(type='at', text='link*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binding-x*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='lc', text='; reset uvar locations')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='ob', text='(')
Token(type='at', text='binding-x')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='lc', text='; sort bindings into strongly connected components, then')
Token(type='lc', text='; create one closure for each not-well-known binding,')
Token(type='lc', text='; and one for all well-known bindings')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b**')
Token(type='ob', text='(')
Token(type='at', text='compute-sccs')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='b**')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b*')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='b**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='closures')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='binding-x')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='binding-x*')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='binding-le')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='b**')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='np-expand-closures')
Token(type='at', text='np-expand/optimize-closures')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='sort-bindings')
Token(type='lc', text='; sort-bindings uses the otherwise unneeded info-lambda-seqno to put labels')
Token(type='lc', text='; bindings in the same order whether we run np-expand/optimize-closures or')
Token(type='lc', text='; just np-expand-closures, thus reducing code/icache layout differences and,')
Token(type='lc', text='; when there are few other differences, eliminating spurious differences')
Token(type='lc', text='; in run times.  ultimately, we should try laying code objects out')
Token(type='lc', text='; in some order that minimizes cache misses, whether at compile,')
Token(type='lc', text='; load, or collection time.')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l*')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='seqno')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='le')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='at', text='le')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-seqno')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='sort')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='ob', text='(')
Token(type='at', text='seqno')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seqno')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='cons')
Token(type='at', text='l*')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='car')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='cdr')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-expand-closures')
Token(type='at', text=':')
Token(type='at', text='L6')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L7')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='gl*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='gle*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='closure')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='name')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-uvar-location')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?uvar')
Token(type='at', text='?expr')
Token(type='at', text='?e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='uvar')
Token(type='at', text='?uvar')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='old')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='uvar')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='uvar')
Token(type='at', text='?expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='at', text='?e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='uvar')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='with-locations')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='free*')
Token(type='at', text='mcp')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='free*')
Token(type='at', text='free*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='closure-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-uvar-location')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',mcp')
Token(type='at', text=',i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='create-bindings')
Token(type='at', text='create-inits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-free-ref')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='create-bindings')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text=',(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-closure')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='ob', text=',(')
Token(type='at', text='closure-label')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='create-inits')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='closure-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text=',i')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-free-ref')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='cl*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*-set!')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-closure-rep-set!')
Token(type='at', text='info')
Token(type='at', text="'closure")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='ob', text=',(')
Token(type='at', text='with-locations')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='mcp')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closures')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='ob', text='(')
Token(type='at', text='uvar-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='c*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='make-closure')
Token(type='at', text='x*')
Token(type='at', text='l*')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='le*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='le*')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='gl*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='l*')
Token(type='at', text='gl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='gle*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='le*')
Token(type='at', text='gle*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='create-bindings')
Token(type='at', text='c*')
Token(type='ob', text='(')
Token(type='at', text='create-inits')
Token(type='at', text='c*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'fcallable")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='gl*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='label')
Token(type='at', text='gl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='gle*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='`(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='at', text=',label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='gle*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label-ref')
Token(type='at', text=',label')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L6')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='cl')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='cl')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'main")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='gl*')
Token(type='at', text='gle*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sort-bindings')
Token(type='at', text='gl*')
Token(type='at', text='gle*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='labels')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',gl*')
Token(type='at', text=',gle*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='ob', text='[')
Token(type='at', text=',l')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-expand/optimize-closures')
Token(type='at', text=':')
Token(type='at', text='L6')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L7')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='add-original-closures!')
Token(type='at', text='add-final-closures!')
Token(type='at', text='add-ref-counter')
Token(type='at', text='add-create-and-alloc-counters')
Token(type='at', text='add-raw-counters')
Token(type='at', text='with-raw-closure-ref-counter')
Token(type='at', text='with-was-closure-ref')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-create-and-alloc-counters')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c*')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='track-dynamic-closure-counts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c*')
Token(type='at', text='c*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='pair-count')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='vector-count')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='closure-count')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='vector-alloc-amount')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='closure-alloc-amount')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='padded-vector-alloc-amount')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='padded-closure-alloc-amount')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{pair-create-count bhowt6w0coxl0s2y-5}")
Token(type='at', text='pair-count')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{vector-create-count bhowt6w0coxl0s2y-6}")
Token(type='at', text='vector-count')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{closure-create-count bhowt6w0coxl0s2y-7}")
Token(type='at', text='closure-count')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{vector-alloc-count bhowt6w0coxl0s2y-8}")
Token(type='at', text='vector-alloc-amount')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{closure-alloc-count bhowt6w0coxl0s2y-9}")
Token(type='at', text='closure-alloc-amount')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{padded-vector-alloc-count bhowt6w0coxl0s2y-11}")
Token(type='at', text='padded-vector-alloc-amount')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{padded-closure-alloc-count bhowt6w0coxl0s2y-10}")
Token(type='at', text='padded-closure-alloc-amount')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='closure-type')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pair')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='pair-count')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='vector-count')
Token(type='at', text='closure-count')
Token(type='at', text='vector-alloc-amount')
Token(type='at', text='closure-alloc-amount')
Token(type='at', text='padded-vector-alloc-amount')
Token(type='at', text='padded-closure-alloc-amount')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='at', text='pair-count')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='vector-count')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='closure-count')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='vector-alloc-amount')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='at', text='closure-alloc-amount')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='padded-vector-alloc-amount')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='ob', text='(')
Token(type='at', text='fxsra')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='padded-closure-alloc-amount')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='at', text='pair-count')
Token(type='at', text='vector-count')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='closure-count')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='vector-alloc-amount')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='closure-alloc-amount')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='at', text='padded-vector-alloc-amount')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='padded-closure-alloc-amount')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='ob', text='(')
Token(type='at', text='fxsra')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='at', text='pair-count')
Token(type='at', text='vector-count')
Token(type='at', text='closure-count')
Token(type='at', text='vector-alloc-amount')
Token(type='at', text='closure-alloc-amount')
Token(type='at', text='padded-vector-alloc-amount')
Token(type='at', text='padded-closure-alloc-amount')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-counter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='counter')
Token(type='at', text='amount')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='inc-profile-counter')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#t')
Token(type='at', text="'object")
Token(type='at', text='counter')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',amount')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-ref-counter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='track-dynamic-closure-counts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{ref-count bhowt6w0coxl0s2y-4}")
Token(type='at', text='1')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-raw-closure-ref-counter')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?x')
Token(type='at', text='?e1')
Token(type='at', text='?e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='at', text='?e1')
Token(type='at', text='?e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='track-dynamic-closure-counts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-was-closure-ref?')
Token(type='at', text='?x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{raw-ref-count bhowt6w0coxl0s2y-1}")
Token(type='at', text='1')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-raw-counters')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='free**')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='track-dynamic-closure-counts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x**')
Token(type='at', text='free**')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='alloc')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='raw')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{raw-create-count bhowt6w0coxl0s2y-2}")
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='free**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{raw-alloc-count bhowt6w0coxl0s2y-3}")
Token(type='at', text='alloc')
Token(type='ob', text='(')
Token(type='at', text='add-counter')
Token(type='at', text="'#{raw-ref-count bhowt6w0coxl0s2y-1}")
Token(type='at', text='raw')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='alloc')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cnt')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-was-closure-ref?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='cnt')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='cnt')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='raw')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-was-closure-ref')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?x*')
Token(type='at', text='?e1')
Token(type='at', text='?e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='?x*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='track-dynamic-closure-counts')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='at', text='?e1')
Token(type='at', text='?e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='old-was-cr?')
Token(type='ob', text='(')
Token(type='at', text='uvar-was-closure-ref?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-was-closure-ref!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expr')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-was-closure-ref!')
Token(type='at', text='x')
Token(type='at', text='old-was-cr?')
Token(type='cb', text=')')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-original-closures!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='free**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='track-static-closure-counts')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-raw-closure-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='count')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-raw-free-var-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-raw-free-var-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='count')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-raw-closure-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='free**')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-final-closures!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='track-static-closure-counts')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='closure-type')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='closure-wk?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-empty-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-empty-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='singleton')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-single-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-single-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pair')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-pair-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-pair-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-vector-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-vector-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-vector-free-var-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-vector-free-var-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='borrowed')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-borrowed-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-wk-borrowed-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-closure-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-closure-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-closure-free-var-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-closure-free-var-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected well-known closure type ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-empty-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-empty-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-closure-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-closure-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-closure-free-var-count-set!')
Token(type='at', text='ci')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='static-closure-info-nwk-closure-free-var-count')
Token(type='at', text='ci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected non-well-known closure type ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='gl*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='gle*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='binding')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='l')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='l')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='binding-well-known?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-well-known?')
Token(type='ob', text='(')
Token(type='at', text='uvar-info-lambda')
Token(type='ob', text='(')
Token(type='at', text='binding-x')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='frob')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='seen')
Token(type='at', text='frob-seen?')
Token(type='at', text='frob-seen!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='name')
Token(type='at', text='expr')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='expr')
Token(type='at', text='seen')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='name')
Token(type='at', text='expr')
Token(type='at', text='seen')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='closure')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='wk?')
Token(type='at', text='name')
Token(type='at', text='label')
Token(type='at', text='b*')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='sibling*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='seen')
Token(type='at', text='closure-seen?')
Token(type='at', text='closure-seen!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='borrowed-name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='wk?')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='lc', text='; must use name and label of first binding')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='wk?')
Token(type='ob', text='(')
Token(type='at', text='binding-x')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binding-l')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='b*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='ob', text='(')
Token(type='at', text='binding-x')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='make-bank')
Token(type='at', text='deposit')
Token(type='at', text='retain')
Token(type='at', text='borrow')
Token(type='cb', text=')')
Token(type='lc', text='; NB: borrowing is probably cubic at present')
Token(type='lc', text='; might should represent bank as a prefix tree')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='sort-free')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sort')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-bank')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='deposit')
Token(type='lc', text='; NB: if used when self-references are possible, remove (olosure-name c) from free*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='free*')
Token(type='at', text='c')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='sort-free')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='sort-free')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='retain')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name*')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='name*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='borrow')
Token(type='lc', text='; NB: if used when self-references are possible, remove (olosure-name c) from free*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='free*')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='free*')
Token(type='ob', text='(')
Token(type='at', text='sort-free')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='assoc')
Token(type='at', text='free*')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='at', text='cdr')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-offsets!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='index')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='index')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index-set!')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-offsets')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='index')
Token(type='at', text='?x*')
Token(type='at', text='?e1')
Token(type='at', text='?e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'index")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='?x*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='set-offsets!')
Token(type='at', text='x*')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='at', text='?e1')
Token(type='at', text='?e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='create-bindings')
Token(type='at', text='create-inits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-free-ref')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='loc')
Token(type='at', text="'loop")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"found reference to loop variable outside call position"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='frob-expr')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='create-bindings')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='closure-type')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='lc', text='; NB: the pair and vector cases can be done this way only if well-known')
Token(type='lc', text='; NB: closures can be shared with each other and up to one non-well-known closure')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pair')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text=',(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='cons')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='build-free-ref')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text=',(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='vector')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='build-free-ref')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='closure-type')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text="'closure")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text=',(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-closure')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='ob', text=',(')
Token(type='at', text='closure-label')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-create-and-alloc-counters')
Token(type='at', text='c*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='create-inits')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='closure-type')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='closure-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text=',i')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-free-ref')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-frob-location')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?x')
Token(type='at', text='?expr')
Token(type='at', text='?e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frob')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='?x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='frob-expr')
Token(type='at', text='frob')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='frob-expr-set!')
Token(type='at', text='frob')
Token(type='at', text='?expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='at', text='?e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='frob-expr-set!')
Token(type='at', text='frob')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='with-locations')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='free*')
Token(type='at', text='mcp')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='singleton')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-frob-location')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pair')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-frob-location')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-ref-counter')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',mcp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-frob-location')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-ref-counter')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',mcp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text="'(")
Token(type='at', text='vector')
Token(type='at', text='closure')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='free*')
Token(type='at', text='free*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'vector")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='closure-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-frob-location')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-ref-counter')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',mcp')
Token(type='at', text=',i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='index')
Token(type='at', text='c')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*-set!')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-closure-rep-set!')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='closure-type')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bank')
Token(type='ob', text='(')
Token(type='at', text='retain')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text='cl')
Token(type='at', text='index')
Token(type='at', text='c')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='index')
Token(type='at', text='c')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='c')
Token(type='at', text='mcp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-type')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text="'constant")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'constant")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text=',interface')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='ob', text=',(')
Token(type='at', text='with-frob-location')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'borrowed")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-frob-location')
Token(type='ob', text='(')
Token(type='at', text='closure-borrowed-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='free*')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-locations')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text="'pair")
Token(type='at', text="'vector")
Token(type='cb', text=')')
Token(type='at', text='free*')
Token(type='at', text='mcp')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-locations')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='mcp')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closures')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='var-index')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; should be bound now')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='var-index')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; should either have already been bound, or are bound now')
Token(type='ob', text='(')
Token(type='at', text='add-original-closures!')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x**-loc')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='uvar-location')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='ob', text='(')
Token(type='at', text='uvar-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; create one closure for each not-well-known binding, and one for all well-known bindings')
Token(type='ob', text='[')
Token(type='at', text='c*')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='wk*')
Token(type='at', text='!wk*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='partition')
Token(type='at', text='binding-well-known?')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='make-binding')
Token(type='at', text='l*')
Token(type='at', text='x*')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='wk*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-closure')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='!wk*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='!wk*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='make-closure')
Token(type='at', text='#t')
Token(type='at', text='wk*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='lc', text='; putting one !wk* in with wk*.  claim: if any of the closures is nonempty,')
Token(type='lc', text="; all will be nonempty, so might as well allow wk* to share a !wk's closure.")
Token(type='lc', text='; if all are empty, no harm done.')
Token(type='lc', text='; TODO: there might be a more suitable !wk to pick than (car !wk*)')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-closure')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='!wk*')
Token(type='cb', text=')')
Token(type='at', text='wk*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-closure')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='!wk*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='xc*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='uvar-location')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; set up sibling* and initial free*')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='fb')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b*')
Token(type='ob', text='(')
Token(type='at', text='closure-b*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='free*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='sibling*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='closure-free*-set!')
Token(type='at', text='c')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-sibling*-set!')
Token(type='at', text='c')
Token(type='at', text='sibling*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='fx')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='binding-x*')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='free*')
Token(type='at', text='free*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='sibling*')
Token(type='at', text='sibling*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fb')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='at', text='free*')
Token(type='at', text='sibling*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frob')
Token(type='ob', text='(')
Token(type='at', text='make-frob')
Token(type='at', text='x')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='frob')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='at', text='sibling*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='frob-seen!')
Token(type='at', text='frob')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='frob?')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='frob-seen?')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='frob-name')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='free*')
Token(type='at', text='sibling*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='frob-seen!')
Token(type='at', text='loc')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='frob-name')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='at', text='sibling*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='frob-seen!')
Token(type='at', text='loc')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closure?')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='loc')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-seen?')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; no reflexive links')
Token(type='ob', text='(')
Token(type='at', text='fx')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='free*')
Token(type='at', text='sibling*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='closure-seen!')
Token(type='at', text='loc')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='free*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='at', text='sibling*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-seen!')
Token(type='at', text='loc')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected uvar location ~s"')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; find closures w/free variables (non-constant closures) and propagate')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='ormap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-free*-set!')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='closure-sibling*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text="; determine each closure's representation & set uvar location frobs")
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='free*')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frob')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-type-set!')
Token(type='at', text='c')
Token(type='at', text="'constant")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-frob')
Token(type='at', text='#f')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'closure")
Token(type='ob', text='(')
Token(type='at', text='closure-label')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closure-wk?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-type-set!')
Token(type='at', text='c')
Token(type='at', text="'singleton")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='borrow')
Token(type='at', text='free*')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='mc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-type-set!')
Token(type='at', text='c')
Token(type='at', text="'borrowed")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-borrowed-name-set!')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='mc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-free*-set!')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='closure-free*')
Token(type='at', text='mc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='mc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='lc', text='; NB: HACK')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='bank')
Token(type='ob', text='(')
Token(type='at', text='deposit')
Token(type='at', text='free*')
Token(type='at', text='c')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-type-set!')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='free*')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text="'pair")
Token(type='at', text="'vector")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-frob')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='closure-type-set!')
Token(type='at', text='c')
Token(type='at', text="'closure")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-frob')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-name')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='ob', text='(')
Token(type='at', text='binding-x')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='frob')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='closure-b*')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; NB: if we are not sharing, but we are borrowing, we need to ensure')
Token(type='lc', text='; NB: all closure variables point to final frob, and not a closure record')
Token(type='nl', text='\n')
Token(type='lc', text='; record static closure counts')
Token(type='ob', text='(')
Token(type='at', text='add-final-closures!')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; process subforms and rebuild')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='le')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L6')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='at', text='le')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='le*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='le')
Token(type='at', text='xc')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-was-closure-ref')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='le')
Token(type='at', text='index')
Token(type='at', text='xc')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='le*')
Token(type='at', text='xc*')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='gl*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='l*')
Token(type='at', text='gl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='gle*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='le*')
Token(type='at', text='gle*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c*')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='ob', text='(')
Token(type='at', text='closure-type')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='at', text='pair')
Token(type='at', text='closure')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='create-bindings')
Token(type='at', text='c*')
Token(type='ob', text='(')
Token(type='at', text='create-inits')
Token(type='at', text='c*')
Token(type='ob', text='(')
Token(type='at', text='add-raw-counters')
Token(type='at', text='x**')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; leave location clean for later passes')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='x*-loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x*')
Token(type='at', text='x*-loc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x**')
Token(type='at', text='x**-loc')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='with-raw-closure-ref-counter')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='at', text='frob-expr')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text="'loop")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text="'loop")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='at', text='mdcl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-raw-closure-ref-counter')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='frob')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='frob-name')
Token(type='at', text='frob')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',(')
Token(type='at', text='frob-expr')
Token(type='at', text='frob')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text='#f')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'fcallable")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='gl*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='label')
Token(type='at', text='gl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='gle*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='`(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='at', text=',label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='gle*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label-ref')
Token(type='at', text=',label')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='at', text='x*')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvlet')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='var**')
Token(type='at', text='x**')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body*')
Token(type='at', text='body*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rbody*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='var**')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='ob', text=',(')
Token(type='at', text='reverse')
Token(type='at', text='rbody*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='var**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='with-offsets')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='var**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='at', text='bank')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='rbody*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L6')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='cl')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='make-bank')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='cl')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'main")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='gl*')
Token(type='at', text='gle*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sort-bindings')
Token(type='at', text='gl*')
Token(type='at', text='gle*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='labels')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',gl*')
Token(type='at', text=',gle*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='ob', text='[')
Token(type='at', text=',l')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-simplify-if')
Token(type='at', text=':')
Token(type='at', text='L7')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L7')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define-$type-check')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='lc', text='; (and (fixnum? x1) ... (fixnum xn) e ...) => (and (fixnum? (logor x1 ... xn)) e ...)')
Token(type='lc', text='; restricting fixnum? arguments to vars to avoid unnecessary computation')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='process-fixnum?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info1')
Token(type='at', text='pr1')
Token(type='at', text='e')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fixnum?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text='#f')
Token(type='at', text=',pr1')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='fxlogor')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr1')
Token(type='at', text=',x1')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='mdcl')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr1')
Token(type='cb', text=')')
Token(type='at', text="'fixnum?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='d')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x1')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr1')
Token(type='at', text=',x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='mdcl')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr1')
Token(type='cb', text=')')
Token(type='at', text="'fixnum?")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fixnum?')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x1')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnum?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='process-paired-predicate')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info1')
Token(type='at', text='pr1')
Token(type='at', text='pr2')
Token(type='at', text='x-arg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='pr1')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='pr2')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr1')
Token(type='at', text="'integer?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr2')
Token(type='at', text="'exact?")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='fixnum?')
Token(type='at', text=',x-arg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='bignum?')
Token(type='at', text=',x-arg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr1')
Token(type='at', text="'port?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr2')
Token(type='at', text="'binary-port?")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-binary-port')
Token(type='at', text='type-binary-port')
Token(type='at', text=',x-arg')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr1')
Token(type='at', text="'port?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr2')
Token(type='at', text="'textual-port?")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-textual-port')
Token(type='at', text='type-textual-port')
Token(type='at', text=',x-arg')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr1')
Token(type='at', text="'input-port?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr2')
Token(type='at', text="'binary-port?")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-binary-input-port')
Token(type='at', text='type-binary-input-port')
Token(type='at', text=',x-arg')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr1')
Token(type='at', text="'input-port?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr2')
Token(type='at', text="'textual-port?")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-textual-input-port')
Token(type='at', text='type-textual-input-port')
Token(type='at', text=',x-arg')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr1')
Token(type='at', text="'output-port?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr2')
Token(type='at', text="'binary-port?")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-binary-output-port')
Token(type='at', text='type-binary-output-port')
Token(type='at', text=',x-arg')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr1')
Token(type='at', text="'output-port?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pr2')
Token(type='at', text="'textual-port?")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-textual-output-port')
Token(type='at', text='type-textual-output-port')
Token(type='at', text=',x-arg')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr1')
Token(type='at', text=',x1')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='d')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='mdcl')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr1')
Token(type='cb', text=')')
Token(type='at', text="'fixnum?")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-fixnum?')
Token(type='at', text='info1')
Token(type='at', text='pr1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info5')
Token(type='at', text=',mdcl5')
Token(type='at', text=',pr2')
Token(type='at', text=',x2')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x2')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='mdcl5')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='d')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-paired-pred')
Token(type='ob', text='(')
Token(type='at', text='process-paired-predicate')
Token(type='at', text='info1')
Token(type='at', text='pr1')
Token(type='at', text='pr2')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='e-paired-pred')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e-paired-pred')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info4')
Token(type='at', text=',mdcl4')
Token(type='at', text=',pr2')
Token(type='at', text=',x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x2')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='mdcl4')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-paired-predicate')
Token(type='at', text='info1')
Token(type='at', text='pr1')
Token(type='at', text='pr2')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr1')
Token(type='at', text=',x1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='np-profile-unroll-loops')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='mvmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?n')
Token(type='at', text='?proc')
Token(type='at', text='?ls1')
Token(type='at', text='?ls2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='?n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text="#'?n")
Token(type='st', text='"invalid return-value count"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='foo*')
Token(type='ob', text='(')
Token(type='at', text='make-list')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ls2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='generate-temporaries')
Token(type='ob', text="#'(")
Token(type='at', text='?ls2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='generate-temporaries')
Token(type='at', text='foo*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='out*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='generate-temporaries')
Token(type='at', text='foo*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='proc')
Token(type='at', text='?proc')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls1')
Token(type='at', text='?ls1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='ls2')
Token(type='at', text='?ls2')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='ls1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='out')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='proc')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ls1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ls2')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='out*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ls1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ls2')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='out')
Token(type='at', text='out*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='loop-unroll-limit')
Token(type='ob', text='(')
Token(type='at', text='$make-thread-parameter')
Token(type='at', text='0')
Token(type='lc', text='; NB: disabling loop unrolling for now')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"~s is not a fixnum"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='PATH-SIZE-LIMIT')
Token(type='at', text='100')
Token(type='cb', text=')')
Token(type='lc', text=';; NB: this comment is no longer accurate')
Token(type='lc', text=";; Code growth computation is a little restrictive since it's measured")
Token(type='lc', text=';; per loop... but maybe since new-size is weighted when profiling is')
Token(type='lc', text=";; enabled it's fine.")
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='CODE-GROWTH-FACTOR')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='ob', text='(')
Token(type='at', text='loop-unroll-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='delay')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='force')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='procedure?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='analyze-loops')
Token(type='lc', text=';; -> (lambda () body) size new-weighted-size')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='path-size')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='lc', text=";; Not really a loop, just didn't want to pass around path-size and unroll-count when unnecessary")
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='#f')
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='1')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e1')
Token(type='at', text='->')
Token(type='at', text='e1-promise')
Token(type='at', text='e1-size')
Token(type='at', text='e1-new-size')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e2')
Token(type='at', text='->')
Token(type='at', text='e2-promise')
Token(type='at', text='e2-size')
Token(type='at', text='e2-new-size')
Token(type='cb', text=']')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e1-promise')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e2-promise')
Token(type='cb', text=')')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e1-size')
Token(type='at', text='e2-size')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e1-new-size')
Token(type='at', text='e2-new-size')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',lvalue')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='1')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='body')
Token(type='at', text='1')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e*')
Token(type='at', text='->')
Token(type='at', text='e*-promise')
Token(type='at', text='size*')
Token(type='at', text='new-size*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='force')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e*')
Token(type='at', text='->')
Token(type='at', text='e*-promise')
Token(type='at', text='size*')
Token(type='at', text='new-size*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='force')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e*')
Token(type='at', text='->')
Token(type='at', text='e*-promise')
Token(type='at', text='size*')
Token(type='at', text='new-size*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text=';; NB: Magic formulas, using number assuming query-count \\in [0,1000]')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='src')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='query-count')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='src')
Token(type='ob', text='(')
Token(type='at', text='profile-query-weight')
Token(type='at', text='src')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text=";; don't bother with unimportant loops (less than 1% count relative to max)")
Token(type='ob', text='[')
Token(type='at', text='query-count')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='query-count')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='at', text='query-count')
Token(type='at', text='.1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='exact')
Token(type='ob', text='(')
Token(type='at', text='truncate')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='query-count')
Token(type='at', text='1000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text=';; allow path-size to increase up to 300')
Token(type='ob', text='[')
Token(type='at', text='adjusted-path-size-limit')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='PATH-SIZE-LIMIT')
Token(type='ob', text='(')
Token(type='at', text='fx/')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='query-count')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='5')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text=';; allow unroll limit to increase up to 4')
Token(type='ob', text='[')
Token(type='at', text='adjusted-unroll-limit')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='loop-unroll-limit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx/')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='query-count')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='300')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fxzero?')
Token(type='at', text='query-count')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxzero?')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='unroll-count')
Token(type='at', text='adjusted-unroll-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='path-size')
Token(type='at', text='adjusted-path-size-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='force')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='var*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop-body-promise')
Token(type='at', text='body-size')
Token(type='at', text='new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='at', text='path-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx1-')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='query-count')
Token(type='ob', text='(')
Token(type='at', text='fx/')
Token(type='at', text='x')
Token(type='at', text='query-count')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='at', text='new-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='acceptable-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='at', text='adjusted-unroll-limit')
Token(type='cb', text=')')
Token(type='at', text='body-size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text=';; NB: trying code growth computation here, where it could be per call site.')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='new-size')
Token(type='at', text='acceptable-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='var')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',var')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rename-loop-body')
Token(type='ob', text='(')
Token(type='at', text='force')
Token(type='at', text='loop-body-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='var*')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text=';; pretend the new size is smaller for important loops')
Token(type='at', text='new-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e*-promise')
Token(type='at', text='size*')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mvmap')
Token(type='at', text='3')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='at', text='path-size')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='force')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',e')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-promise')
Token(type='at', text='e-size')
Token(type='at', text='e-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e*-promise')
Token(type='at', text='size*')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mvmap')
Token(type='at', text='3')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='at', text='path-size')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='force')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='5')
Token(type='at', text='e-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='5')
Token(type='at', text='e-new-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='at', text='->')
Token(type='at', text='e-promise')
Token(type='at', text='e-size')
Token(type='at', text='e-new-size')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e*')
Token(type='at', text='->')
Token(type='at', text='e*-promise')
Token(type='at', text='size*')
Token(type='at', text='new-size*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='force')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='5')
Token(type='at', text='e-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='5')
Token(type='at', text='e-new-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='body')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='at', text='size')
Token(type='at', text='new-size')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='at', text='new-size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvlet')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='at', text='->')
Token(type='at', text='e-promise')
Token(type='at', text='e-size')
Token(type='at', text='e-new-size')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='body*-promise')
Token(type='at', text='body*-size')
Token(type='at', text='body*-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mvmap')
Token(type='at', text='3')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e-size')
Token(type='at', text='path-size')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='force')
Token(type='at', text='body*-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='body*-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e-new-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='body*-new-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1-promise')
Token(type='at', text='e1-size')
Token(type='at', text='e1-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='5')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e2-promise')
Token(type='at', text='e2-size')
Token(type='at', text='e2-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='5')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e1-promise')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e2-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='5')
Token(type='at', text='e1-size')
Token(type='at', text='e2-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='5')
Token(type='at', text='e1-new-size')
Token(type='at', text='e2-new-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e*')
Token(type='at', text='->')
Token(type='at', text='e*-promise')
Token(type='at', text='size*')
Token(type='at', text='new-size*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='body-promise')
Token(type='at', text='body-size')
Token(type='at', text='body-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='path-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='force')
Token(type='at', text='e*-promise')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='body-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='1')
Token(type='at', text='body-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='1')
Token(type='at', text='body-new-size')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='fx+')
Token(type='at', text='new-size*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e0')
Token(type='at', text='->')
Token(type='at', text='e0-promise')
Token(type='at', text='e0-size')
Token(type='at', text='e0-new-size')
Token(type='cb', text=']')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1-promise')
Token(type='at', text='e1-size')
Token(type='at', text='e1-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='path-size')
Token(type='at', text='e0-size')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e2-promise')
Token(type='at', text='e2-size')
Token(type='at', text='e2-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='path-size')
Token(type='at', text='e0-size')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e0-promise')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e1-promise')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e2-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e0-size')
Token(type='at', text='e1-size')
Token(type='at', text='e2-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e0-new-size')
Token(type='at', text='e1-new-size')
Token(type='at', text='e2-new-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e0')
Token(type='at', text='->')
Token(type='at', text='e0-promise')
Token(type='at', text='e0-size')
Token(type='at', text='e0-new-size')
Token(type='cb', text=']')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1-promise')
Token(type='at', text='e1-size')
Token(type='at', text='e1-new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='path-size')
Token(type='at', text='e0-size')
Token(type='cb', text=')')
Token(type='at', text='unroll-count')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e0-promise')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e1-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e0-size')
Token(type='at', text='e1-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e0-new-size')
Token(type='at', text='e1-new-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='at', text='->')
Token(type='at', text='e-promise')
Token(type='at', text='e-size')
Token(type='at', text='e-new-size')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='1')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='1')
Token(type='at', text='e-new-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='at', text='->')
Token(type='at', text='e-promise')
Token(type='at', text='e-size')
Token(type='at', text='e-new-size')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='1')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='1')
Token(type='at', text='e-new-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='loop')
Token(type='at', text=':')
Token(type='at', text='body')
Token(type='at', text='->')
Token(type='at', text='body-promise')
Token(type='at', text='body-size')
Token(type='at', text='body-new-size')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text=';; NB: Handling of inner loops?')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='delay')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='body-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body-size')
Token(type='at', text='body-new-size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"forgot a case: ~a"')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='rename-loop-body')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-fresh')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='rename-ht')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rename-ht')
Token(type='ob', text='(')
Token(type='at', text='hashtable-copy')
Token(type='at', text='rename-ht')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='ob', text='(')
Token(type='at', text='uvar-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq-hashtable-set!')
Token(type='at', text='rename-ht')
Token(type='at', text='x')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='rename-ht')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='eq-hashtable-ref')
Token(type='at', text='rename-ht')
Token(type='at', text='x')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='rename-ht')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='x*')
Token(type='at', text='rename-ht')
Token(type='at', text='->')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='lc', text=";; NB: with-fresh is so well designed that it can't handle this case")
Token(type='ob', text='(')
Token(type='at', text='let*-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-fresh')
Token(type='at', text='rename-ht')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='rename-ht')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-fresh')
Token(type='at', text='rename-ht')
Token(type='at', text='x*')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='rename-ht')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvlet')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x**/body*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-fresh')
Token(type='at', text='rename-ht')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='rename-ht')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x**')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x**')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='car')
Token(type='at', text='x**/body*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='cdr')
Token(type='at', text='x**/body*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='ir')
Token(type='ob', text='(')
Token(type='at', text='make-eq-hashtable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-profile-unroll-loops')
Token(type='at', text=':')
Token(type='at', text='L7')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L7')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-promise')
Token(type='at', text='size')
Token(type='at', text='new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='analyze-loops')
Token(type='at', text='body')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='loop-unroll-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='lc', text=';; NB: Not fx')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text=';; trying out code-growth computation higher up')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='new-size')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='size')
Token(type='at', text='CODE-GROWTH-FACTOR')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"Opt: ~a\\n"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='force')
Token(type='at', text='e-promise')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"New size: ~a, old size: ~a\\n"')
Token(type='at', text='new-size')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$loop-unroll-limit')
Token(type='at', text='loop-unroll-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='target-fixnum?')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='most-negative-fixnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='most-negative-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='fixnum?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bignum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='most-negative-fixnum')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='unfix')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ptr->imm')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='seof')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$unbound-object?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='sunbound')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='bwp-object?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='sbwp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='char?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='char-factor')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char->integer')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-char')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='ref-reg')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'reg")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text="#'reg")
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='%mref')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='ob', text=',(')
Token(type='at', text='tc-disp')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; TODO: recognize a direct call when it is at the end of a sequence, closures, or let form')
Token(type='lc', text='; TODO: push call into if? (would need to pull arguments into temporaries to ensure order of evaluation')
Token(type='lc', text='; TODO: how does this interact with mvcall?')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='np-expand-primitives')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='new-l*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='new-le*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ht2')
Token(type='ob', text='(')
Token(type='at', text='make-hashtable')
Token(type='at', text='symbol-hash')
Token(type='at', text='eq?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ht3')
Token(type='ob', text='(')
Token(type='at', text='make-hashtable')
Token(type='at', text='symbol-hash')
Token(type='at', text='eq?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='handle-prim')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='level')
Token(type='at', text='name')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='handler')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='level')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='symbol-hashtable-ref')
Token(type='at', text='ht3')
Token(type='at', text='name')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='symbol-hashtable-ref')
Token(type='at', text='ht2')
Token(type='at', text='name')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='handler')
Token(type='ob', text='(')
Token(type='at', text='handler')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='Symref')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='?sym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#t')
Token(type='at', text="'object")
Token(type='at', text='?sym')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-expand-primitives')
Token(type='at', text=':')
Token(type='at', text='L7')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L9')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Program')
Token(type='at', text=':')
Token(type='at', text='Program')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Program')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='labels')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',l*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-l*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='new-le*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='le*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='le*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='labels')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',l*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='ob', text='[')
Token(type='at', text=',new-l*')
Token(type='at', text=',new-le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ptr->imm')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='at', text='d')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='Symref')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info0')
Token(type='at', text=',mdcl0')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text=',mdcl1')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'$top-level-value")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info0')
Token(type='at', text=',mdcl0')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='handle-prim')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-level')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='at', text='Expr')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='Expr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; NB: expand calls through symbol top-level values similarly')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='any-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='abort-op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-info-call')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-check?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='unhandled-arity')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unhandled argument count ~s for ~s"')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='at', text="'name")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-$type-check')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-inline')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ctht2')
Token(type='ob', text='(')
Token(type='at', text='make-hashtable')
Token(type='at', text='symbol-hash')
Token(type='at', text='eq?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ctht3')
Token(type='ob', text='(')
Token(type='at', text='make-hashtable')
Token(type='at', text='symbol-hash')
Token(type='at', text='eq?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='check-and-record')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='level')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='symbol-hashtable-cell')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='level')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='ctht2')
Token(type='at', text='ctht3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax->datum')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='name')
Token(type='st', text='"duplicate inline"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-cdr!')
Token(type='at', text='a')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='compute-interface')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'x")
Token(type='cb', text=')')
Token(type='at', text='-1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text="#'(")
Token(type='at', text='x')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='...')
Token(type='at', text='.')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlognot')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text="#'(")
Token(type='at', text='x')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='bitmaskify')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='i*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='at', text='mask')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='-1')
Token(type='ob', text='(')
Token(type='at', text='fxlognot')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='i*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='level')
Token(type='at', text='id')
Token(type='at', text='clause')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'id")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='level')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='level')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='id')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='memv')
Token(type='at', text='level')
Token(type='ob', text="'(")
Token(type='at', text='2')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"invalid level ~s in inline definition"')
Token(type='at', text='level')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='pr')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='level')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text="'*prim2*")
Token(type='at', text="'*prim3*")
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"primref.ss"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='at', text='pr')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"unrecognized primitive name ~s in inline definition"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='arity')
Token(type='ob', text='(')
Token(type='at', text='primref-arity')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='arity')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='bitmaskify')
Token(type='at', text='arity')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bitmaskify')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='compute-interface')
Token(type='ob', text="#'(")
Token(type='at', text='clause')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"arity mismatch for ~s"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='check-and-record')
Token(type='at', text='level')
Token(type='at', text="#'id")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='symbol-hashtable-set!')
Token(type='ob', text='#,(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='level')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text="#'ht2")
Token(type='at', text="#'ht3")
Token(type='cb', text=')')
Token(type='at', text="'id")
Token(type='ob', text='(')
Token(type='at', text='rec')
Token(type='at', text='moi')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text='clause')
Token(type='at', text='...')
Token(type='ob', text='[')
Token(type='at', text='rest')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='no-need-to-bind?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='multiple-ref?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-assigned?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='%zero')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='lc', text='; might should produce binding if imm is large')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='multiple-ref?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ptr->imm')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='multiple-ref?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='multiple-ref?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='info-literal-indirect?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='binder')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='multiple-ref?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='e')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='at', text=',e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='list-binder')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='dobind')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='at', text='dobind*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dobind')
Token(type='ob', text='(')
Token(type='at', text='dobind*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='$bind')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t0*')
Token(type='ob', text='(')
Token(type='at', text='generate-temporaries')
Token(type='ob', text="#'(")
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b*')
Token(type='ob', text="#'(")
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t*')
Token(type='at', text='t0*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='t0*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='at', text='t')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'x")
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='#,(')
Token(type='at', text='car')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='dobind')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text="'type")
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dobind')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text="#'x")
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'x")
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='ob', text='#,(')
Token(type='at', text='car')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='dobind')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text="'type")
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dobind')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='b*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text="#'x")
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='bind')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'type")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$bind')
Token(type='at', text='binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='multiple-ref?')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$bind')
Token(type='at', text='binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text='ptr')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='list-bind')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='identifier?')
Token(type='at', text="#'type")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$bind')
Token(type='at', text='list-binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='multiple-ref?')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$bind')
Token(type='at', text='list-binder')
Token(type='at', text='multiple-ref?')
Token(type='at', text='ptr')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='build-libcall')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='pariah?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='at', text="'*libspec*")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='interface-okay?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='interface*')
Token(type='at', text='cnt')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ormap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='interface')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='cnt')
Token(type='ob', text='(')
Token(type='at', text='lognot')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='cnt')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='st', text='"unrecognized library routine"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text="#'(")
Token(type='at', text='e')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='libspec-interface')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='st', text='"invalid number of arguments"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='is-pariah?')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='pariah?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='boolean?')
Token(type='at', text='is-pariah?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='st', text='"pariah indicator must be a boolean literal"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='libspec-error?')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='is-pariah?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-error')
Token(type='at', text='x')
Token(type='st', text='"pariah indicator is inconsistent with libspec-error indicator"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='#`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='pariah?')
Token(type='ob', text='#,(')
Token(type='at', text='libspec-error?')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library")
Token(type='ob', text="'#,(")
Token(type='at', text='datum->syntax')
Token(type='at', text="#'*")
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='is-pariah?')
Token(type='ob', text="#'`(")
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='at', text="#'`body")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: handle immediate?')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pred?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pred?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: handle immediate?')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='constant-value')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='at', text='d')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: handle immediate if constant? does')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-label')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='Llib')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='Llib')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fix')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-unfix')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-not')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-null?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-nil')
Token(type='at', text='snil')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-eq?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-eqv?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='eqv?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-build-eqv?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-eqv?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='fixnum-constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='target-fixnum?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='expr->index')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='alignment')
Token(type='at', text='limit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='at', text='d')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='at', text='d')
Token(type='at', text='limit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxzero?')
Token(type='ob', text='(')
Token(type='at', text='logand')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='alignment')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='remp')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='ob', text=',(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-flonums?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='remp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='flonum?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='check')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='check')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='at', text='check')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-chars?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='char-constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='char-constant?')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='char-constant?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='char-constant?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-list')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-pair')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='next-i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',next-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='loop')
Token(type='at', text='e*')
Token(type='at', text='next-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-pair?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-pair')
Token(type='at', text='type-pair')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-car')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-cdr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-char->integer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='char-data-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-integer->char')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='char-data-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-char')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-dirty-store')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='offset')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='base')
Token(type='at', text='%zero')
Token(type='at', text='offset')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='s')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',s')
Token(type='at', text=',r')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='e')
Token(type='at', text='build-assign')
Token(type='at', text='build-seq')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ptr->imm')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-assign')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='index')
Token(type='at', text='%zero')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%lea')
Token(type='at', text=',base')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%lea')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text="; NB: should work harder to determine cases where x can't be a fixnum")
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; eval a second so the address is not live across any calls')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='at', text='a')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq')
Token(type='ob', text='(')
Token(type='at', text='build-assign')
Token(type='at', text='a')
Token(type='at', text='%zero')
Token(type='at', text='0')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='remember')
Token(type='at', text=',a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; eval a second so the address is not live across any calls')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='at', text='a')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq')
Token(type='ob', text='(')
Token(type='at', text='build-assign')
Token(type='at', text='a')
Token(type='at', text='%zero')
Token(type='at', text='0')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='remember')
Token(type='at', text=',a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-build-cas')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='old-v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='cas')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='at', text=',old-v')
Token(type='at', text=',v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'eq?")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-cas-seq')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cas')
Token(type='at', text='remember')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',cas')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='at', text=',remember')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-$record')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tag')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='tag')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',tag')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='args')
Token(type='at', text='args')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-$real->flonum')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='x')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='flonum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='real->flonum')
Token(type='at', text='x')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%lea')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='inexactnum-real-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-flonum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='typemod')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%lea')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='inexactnum-imag-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-flonum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='typemod')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-build-fill')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='elt-bytes')
Token(type='at', text='data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ptr-bytes')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='super-size')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='super-size-imm')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bytes')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='elt-bytes')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logand')
Token(type='at', text='imm')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logand')
Token(type='at', text='imm')
Token(type='at', text='#xffff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected elt-bytes ~s"')
Token(type='at', text='elt-bytes')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='elt-bytes')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logand')
Token(type='at', text='imm')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logand')
Token(type='at', text='imm')
Token(type='at', text='#xffff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='logand')
Token(type='at', text='imm')
Token(type='at', text='#xffffffff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='imm')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected elt-bytes ~s"')
Token(type='at', text='elt-bytes')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='super-size-expr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e-fill')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='e-fill')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e-fill')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bytes')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='elt-bytes')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='e-fill')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='e-fill')
Token(type='at', text='#xffff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected elt-bytes ~s"')
Token(type='at', text='elt-bytes')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='elt-bytes')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='e-fill')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='e-fill')
Token(type='at', text='#xffff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='e-fill')
Token(type='at', text='#xffffffff')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='double')
Token(type='at', text='e-fill')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected elt-bytes ~s"')
Token(type='at', text='elt-bytes')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='elt-bytes')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ptr->imm')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='at', text='super-size-imm')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='super-size-expr')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='super-size-imm')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='super-size-expr')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-vec')
Token(type='at', text='e-bytes')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='lc', text='; NB: caller must bind e-vec and e-fill')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#t')
Token(type='at', text='e-vec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#f')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-bytes')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='4')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='imm')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='e-vec')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='super-size')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='elt-bytes')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='fxlogand')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='ptr-bytes')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-vec')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='data-disp')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-fill')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='e-vec')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='super-size')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='elt-bytes')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='at', text='e-bytes')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-bytes')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='logand')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='ptr-bytes')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e-bytes')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='ptr-bytes')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-vec')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-vec')
Token(type='at', text=',t')
Token(type='at', text=',data-disp')
Token(type='cb', text=')')
Token(type='at', text=',e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';; NOTE: integer->ptr and unsigned->ptr DO NOT handle 64-bit integers on a 32-bit machine.')
Token(type='lc', text=';; this is okay for $object-ref and $object-set!, which do not support moving 64-bit values')
Token(type='lc', text=';; as single entities on a 32-bit machine, but care should be taken if these are used with')
Token(type='lc', text=';; other primitives.')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='integer->ptr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='case')
Token(type='at', text='width')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretint32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretint64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"can\'t handle width ~s"')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='unsigned->ptr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='case')
Token(type='at', text='width')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretuns32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretuns64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"can\'t handle width ~s"')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='i32xu32->ptr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='hi')
Token(type='at', text='lo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lbig')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lbig")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',hi')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',lo')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='31')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fxlo')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='at', text='lo')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='fxlo')
Token(type='cb', text=')')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='at', text=',fxlo')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lbig')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lbig')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretint64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='u32xu32->ptr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='hi')
Token(type='at', text='lo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lbig')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lbig")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',hi')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lbig')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lbig')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretuns64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='ptr->integer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='value')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-unfix')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='width')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofargint32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='width')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofargint64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"can\'t handle width ~s"')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ptr-type')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-64")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'ptr-type")
Token(type='st', text='"unknown ptr-bit size ~s"')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='type->width')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-8')
Token(type='at', text='unsigned-8')
Token(type='at', text='char')
Token(type='cb', text=')')
Token(type='at', text='8')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-16')
Token(type='at', text='unsigned-16')
Token(type='cb', text=')')
Token(type='at', text='16')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-24')
Token(type='at', text='unsigned-24')
Token(type='cb', text=')')
Token(type='at', text='24')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-32')
Token(type='at', text='unsigned-32')
Token(type='at', text='single-float')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-40')
Token(type='at', text='unsigned-40')
Token(type='cb', text=')')
Token(type='at', text='40')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-48')
Token(type='at', text='unsigned-48')
Token(type='cb', text=')')
Token(type='at', text='48')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-56')
Token(type='at', text='unsigned-56')
Token(type='cb', text=')')
Token(type='at', text='56')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-64')
Token(type='at', text='unsigned-64')
Token(type='at', text='double-float')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='scheme-object')
Token(type='at', text='fixnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='wchar')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='wchar-bits')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unknown type ~s"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='offset-expr->index+offset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='%zero')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='build-unfix')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='build-int-load')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='build-int')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-8')
Token(type='at', text='unsigned-8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-16')
Token(type='at', text='integer-32')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-64')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'integer-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-24')
Token(type='at', text='unsigned-24')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='unaligned-integers')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='hi-type')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'integer-24")
Token(type='cb', text=')')
Token(type='at', text="'integer-8")
Token(type='at', text="'unsigned-8")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='hi-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-16")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-40')
Token(type='at', text='unsigned-40')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='unaligned-integers')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='hi-type')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'integer-40")
Token(type='cb', text=')')
Token(type='at', text="'integer-8")
Token(type='at', text="'unsigned-8")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='hi-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='hi-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-48')
Token(type='at', text='unsigned-48')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='unaligned-integers')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='hi-type')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'integer-48")
Token(type='cb', text=')')
Token(type='at', text="'integer-16")
Token(type='at', text="'unsigned-16")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='hi-type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='hi-type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-56')
Token(type='at', text='unsigned-56')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='unaligned-integers')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='mi')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='6')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='hi-type')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'integer-56")
Token(type='cb', text=')')
Token(type='at', text="'integer-8")
Token(type='at', text="'unsigned-8")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='hi-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-16")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',mi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='hi-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-16")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',mi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unsupported type ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='build-object-ref')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset-expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='offset-expr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='scheme-object')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='double-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='swapped?')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-64")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%load-double')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%store-double')
Token(type='at', text=',t')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='single-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='swapped?')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%load-single->double')
Token(type='at', text=',t')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%store-double')
Token(type='at', text=',t')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%load-single->double')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%store-double')
Token(type='at', text=',t')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-8')
Token(type='at', text='integer-16')
Token(type='at', text='integer-24')
Token(type='at', text='integer-32')
Token(type='at', text='integer-40')
Token(type='at', text='integer-48')
Token(type='at', text='integer-56')
Token(type='at', text='integer-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int-load')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text="'(")
Token(type='at', text='integer-40')
Token(type='at', text='integer-48')
Token(type='at', text='integer-56')
Token(type='at', text='integer-64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='i32xu32->ptr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='integer->ptr')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='unsigned-8')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-24')
Token(type='at', text='unsigned-32')
Token(type='at', text='unsigned-40')
Token(type='at', text='unsigned-48')
Token(type='at', text='unsigned-56')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int-load')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text="'(")
Token(type='at', text='unsigned-40')
Token(type='at', text='unsigned-48')
Token(type='at', text='unsigned-56')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='u32xu32->ptr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unsigned->ptr')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unsupported type ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='build-int-store')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-8')
Token(type='at', text='unsigned-8')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='at', text=',value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-16')
Token(type='at', text='integer-32')
Token(type='at', text='integer-64')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-32')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='at', text=',value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-24')
Token(type='at', text='unsigned-24')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='unaligned-integers')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-16")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='at', text=',value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',value')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-40')
Token(type='at', text='unsigned-40')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='unaligned-integers')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='at', text=',value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',value')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-48')
Token(type='at', text='unsigned-48')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='unaligned-integers')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='at', text=',value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-16")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',value')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-56')
Token(type='at', text='unsigned-56')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='unaligned-integers')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lo')
Token(type='at', text='mi')
Token(type='at', text='hi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='at', text='swapped?')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='offset')
Token(type='at', text='6')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-32")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',lo')
Token(type='cb', text=')')
Token(type='at', text=',value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-16")
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',mi')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',value')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',hi')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',value')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='48')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unsupported type ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='build-object-set!')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset-expr')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='offset-expr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-set!')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='scheme-object')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='double-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%load-double')
Token(type='at', text=',value')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%store-double')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='single-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%load-double->single')
Token(type='at', text=',value')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%store-single')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; 40-bit+ only on 64-bit machines')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-8')
Token(type='at', text='integer-16')
Token(type='at', text='integer-24')
Token(type='at', text='integer-32')
Token(type='at', text='integer-40')
Token(type='at', text='integer-48')
Token(type='at', text='integer-56')
Token(type='at', text='integer-64')
Token(type='at', text='unsigned-8')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-24')
Token(type='at', text='unsigned-32')
Token(type='at', text='unsigned-40')
Token(type='at', text='unsigned-48')
Token(type='at', text='unsigned-56')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int-store')
Token(type='at', text='#f')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='ptr->integer')
Token(type='at', text='value')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized type ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='build-swap-object-set!')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset-expr')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='offset-expr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-swap-object-set!')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='type')
Token(type='lc', text='; only on 64-bit machines')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='double-float')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-64")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',value')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; 40-bit+ only on 64-bit machines')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='integer-16')
Token(type='at', text='integer-24')
Token(type='at', text='integer-32')
Token(type='at', text='integer-40')
Token(type='at', text='integer-48')
Token(type='at', text='integer-56')
Token(type='at', text='integer-64')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-24')
Token(type='at', text='unsigned-32')
Token(type='at', text='unsigned-40')
Token(type='at', text='unsigned-48')
Token(type='at', text='unsigned-56')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int-store')
Token(type='at', text='#t')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='ptr->integer')
Token(type='at', text='value')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized type ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='extract-unsigned-bitfield')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='raw?')
Token(type='at', text='start')
Token(type='at', text='end')
Token(type='at', text='arg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='left')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='raw?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='right')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='raw?')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='left')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='left')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='left')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='arg')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',arg')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',left')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',right')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='start')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='extract-signed-bitfield')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='raw?')
Token(type='at', text='start')
Token(type='at', text='end')
Token(type='at', text='arg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='left')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='raw?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='right')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='raw?')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='left')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='left')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='left')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='arg')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',arg')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',left')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='right')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',right')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='start')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='insert-bitfield')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='raw?')
Token(type='at', text='start')
Token(type='at', text='end')
Token(type='at', text='bf-width')
Token(type='at', text='arg')
Token(type='at', text='val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='raw?')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='start')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',arg')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',val')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='end')
Token(type='at', text='bf-width')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',arg')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='start')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',val')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='start')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',val')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='start')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='val')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',arg')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='lognot')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='expt')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='val')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',val')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='start')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',arg')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',val')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='---')
Token(type='cb', text=']')
Token(type='lc', text='; end < fixnum-bits')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',arg')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='lognot')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='expt')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='start')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',val')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='current-shift')
Token(type='at', text='target-shift')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='delta')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='current-shift')
Token(type='at', text='target-shift')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='delta')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='delta')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='delta')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',delta')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='extract-length')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t/l')
Token(type='at', text='length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='t/l')
Token(type='at', text='length-offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-type/length')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='type')
Token(type='at', text='current-shift')
Token(type='at', text='target-shift')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='at', text='e')
Token(type='at', text='current-shift')
Token(type='at', text='target-shift')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='type')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='build-ref-check')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='type-disp')
Token(type='at', text='maximum-length')
Token(type='at', text='length-offset')
Token(type='at', text='type')
Token(type='at', text='mask')
Token(type='at', text='immutable-flag')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='maybe-e-new')
Token(type='cb', text=')')
Token(type='lc', text='; NB: caller must bind e-v, e-i, and maybe-e-new')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#t')
Token(type='at', text='e-v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#t')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='maybe-e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#t')
Token(type='at', text='maybe-e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='expr->index')
Token(type='at', text='e-i')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='immutable-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='mask-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='maybe-e-new')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='t')
Token(type='at', text='maybe-e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='maybe-e-new')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='maybe-e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e-i')
Token(type='ob', text=',(')
Token(type='at', text='extract-length')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='mask-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='maybe-e-new')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e-i')
Token(type='at', text='t')
Token(type='at', text='maybe-e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e-i')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='maybe-e-new')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e-i')
Token(type='at', text='maybe-e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='build-set-immutable!')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='type-disp')
Token(type='at', text='immutable-flag')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='immutable-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='inline-args-limit')
Token(type='at', text='10')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='reduce-equality')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='inline-args-limit')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='compare')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='src')
Token(type='at', text='src')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='moi')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='moi')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='compare')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='reduce-inequality')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='inline-args-limit')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='re*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='compare')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='src')
Token(type='at', text='src')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e2')
Token(type='at', text='re*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='more-args')
Token(type='ob', text='(')
Token(type='at', text='cddr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='more-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='moi')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='moi')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='compare')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e2')
Token(type='at', text='re*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='reduce')
Token(type='lc', text='; left associative as required for, e.g., fx-')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='inline-args-limit')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='reduce')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='src')
Token(type='at', text='src')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='moi')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP<')
Token(type='at', text='RELOP<=')
Token(type='at', text='RELOP=')
Token(type='at', text='RELOP>=')
Token(type='at', text='RELOP>')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='RELOP<')
Token(type='at', text='-2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='RELOP<=')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='RELOP=')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='RELOP>=')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='RELOP>')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='mirror')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='go')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='at', text='n')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP<=')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP<')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP>')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-not')
Token(type='ob', text='(')
Token(type='at', text='build-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP>=')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text="'relop-length")
Token(type='st', text='"unexpected op ~s"')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP>')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-not')
Token(type='ob', text='(')
Token(type='at', text='build-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-cdr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP<')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='build-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-cdr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP<=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='build-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-cdr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='op')
Token(type='at', text='RELOP>=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-not')
Token(type='ob', text='(')
Token(type='at', text='build-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-not')
Token(type='ob', text='(')
Token(type='at', text='build-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-cdr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text="'relop-length")
Token(type='st', text='"unexpected op ~s"')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='relop-length1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'length")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='op')
Token(type='at', text='e')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='relop-length2')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='d')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length1')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='relop-length')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length1')
Token(type='at', text='op')
Token(type='at', text='e')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length2')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length2')
Token(type='ob', text='(')
Token(type='at', text='mirror')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-ftype-pointer-equal?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-ftype-pointer-null?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='eqvop-null-fptr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'ftype-pointer-address")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='d')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-ftype-pointer-null?')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'ftype-pointer-address")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-ftype-pointer-equal?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='d')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'ftype-pointer-address")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-ftype-pointer-null?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='values')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='`(')
Token(type='at', text='values')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='eq?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$keep-live')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='keep-live')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='zgo')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='r6rs?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='at', text='r6rs?')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx=?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='r6rs?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='zgo')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='r6rs?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='zgo')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='r6rs?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='at', text='r6rs?')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx=?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fx=')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fx=?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 2 fx<, fx<?, etc.')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='fx-pred')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='r6rs:op')
Token(type='at', text='length-op')
Token(type='at', text='inline-op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='r6rs?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='length-op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='inline-op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='at', text='r6rs?')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='r6rs:op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: 3-operand case requires 3-operand library routine')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go3')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: 3-operand case requires 3-operand library routine')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go3')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx<')
Token(type='at', text='fx<?')
Token(type='at', text='RELOP<')
Token(type='at', text='<')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx<=')
Token(type='at', text='fx<=?')
Token(type='at', text='RELOP<=')
Token(type='at', text='<=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx>=')
Token(type='at', text='fx>=?')
Token(type='at', text='RELOP>=')
Token(type='at', text='>=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx>')
Token(type='at', text='fx>?')
Token(type='at', text='RELOP>')
Token(type='at', text='>')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 3 fx=, fx=?, etc.')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='fx-pred')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='r6rs:op')
Token(type='at', text='length-op')
Token(type='at', text='inline-op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='length-op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='inline-op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='reducer')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text="'inline-op")
Token(type='at', text="'eq?")
Token(type='cb', text=')')
Token(type='at', text='reduce-equality')
Token(type='at', text='reduce-inequality')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reducer')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='r6rs:op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reducer')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx<')
Token(type='at', text='fx<?')
Token(type='at', text='RELOP<')
Token(type='at', text='<')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx<=')
Token(type='at', text='fx<=?')
Token(type='at', text='RELOP<=')
Token(type='at', text='<=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx=')
Token(type='at', text='fx=?')
Token(type='at', text='RELOP=')
Token(type='at', text='eq?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx>=')
Token(type='at', text='fx>=?')
Token(type='at', text='RELOP>=')
Token(type='at', text='>=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-pred')
Token(type='at', text='fx>')
Token(type='at', text='fx>?')
Token(type='at', text='RELOP>')
Token(type='at', text='>')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 3 fxlogand, ...')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='fxlogop')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='inline-op')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='inline-op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxlogand')
Token(type='at', text='logand')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxand')
Token(type='at', text='logand')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxlogor')
Token(type='at', text='logor')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxlogior')
Token(type='at', text='logor')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxior')
Token(type='at', text='logor')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxlogxor')
Token(type='at', text='logxor')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxxor')
Token(type='at', text='logxor')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='log-partition')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='at', text='base')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='at', text='base')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='nc*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='nc*')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='m')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='at', text='n')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 2 fxlogor, fxlogior, fxor')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='fxlogorop')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='inline-args-limit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='log-partition')
Token(type='at', text='logor')
Token(type='at', text='0')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: need fxargerr library routine w/who arg & rest interface')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'op")
Token(type='cb', text=')')
Token(type='at', text=',nc*')
Token(type='ob', text='(')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; NB: should be error call---but is it?')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogorop')
Token(type='at', text='fxlogor')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogorop')
Token(type='at', text='fxlogior')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogorop')
Token(type='at', text='fxior')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 2 fxlogand, ...')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='fxlogop')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='inline-op')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='inline-args-limit')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='lc', text=";; NB: using inline-op here because it works when target's")
Token(type='lc', text=";; NB: fixnum range is larger than the host's fixnum range")
Token(type='lc', text=';; NB: during cross compile')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='log-partition')
Token(type='at', text='inline-op')
Token(type='at', text='base')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='inline-op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: need fxargerr library routine w/who arg & rest interface')
Token(type='ob', text=',(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='nc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: need fxargerr library routine w/who arg & rest interface')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'op")
Token(type='cb', text=')')
Token(type='at', text=',nc*')
Token(type='ob', text='(')
Token(type='at', text='...')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; NB: should be error call---but is it?')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxlogand')
Token(type='at', text='logand')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxand')
Token(type='at', text='logand')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxlogxor')
Token(type='at', text='logxor')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogop')
Token(type='at', text='fxxor')
Token(type='at', text='logxor')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxlogtest')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxlogtest')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxlogtest')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='xorbits')
Token(type='ob', text='(')
Token(type='at', text='lognot')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='mask-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='fxlognotop')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logxor')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',xorbits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logxor')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',xorbits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlognotop')
Token(type='at', text='fxlognot')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlognotop')
Token(type='at', text='fxnot')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fxu<')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP<')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fx+')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='r6rs:fx+')
Token(type='lc', text='; limited to two arguments')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fx1+')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$fx+?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lfalse')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lfalse")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+/ovfl')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lfalse')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+/ovfl')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fx+')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='fx+')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: 3-operand case requires 3-operand library routine')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+/ovfl')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+/ovfl')
Token(type='at', text=',t')
Token(type='at', text=',e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:fx+')
Token(type='lc', text='; limited to two arguments')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fx-')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='r6rs:fx-')
Token(type='lc', text='; limited to one or two arguments')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fx1-')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$fx-?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lfalse')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lfalse")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-/ovfl')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lfalse')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-/ovfl')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fx-')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: 3-operand case requires 3-operand library routine')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-/ovfl')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-/ovfl')
Token(type='at', text=',t')
Token(type='at', text=',e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:fx-')
Token(type='lc', text='; limited to one or two arguments')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fx1-')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-/ovfl')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx1-')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fx1+')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+/ovfl')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx1+')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='fixnum-powers-of-two')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='m')
Token(type='at', text='2')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='m')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='m')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='m')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='e')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxdiv')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='assv')
Token(type='at', text='d')
Token(type='at', text='fixnum-powers-of-two')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxmod')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='assv')
Token(type='at', text='d')
Token(type='at', text='fixnum-powers-of-two')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='d')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-fx*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='ovfl?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='fx*-constant')
Token(type='at', text='e')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='ovfl?')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='*/ovfl')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='n')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='n')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='n')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='n')
Token(type='at', text='10')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='assv')
Token(type='at', text='n')
Token(type='at', text='fixnum-powers-of-two')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='*')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*-constant')
Token(type='at', text='e1')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*-constant')
Token(type='at', text='e2')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='at', text='ovfl?')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='*/ovfl')
Token(type='at', text=',e1')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='*')
Token(type='at', text=',e1')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fx*')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fx*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='r6rs:fx*')
Token(type='lc', text='; limited to two arguments')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fx*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='build-fx*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'multiply-overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fx*')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx*')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: 3-operand case requires 3-operand library routine')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='build-fx*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fx*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='build-fx*')
Token(type='at', text='t')
Token(type='at', text='e3')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:fx*')
Token(type='lc', text='; limited to two arguments')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fx/p2')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='p2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='p2')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='p2')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='p2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='p2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fx/')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='assv')
Token(type='at', text='d')
Token(type='at', text='fixnum-powers-of-two')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='build-fx/p2')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='integer-divide-instruction')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='/')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='lookup-primref')
Token(type='at', text='3')
Token(type='at', text="'$fx/")
Token(type='cb', text=')')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fx/')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fx/')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fx/')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxquotient')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fx/')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fx/')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxremainder')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='build-fx*')
Token(type='ob', text='(')
Token(type='at', text='build-fx/')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-fxsll')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='lc', text='; TODO: bind-uptr might be handy here and also a make-unfix')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e1')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxsll')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-fxsll')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxarithmetic-shift-left')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-fxsll')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxsrl')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',e1')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-fxsra')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e1')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxsra')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-fxsra')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxarithmetic-shift-right')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-fxsra')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%safe-shift')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='?size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='size')
Token(type='at', text='?size')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='op')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant-value')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='op')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxsrl')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%safe-shift')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='srl')
Token(type='at', text='fxsrl')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxsra')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%safe-shift')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='sra')
Token(type='at', text='fxsra')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxarithmetic-shift-right')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%safe-shift')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='sra')
Token(type='at', text='fxarithmetic-shift-right')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxarithmetic-shift')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='$fxu<')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='d')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxarithmetic-shift')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxarithmetic-shift')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='d')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxarithmetic-shift')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxarithmetic-shift')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dofxlogbit0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$fxu<')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='lognot')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='lognot')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dofxlogbit1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$fxu<')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxlogbit0')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit0')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxlogbit1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit1')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxcopy-bit')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit1')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dofxlogbit0')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$fxu<')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='lognot')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='lognot')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dofxlogbit1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$fxu<')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxlogbit0')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit0')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxlogbit0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxlogbit1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit1')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxlogbit1')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxcopy-bit')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxcopy-bit')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit1')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxcopy-bit')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxzero?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxpositive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP>')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='>')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxnonnegative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP>=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='>=')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxnegative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP<')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxnonpositive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP<=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='<=')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxeven?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxodd?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxzero?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxzero?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxpositive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP>')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='>')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxpositive?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxnonnegative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP>=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='>=')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxnonnegative?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxnegative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP<')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxnegative?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxnonpositive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP<=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<=')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxnonpositive?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxeven?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxeven?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxodd?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxodd?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dofxlogbit?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='>')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxbit-set?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit?')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxlogbit?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dofxlogbit?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='>')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxbit-set?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit?')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxbit-set?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxlogbit?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dofxlogbit?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxlogbit?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; can avoid if in fxabs with:')
Token(type='lc', text=';   t = sra(x, k)     ; where k is ptr-bits - 1')
Token(type='lc', text=";                     ; t is now -1 if x's sign bit set, otherwise 0")
Token(type='lc', text=';   x = xor(x, t)     ; logical not if x negative, otherwise leave x alone')
Token(type='lc', text=";   x = x - t         ; add 1 to complete two's complement negation if")
Token(type='lc', text=';                     ; x was negative, otherwise leave x alone')
Token(type='lc', text='; tests on i3le indicate that the if is actually faster, even in a loop')
Token(type='lc', text='; where input alternates between positive and negative to defeat branch')
Token(type='lc', text='; prediction.')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxabs')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';(define-inline 3 min ; needs library min')
Token(type='lc', text=';  ; must take care to be inexactness-preserving')
Token(type='lc', text=';   [(e0) e0]')
Token(type='lc', text=';   [(e0 e1)')
Token(type='lc', text=';    (bind #t (e0 e1)')
Token(type='lc', text=';      `(if ,(build-fixnums? (list e0 e1))')
Token(type='lc', text=';           (if ,(%inline < ,e0 ,e1) ,e0 ,e1)')
Token(type='lc', text=';           ,(build-libcall #t src sexpr min e0 e1)))]')
Token(type='lc', text=';   [(e0 . e*) (reduce src sexpr moi e1 e*)])')
Token(type='lc', text=';')
Token(type='lc', text=';(define-inline 3 max ; needs library max')
Token(type='lc', text=';  ; must take care to be inexactness-preserving')
Token(type='lc', text=';   [(e0) e0]')
Token(type='lc', text=';   [(e0 e1)')
Token(type='lc', text=';    (bind #t (e0 e1)')
Token(type='lc', text=';      `(if ,(build-fixnums? (list e0 e1))')
Token(type='lc', text=';           (if ,(%inline < ,e0 ,e1) ,e0 ,e1)')
Token(type='lc', text=';           ,(build-libcall #t src sexpr max e0 e1)))]')
Token(type='lc', text=';   [(e1 . e*) (reduce src sexpr moi e1 e*)])')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxmin')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxmax')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e2')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxif')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e2')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e3')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='lognot')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxbit-field')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='fixnum?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='fixnum?')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='start')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='start')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='extract-unsigned-bitfield')
Token(type='at', text='#f')
Token(type='at', text='start')
Token(type='at', text='end')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxcopy-bit-field')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='e4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='fixnum?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='fixnum?')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='start')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='start')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='end')
Token(type='at', text='start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='insert-bitfield')
Token(type='at', text='#f')
Token(type='at', text='start')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='at', text='e4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';; could be done with one mutable variable instead of two, but this seems to generate')
Token(type='lc', text=';; the same code as the existing compiler')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxlength')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='result')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'result")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='lognot')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='fixnum-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='30')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='61')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='#x100000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',result')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='#x10000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',result')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='#x100')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',result')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='fxlength-bv')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxfirst-bit-set')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='result')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'result")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='fixnum-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='30')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='61')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='#xffffffff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',result')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='#xffff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',result')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',result')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',result')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='fxfirst-bit-set-bv')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='type-pred')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name?')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='typed-object-pred')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name?')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='boolean?')
Token(type='at', text='mask-boolean')
Token(type='at', text='type-boolean')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='bwp-object?')
Token(type='at', text='mask-bwp')
Token(type='at', text='sbwp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='char?')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='eof-object?')
Token(type='at', text='mask-eof')
Token(type='at', text='seof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='fixnum?')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='flonum?')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='null?')
Token(type='at', text='mask-nil')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='pair?')
Token(type='at', text='mask-pair')
Token(type='at', text='type-pair')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='procedure?')
Token(type='at', text='mask-closure')
Token(type='at', text='type-closure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='symbol?')
Token(type='at', text='mask-symbol')
Token(type='at', text='type-symbol')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type-pred')
Token(type='at', text='$unbound-object?')
Token(type='at', text='mask-unbound')
Token(type='at', text='sunbound')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='bignum?')
Token(type='at', text='mask-bignum')
Token(type='at', text='type-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='box?')
Token(type='at', text='mask-box')
Token(type='at', text='type-box')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='mutable-box?')
Token(type='at', text='mask-mutable-box')
Token(type='at', text='type-mutable-box')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='immutable-box?')
Token(type='at', text='mask-mutable-box')
Token(type='at', text='type-immutable-box')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='bytevector?')
Token(type='at', text='mask-bytevector')
Token(type='at', text='type-bytevector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='mutable-bytevector?')
Token(type='at', text='mask-mutable-bytevector')
Token(type='at', text='type-mutable-bytevector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='immutable-bytevector?')
Token(type='at', text='mask-mutable-bytevector')
Token(type='at', text='type-immutable-bytevector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='$code?')
Token(type='at', text='mask-code')
Token(type='at', text='type-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='$exactnum?')
Token(type='at', text='mask-exactnum')
Token(type='at', text='type-exactnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='fxvector?')
Token(type='at', text='mask-fxvector')
Token(type='at', text='type-fxvector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='mutable-fxvector?')
Token(type='at', text='mask-mutable-fxvector')
Token(type='at', text='type-mutable-fxvector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='immutable-fxvector?')
Token(type='at', text='mask-mutable-fxvector')
Token(type='at', text='type-immutable-fxvector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='$inexactnum?')
Token(type='at', text='mask-inexactnum')
Token(type='at', text='type-inexactnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='$rtd-counts?')
Token(type='at', text='mask-rtd-counts')
Token(type='at', text='type-rtd-counts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='input-port?')
Token(type='at', text='mask-input-port')
Token(type='at', text='type-input-port')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='output-port?')
Token(type='at', text='mask-output-port')
Token(type='at', text='type-output-port')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='port?')
Token(type='at', text='mask-port')
Token(type='at', text='type-port')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='ratnum?')
Token(type='at', text='mask-ratnum')
Token(type='at', text='type-ratnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='$record?')
Token(type='at', text='mask-record')
Token(type='at', text='type-record')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='string?')
Token(type='at', text='mask-string')
Token(type='at', text='type-string')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='mutable-string?')
Token(type='at', text='mask-mutable-string')
Token(type='at', text='type-mutable-string')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='immutable-string?')
Token(type='at', text='mask-mutable-string')
Token(type='at', text='type-immutable-string')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='$system-code?')
Token(type='at', text='mask-system-code')
Token(type='at', text='type-system-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='$tlc?')
Token(type='at', text='mask-tlc')
Token(type='at', text='type-tlc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='vector?')
Token(type='at', text='mask-vector')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='mutable-vector?')
Token(type='at', text='mask-mutable-vector')
Token(type='at', text='type-mutable-vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='immutable-vector?')
Token(type='at', text='mask-mutable-vector')
Token(type='at', text='type-immutable-vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='typed-object-pred')
Token(type='at', text='thread?')
Token(type='at', text='mask-thread')
Token(type='at', text='type-thread')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$bigpositive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-positive-bignum')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='csv7:record-field-accessible?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='cflonum?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-inexactnum')
Token(type='at', text='type-inexactnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$immediate?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-immediate')
Token(type='at', text='type-immediate')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$inexactnum-real-part')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$inexactnum-imag-part')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='cfl-real-part')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='cfl-imag-part')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text='0.0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$closure-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-i')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='closure-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='at', text=',e-i')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$closure-code')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$code-free-count')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='code-closure-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$unbound-object')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='$unbound-object')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='void')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='eof-object')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#!eof')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='cons')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-pair')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='box')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-box')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='box-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-box')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='box-ref-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='box-immutable')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-box')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='box-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-immutable-box')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='box-ref-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-tlc')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ht')
Token(type='at', text='e-keyval')
Token(type='at', text='e-next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-ht')
Token(type='at', text='e-keyval')
Token(type='at', text='e-next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-tlc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tlc-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-tlc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tlc-ht-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-ht')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tlc-keyval-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-keyval')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tlc-next-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-next')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='list')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='build-list')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-pair')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='next-i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',next-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='loop')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='at', text='next-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='list*')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='cons*')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='vector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text='#(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-fxvector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-fxvector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxvector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text='#vfx(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='target-fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxvector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text='#vfx(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-string')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='string-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-string')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='string-char-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',t')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='string')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='st', text='""')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='string')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='st', text='""')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 2 car, cdr, caar, etc.')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='def-c..r*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='id')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'*")
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"c~{~a~}r"')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='#,id')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lerr')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lerr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='#,(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ad*')
Token(type='at', text='ad*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='builder')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='char=?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='ch', text='#\\a')
Token(type='cb', text=')')
Token(type='at', text="#'build-car")
Token(type='at', text="#'build-cdr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='ad*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-pair?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='#,builder')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lerr')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#,id')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-pair?')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='#,builder')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lerr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='at', text='4')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='ad*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='defn')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='defn')
Token(type='ob', text='#`(')
Token(type='at', text='begin')
Token(type='at', text='#,defn')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='begin')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ch', text='#\\a')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ch', text='#\\d')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='def-c..r*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 3 car, cdr, caar, etc.')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='def-c..r*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='id')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'*")
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"c~{~a~}r"')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='#,id')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='#,(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ad*')
Token(type='at', text='ad*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='builder')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='char=?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='ch', text='#\\a')
Token(type='cb', text=')')
Token(type='at', text="#'build-car")
Token(type='at', text="#'build-cdr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='ad*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='#,builder')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='#,builder')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='at', text='4')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='ad*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='defn')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='defn')
Token(type='ob', text='#`(')
Token(type='at', text='begin')
Token(type='at', text='#,defn')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='begin')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ch', text='#\\a')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='#,(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ch', text='#\\d')
Token(type='at', text='ad*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='def-c..r*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 3 simple accessors, e.g., unbox, vector-length')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='inline-accessor')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='prim')
Token(type='at', text='disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='prim')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='unbox')
Token(type='at', text='box-ref-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$symbol-name')
Token(type='at', text='symbol-name-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$symbol-property-list')
Token(type='at', text='symbol-plist-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$system-property-list')
Token(type='at', text='symbol-splist-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$symbol-hash')
Token(type='at', text='symbol-hash-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$ratio-numerator')
Token(type='at', text='ratnum-numerator-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$ratio-denominator')
Token(type='at', text='ratnum-denominator-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$exactnum-real-part')
Token(type='at', text='exactnum-real-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$exactnum-imag-part')
Token(type='at', text='exactnum-imag-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='binary-port-input-buffer')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='textual-port-input-buffer')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='binary-port-output-buffer')
Token(type='at', text='port-obuffer-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='textual-port-output-buffer')
Token(type='at', text='port-obuffer-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$code-name')
Token(type='at', text='code-name-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$code-arity-mask')
Token(type='at', text='code-arity-mask-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$code-info')
Token(type='at', text='code-info-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$code-pinfo*')
Token(type='at', text='code-pinfo*-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$continuation-link')
Token(type='at', text='continuation-link-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$continuation-winders')
Token(type='at', text='continuation-winders-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='csv7:record-type-descriptor')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$record-type-descriptor')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='record-rtd')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$port-handler')
Token(type='at', text='port-handler-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$port-info')
Token(type='at', text='port-info-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='port-name')
Token(type='at', text='port-name-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-accessor')
Token(type='at', text='$thread-tc')
Token(type='at', text='thread-tc-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='unbox')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-box')
Token(type='at', text='type-box')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='box-ref-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unbox')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='def-len')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='prim')
Token(type='at', text='type-disp')
Token(type='at', text='length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='prim')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='extract-length')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='vector-length')
Token(type='at', text='vector-type-disp')
Token(type='at', text='vector-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='fxvector-length')
Token(type='at', text='fxvector-type-disp')
Token(type='at', text='fxvector-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='string-length')
Token(type='at', text='string-type-disp')
Token(type='at', text='string-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='bytevector-length')
Token(type='at', text='bytevector-type-disp')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='$bignum-length')
Token(type='at', text='bignum-type-disp')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='def-len')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='prim')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text='type-disp')
Token(type='at', text='length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='prim')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lerr')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lerr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t/l')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask')
Token(type='at', text='type')
Token(type='at', text=',t/l')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='extract-length')
Token(type='at', text='t/l')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lerr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lerr')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='prim')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='vector-length')
Token(type='at', text='mask-vector')
Token(type='at', text='type-vector')
Token(type='at', text='vector-type-disp')
Token(type='at', text='vector-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='fxvector-length')
Token(type='at', text='mask-fxvector')
Token(type='at', text='type-fxvector')
Token(type='at', text='fxvector-type-disp')
Token(type='at', text='fxvector-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='string-length')
Token(type='at', text='mask-string')
Token(type='at', text='type-string')
Token(type='at', text='string-type-disp')
Token(type='at', text='string-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-len')
Token(type='at', text='bytevector-length')
Token(type='at', text='mask-bytevector')
Token(type='at', text='type-bytevector')
Token(type='at', text='bytevector-type-disp')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: consider adding integer?, integer-valued?, rational?, rational-valued?,')
Token(type='lc', text='; real?, and real-valued?')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-number?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-other-number')
Token(type='at', text='type-other-number')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='number?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-number?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='complex?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-number?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-car!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-cdr!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-box!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='box-ref-disp')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='box-cas!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='at', text='%zero')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='box-ref-disp')
Token(type='cb', text=')')
Token(type='at', text='e3')
Token(type='ob', text='(')
Token(type='at', text='make-build-cas')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='at', text='build-cas-seq')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$set-symbol-name!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-name-disp')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$set-symbol-property-list!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-plist-disp')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$set-system-property-list!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-splist-disp')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$set-port-info!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-info-disp')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-port-name!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-name-disp')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='set-box!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-box')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-box')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-mutable-box')
Token(type='at', text='type-mutable-box')
Token(type='at', text=',e-box')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-box')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='box-ref-disp')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='set-box!')
Token(type='at', text='e-box')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='box-cas!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-box')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-box')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%typed-object-check')
Token(type='at', text='mask-mutable-box')
Token(type='at', text='type-mutable-box')
Token(type='at', text=',e-box')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-box')
Token(type='at', text='%zero')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='box-ref-disp')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='ob', text='(')
Token(type='at', text='make-build-cas')
Token(type='at', text='e-old')
Token(type='cb', text=')')
Token(type='at', text='build-cas-seq')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='box-cas!')
Token(type='at', text='e-box')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='set-car!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-pair')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-pair')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-pair')
Token(type='at', text='type-pair')
Token(type='at', text=',e-pair')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-pair')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='set-car!')
Token(type='at', text='e-pair')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='set-cdr!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-pair')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-pair')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-pair')
Token(type='at', text='type-pair')
Token(type='at', text=',e-pair')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-pair')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='set-cdr!')
Token(type='at', text='e-pair')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$set-symbol-hash!')
Token(type='lc', text='; no need for dirty store---e2 should be a fixnum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-hash-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-tlc-parameter')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-x')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='name!')
Token(type='at', text='disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define-tlc-parameter')
Token(type='at', text='name')
Token(type='at', text='disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='disp')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tlc-parameter')
Token(type='at', text='$tlc-keyval')
Token(type='at', text='tlc-keyval-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tlc-parameter')
Token(type='at', text='$tlc-ht')
Token(type='at', text='tlc-ht-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tlc-parameter')
Token(type='at', text='$tlc-next')
Token(type='at', text='$set-tlc-next!')
Token(type='at', text='tlc-next-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$top-level-value')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='any-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='primitive')
Token(type='at', text='system')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sgetprop')
Token(type='at', text='d')
Token(type='at', text="'*flags*")
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Symref')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-unbound')
Token(type='at', text='sunbound')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='$top-level-value')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lfail')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'tlv-fail")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-symbol')
Token(type='at', text='type-symbol')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-unbound')
Token(type='at', text='sunbound')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lfail')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lfail')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='$top-level-value')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$top-level-value')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Symref')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-sym')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-sym')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-sym')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-pvalue-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='nonprocedure-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$set-top-level-value!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-sym')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$set-top-level-value!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='symbol?')
Token(type='at', text='e-sym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-sym')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$top-level-bound?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-not')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-unbound')
Token(type='at', text='sunbound')
Token(type='ob', text=',(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-sym')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Symref')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-sym')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='parse-format')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='who')
Token(type='at', text='src')
Token(type='at', text='cntl-arg')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='cntl-arg')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='c')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='assertion-violation?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='format-condition?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='message-condition?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='irritants-condition?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$source-warning')
Token(type='at', text="'compile")
Token(type='at', text='src')
Token(type='at', text='#t')
Token(type='st', text='"~? in call to ~s"')
Token(type='ob', text='(')
Token(type='at', text='condition-message')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='condition-irritants')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='#%$parse-format-string')
Token(type='at', text='who')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='fmt->expr')
Token(type='ob', text='(')
Token(type='at', text='$make-fmt->expr')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='prim')
Token(type='at', text='arg*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='lookup-primref')
Token(type='at', text='3')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='at', text=',arg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-format')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='who')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op-arg')
Token(type='at', text='cntl-arg')
Token(type='at', text='arg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text='who')
Token(type='at', text='src')
Token(type='at', text='cntl-arg')
Token(type='at', text='arg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='op-arg')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='d')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='string-copy')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='op-arg')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='d')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='op-arg')
Token(type='at', text='dobind')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binder')
Token(type='at', text='#t')
Token(type='at', text="'ptr")
Token(type='at', text='op-arg')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='arg*')
Token(type='at', text='dobind*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-binder')
Token(type='at', text='#t')
Token(type='at', text="'ptr")
Token(type='at', text='arg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='fmt->expr')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='x')
Token(type='at', text='op-arg')
Token(type='at', text='arg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='dobind')
Token(type='ob', text='(')
Token(type='at', text='dobind*')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='$dofmt')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',who')
Token(type='cb', text=')')
Token(type='at', text=',op-arg')
Token(type='at', text=',cntl-arg')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-list')
Token(type='at', text='arg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='errorf')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-who')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text="'errorf")
Token(type='at', text='src')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'errorf")
Token(type='cb', text=')')
Token(type='at', text=',e-who')
Token(type='at', text=',e-str')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='assertion-violationf')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-who')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text="'assertion-violationf")
Token(type='at', text='src')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'assertion-violationf")
Token(type='cb', text=')')
Token(type='at', text=',e-who')
Token(type='at', text=',e-str')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$oops')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-who')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text="'$oops")
Token(type='at', text='src')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'$oops")
Token(type='cb', text=')')
Token(type='at', text=',e-who')
Token(type='at', text=',e-str')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$impoops')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-who')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text="'$impoops")
Token(type='at', text='src')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'$impoops")
Token(type='cb', text=')')
Token(type='at', text=',e-who')
Token(type='at', text=',e-str')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='warningf')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-who')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text="'warningf")
Token(type='at', text='src')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'warningf")
Token(type='cb', text=')')
Token(type='at', text=',e-who')
Token(type='at', text=',e-str')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$source-violation')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-who')
Token(type='at', text='e-src')
Token(type='at', text='e-start?')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text="'$source-violation")
Token(type='at', text='src')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'$source-violation")
Token(type='cb', text=')')
Token(type='at', text=',e-who')
Token(type='at', text=',e-src')
Token(type='at', text=',e-start?')
Token(type='at', text=',e-str')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$source-warning')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-who')
Token(type='at', text='e-src')
Token(type='at', text='e-start?')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text="'$source-warning")
Token(type='at', text='src')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='Symref')
Token(type='at', text="'$source-warning")
Token(type='cb', text=')')
Token(type='at', text=',e-who')
Token(type='at', text=',e-src')
Token(type='at', text=',e-start?')
Token(type='at', text=',e-str')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fprintf')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-op')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parse-format')
Token(type='at', text="'fprintf")
Token(type='at', text='src')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fprintf')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-op')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-format')
Token(type='at', text="'fprintf")
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-op')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='printf')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-str')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-format')
Token(type='at', text="'printf")
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='at', text='e-str')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='format')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='string?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-format')
Token(type='at', text="'format")
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='d')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-format')
Token(type='at', text="'format")
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='d')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-format')
Token(type='at', text="'format")
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='hand-coded-closure?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='name')
Token(type='ob', text="'(")
Token(type='at', text='nuate')
Token(type='at', text='nonprocedure-code')
Token(type='at', text='error-invoke')
Token(type='at', text='invoke')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$hand-coded')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'hcl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='new-l*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='l')
Token(type='at', text='new-l*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='new-le*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L9')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='hand-coded')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-le*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='hand-coded-closure?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'closure")
Token(type='at', text='l')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'$hand-coded")
Token(type='st', text='"~s is not a quoted symbol"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$tc')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='at', text='%tc')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$tc-field')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fld')
Token(type='at', text='e-tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-fld')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='case')
Token(type='at', text='d')
Token(type='ob', text='#,@(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='disp')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'ptr")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'*")
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'[")
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text=',e-tc')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='getprop')
Token(type='at', text="'tc")
Token(type='at', text="'*fields*")
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fld')
Token(type='at', text='e-tc')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-fld')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='a')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='case')
Token(type='at', text='d')
Token(type='ob', text='#,@(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='disp')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'ptr")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'*")
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'[")
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text=',e-tc')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='at', text=',e-val')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='field')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='getprop')
Token(type='at', text="'tc")
Token(type='at', text="'*fields*")
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='a')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-tc-parameter')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='tc-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='tc-name')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='tc-name')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='tc-name')
Token(type='cb', text=')')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='current-input-port')
Token(type='at', text='current-input')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='current-output-port')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='current-error-port')
Token(type='at', text='current-error')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='generate-inspector-information')
Token(type='at', text='generate-inspector-information')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='generate-procedure-source-information')
Token(type='at', text='generate-procedure-source-information')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='generate-profile-forms')
Token(type='at', text='generate-profile-forms')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='$compile-profile')
Token(type='at', text='compile-profile')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='optimize-level')
Token(type='at', text='optimize-level')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='subset-mode')
Token(type='at', text='subset-mode')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='$suppress-primitive-inlining')
Token(type='at', text='suppress-primitive-inlining')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='$block-counter')
Token(type='at', text='block-counter')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='$sfd')
Token(type='at', text='sfd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='$current-mso')
Token(type='at', text='current-mso')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='$target-machine')
Token(type='at', text='target-machine')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='$current-stack-link')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='$current-winders')
Token(type='at', text='winders')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='default-record-equal-procedure')
Token(type='at', text='default-record-equal-procedure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-tc-parameter')
Token(type='at', text='default-record-hash-procedure')
Token(type='at', text='default-record-hash-procedure')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$install-guardian')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-obj')
Token(type='at', text='e-rep')
Token(type='at', text='e-tconc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-obj')
Token(type='at', text='e-rep')
Token(type='at', text='e-tconc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='typemod')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-guardian-entry')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='guardian-entry-obj-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='guardian-entry-rep-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-rep')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='guardian-entry-tconc-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-tconc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='guardian-entry-next-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='guardian-entries')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='guardian-entries')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$install-ftype-guardian')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-obj')
Token(type='at', text='e-tconc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-obj')
Token(type='at', text='e-tconc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='typemod')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-guardian-entry')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='guardian-entry-obj-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='guardian-entry-rep-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='ftype-guardian-rep')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='guardian-entry-tconc-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-tconc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='guardian-entry-next-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='guardian-entries')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='guardian-entries')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='virtual-register-count')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='virtual-register-count')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='constant-ref')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-idx')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$fxu<')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='virtual-register-count')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='tc-virtual-registers-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='constant-set')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ref')
Token(type='ob', text='(')
Token(type='at', text='constant-ref')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='ref')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',ref')
Token(type='at', text=',e-val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='index-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='at', text='libcall')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e-idx')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e-idx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='virtual-register-count')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='at', text=',libcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-assert')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='virtual-register')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant-ref')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='at', text=',e-idx')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tc-virtual-registers-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='virtual-register')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant-ref')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='index-check')
Token(type='at', text='e-idx')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='virtual-register')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='at', text=',e-idx')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tc-virtual-registers-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-virtual-register!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant-set')
Token(type='at', text='e-idx')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='at', text=',e-idx')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tc-virtual-registers-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='set-virtual-register!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant-set')
Token(type='at', text='e-idx')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='index-check')
Token(type='at', text='e-idx')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='set-virtual-register!')
Token(type='at', text='e-idx')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='at', text=',e-idx')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tc-virtual-registers-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$thread-list')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#t')
Token(type='at', text="'entry")
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='thread-list')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when-feature')
Token(type='at', text='pthreads')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$raw-tc-mutex')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'entry")
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='raw-tc-mutex')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$raw-collect-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'entry")
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='raw-collect-cond')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='not')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='most-negative-fixnum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='most-negative-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='most-positive-fixnum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='least-fixnum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='most-negative-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='greatest-fixnum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fixnum-width')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='native-endianness')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='directory-separator')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='if-feature')
Token(type='at', text='windows')
Token(type='ch', text='#\\\\')
Token(type='ch', text='#\\/')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 2 char=?, r6rs:char=?, etc.')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='char-pred')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='r6rs:op')
Token(type='at', text='inline-op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go2')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-chars?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='inline-op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go3')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='inline-op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='inline-op')
Token(type='at', text=',e2')
Token(type='at', text=',e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; could also pass e2 and e3:')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go2')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go3')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go2')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go3')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char<?')
Token(type='at', text='r6rs:char<?')
Token(type='at', text='<')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char<=?')
Token(type='at', text='r6rs:char<=?')
Token(type='at', text='<=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char=?')
Token(type='at', text='r6rs:char=?')
Token(type='at', text='eq?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char>=?')
Token(type='at', text='r6rs:char>=?')
Token(type='at', text='>=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char>?')
Token(type='at', text='r6rs:char>?')
Token(type='at', text='>')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; level 3 char=?, r6rs:char=?, etc.')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='char-pred')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='r6rs:op')
Token(type='at', text='inline-op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go2')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='inline-op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go3')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='go2')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go2')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go2')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go3')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='r6rs:op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go2')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go3')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char<?')
Token(type='at', text='r6rs:char<?')
Token(type='at', text='<')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char<=?')
Token(type='at', text='r6rs:char<=?')
Token(type='at', text='<=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char=?')
Token(type='at', text='r6rs:char=?')
Token(type='at', text='eq?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char>=?')
Token(type='at', text='r6rs:char>=?')
Token(type='at', text='>=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char-pred')
Token(type='at', text='char>?')
Token(type='at', text='r6rs:char>?')
Token(type='at', text='>')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='map')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-proc')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='name')
Token(type='at', text="'car")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='map-car')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='name')
Token(type='at', text="'cdr")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='map-cdr')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='map1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-proc')
Token(type='ob', text='[')
Token(type='at', text=',pr')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'cons")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='map-cons')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='map2')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='andmap')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='andmap1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='for-all')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='andmap1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='ormap')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='ormap1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='exists')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='ormap1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fold-left')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fold-left1')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fold-left2')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fold-right')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fold-right1')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fold-right2')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-base')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='for-each')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='for-each1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='for-each2')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='vector-map')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='vector-map1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='vector-map2')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='vector-for-each')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='vector-for-each1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='vector-for-each2')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='string-for-each')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='string-for-each1')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='string-for-each2')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-proc')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='reverse')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='reverse')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='inline-getprop')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='plist-offset')
Token(type='at', text='e-sym')
Token(type='at', text='e-key')
Token(type='at', text='e-dflt')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-ls')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t-ls")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t-cdr')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t-cdr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-dflt')
Token(type='cb', text=')')
Token(type='lc', text='; indirect symbol after evaluating e-key and e-dflt')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-sym')
Token(type='at', text=',plist-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-dflt')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-cdr')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-key')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-cdr')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-cdr')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='getprop')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='at', text='e-key')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-getprop')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-plist-disp')
Token(type='cb', text=')')
Token(type='at', text='e-sym')
Token(type='at', text='e-key')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='at', text='e-key')
Token(type='at', text='e-dflt')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-getprop')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-plist-disp')
Token(type='cb', text=')')
Token(type='at', text='e-sym')
Token(type='at', text='e-key')
Token(type='at', text='e-dflt')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$sgetprop')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='at', text='e-key')
Token(type='at', text='e-dflt')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline-getprop')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-splist-disp')
Token(type='cb', text=')')
Token(type='at', text='e-sym')
Token(type='at', text='e-key')
Token(type='at', text='e-dflt')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='assq')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-ls')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t-ls")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-ls')
Token(type='at', text=',e-ls')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-a')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-a')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-key')
Token(type='cb', text=')')
Token(type='at', text=',t-a')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='length')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-ls')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t-ls")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t-n')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t-n")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e-ls')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-ls')
Token(type='at', text=',e-ls')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',t-n')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t-n')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t-n')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t-n')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='append')
Token(type='lc', text='; TODO: hand-coded library routine that allocates the new pairs in a block')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='at', text='e-ls')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='append')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ls1')
Token(type='at', text='e-ls2')
Token(type='at', text='e-ls3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='append')
Token(type='at', text='e-ls1')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='append')
Token(type='at', text='e-ls2')
Token(type='at', text='e-ls3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ls')
Token(type='at', text='.')
Token(type='at', text='e-ls*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='apply')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='apply0')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='apply1')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='apply2')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='e4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='apply3')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='e4')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxsll')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxsll')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxarithmetic-shift-left')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxarithmetic-shift-left')
Token(type='at', text='e0')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='display-string')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='display-string')
Token(type='at', text='e-s')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='display-string')
Token(type='at', text='e-s')
Token(type='at', text='e-op')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='call-with-current-continuation')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='callcc')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='call/cc')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='callcc')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='call/1cc')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='call1cc')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$event')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='event')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='eq-hashtable-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='eq-hashtable-ref')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='eq-hashtable-contains?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='eq-hashtable-contains?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='eq-hashtable-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='eq-hashtable-set!')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='eq-hashtable-update!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='e4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='eq-hashtable-update!')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='e4')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='eq-hashtable-cell')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='eq-hashtable-cell')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='eq-hashtable-delete!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='eq-hashtable-delete!')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='symbol-hashtable-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='symbol-hashtable-ref')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='symbol-hashtable-contains?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='symbol-hashtable-contains?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='symbol-hashtable-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='symbol-hashtable-set!')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='symbol-hashtable-update!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='e4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='symbol-hashtable-update!')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='e4')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='symbol-hashtable-cell')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='symbol-hashtable-cell')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='symbol-hashtable-delete!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='symbol-hashtable-delete!')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='bytevector-s8-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='bytevector-s8-set!')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='bytevector-u8-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='bytevector-u8-set!')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='bytevector=?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='bytevector=?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='eqok-help?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='char?')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='boolean?')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='obj')
Token(type='st', text='""')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='obj')
Token(type='ob', text="'#(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='obj')
Token(type='ob', text="'#vu8(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='obj')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eof-object?')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bwp-object?')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$unbound-object?')
Token(type='at', text='obj')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='obj')
Token(type='ob', text="'#vfx(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='eqvok-help?')
Token(type='at', text='number?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='e*ok?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*ok-help?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='e*ok-help?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='eqok?')
Token(type='ob', text='(')
Token(type='at', text='e*ok?')
Token(type='at', text='eqok-help?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='eqvok?')
Token(type='ob', text='(')
Token(type='at', text='e*ok?')
Token(type='at', text='eqvok-help?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='eqv?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqvop-null-fptr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqok?')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqok?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-eq?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-eqv?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='xform-equal?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='xform')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='d1')
Token(type='at', text='d1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='at', text='3')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eqok-help?')
Token(type='at', text='d1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='build-eq?')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text=',d1')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eqvok-help?')
Token(type='at', text='d1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='build-eqv?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text=',d1')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='d1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='at', text='dobind')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='binder')
Token(type='at', text='#t')
Token(type='at', text="'ptr")
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xform')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='d1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-car')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='a')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xform')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='d1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-cdr')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='d')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='dobind')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-pair?')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='at', text='a')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='equal?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqvop-null-fptr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xform-equal?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xform-equal?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='mem*ok?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*ok-help?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='list?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='d')
Token(type='at', text='d')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='e*ok-help?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='memqok?')
Token(type='ob', text='(')
Token(type='at', text='mem*ok?')
Token(type='at', text='eqok-help?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='memvok?')
Token(type='ob', text='(')
Token(type='at', text='mem*ok?')
Token(type='at', text='eqvok-help?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='mem*->e*?s')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='build-e*?')
Token(type='at', text='limit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-ls')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='d')
Token(type='at', text='d')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='n')
Token(type='at', text='limit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx1+')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='at', text='d')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-e*?')
Token(type='at', text='e-key')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',ls')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='memq->eq?s')
Token(type='ob', text='(')
Token(type='at', text='mem*->e*?s')
Token(type='at', text='build-eq?')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='memv->eqv?s')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mem*->e*?s')
Token(type='ob', text='(')
Token(type='at', text='make-build-eqv?')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-memq')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='memq->eq?s')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-ls')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t-ls")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-ls')
Token(type='at', text=',e-ls')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-key')
Token(type='cb', text=')')
Token(type='at', text=',t-ls')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-ls')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-memv')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='memv->eqv?s')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='memv')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='memq')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-memq')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='memv')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqok?')
Token(type='at', text='e-key')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memqok?')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-memq')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-memv')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='member')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqok?')
Token(type='at', text='e-key')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memqok?')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-memq')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqvok?')
Token(type='at', text='e-key')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memvok?')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-memv')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='memq')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq->eq?s')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='memv')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='memqok?')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq->eq?s')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='memv->eqv?s')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='member')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='memqok?')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq->eq?s')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='memvok?')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='memv->eqv?s')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='cb', text=')')
Token(type='at', text='e-key')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; NB: for all of the I/O routines, consider putting optimize-level 2 code out-of-line')
Token(type='lc', text='; w/o going all the way to the port handler, i.e., always defer to library routine but')
Token(type='lc', text='; have library routine do the checks and run the optimize-level 3 version...this could')
Token(type='lc', text='; save a lot of code')
Token(type='lc', text="; NB: verify that the inline checks don't always fail, i.e., don't always send us to the")
Token(type='lc', text='; library routine')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='check?')
Token(type='at', text='update?')
Token(type='at', text='do-libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='check?')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-port-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='Llib')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-p')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-binary-input-port')
Token(type='at', text='type-binary-input-port')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-update')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t0')
Token(type='at', text='e-icount')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='update?')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',e-icount')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-icount')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-port-check')
Token(type='at', text='e-p')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t0')
Token(type='at', text='e-icount')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='maybe-add-label')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='do-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='maybe-add-update')
Token(type='at', text='t0')
Token(type='at', text='e-icount')
Token(type='lc', text="; TODO: this doesn't completely fall away when used in effect context")
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-lookahead-u8-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-lookahead-u8')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-lookahead-u8-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-lookahead-u8')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-get-u8-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-get-u8')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-get-u8-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-get-u8')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='lookahead-u8')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-lookahead-u8-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='lookahead-u8')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='at', text='safe-lookahead-u8-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='get-u8')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='unsafe-get-u8-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='get-u8')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='at', text='safe-get-u8-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='check?')
Token(type='at', text='update?')
Token(type='at', text='do-libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='check?')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-port-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='Llib')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-p')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-textual-input-port')
Token(type='at', text='type-textual-input-port')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-update')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t0')
Token(type='at', text='e-icount')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='update?')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',e-icount')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-icount')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-port-check')
Token(type='at', text='e-p')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t0')
Token(type='at', text='e-icount')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='maybe-add-label')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='do-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='maybe-add-update')
Token(type='at', text='t0')
Token(type='at', text='e-icount')
Token(type='lc', text="; TODO: this doesn't completely fall away when used in effect context")
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='string-char-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-lookahead-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-lookahead-char')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-lookahead-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-lookahead-char')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-peek-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-peek-char')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-peek-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-peek-char')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-get-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-get-char')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-get-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-get-char')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-read-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-read-char')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-read-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-read-char')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='lookahead-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-lookahead-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='lookahead-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='at', text='safe-lookahead-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='peek-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-input')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-peek-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-peek-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='peek-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-input')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-peek-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='at', text='safe-peek-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='get-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='unsafe-get-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='get-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='at', text='safe-get-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='read-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-input')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='unsafe-read-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='unsafe-read-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='read-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-input')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='unsafe-read-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='at', text='safe-read-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='check-port?')
Token(type='at', text='check-char?')
Token(type='at', text='do-libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='const-char?')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='check-char?')
Token(type='at', text='check-port?')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='const-char?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-port-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check-port?')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-p')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-textual-input-port')
Token(type='at', text='type-textual-input-port')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-eof-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='const-char?')
Token(type='at', text='body')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e-c')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='seof')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-char-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check-char?')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e-c')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-icount')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-port-check')
Token(type='at', text='e-p')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-eof-check')
Token(type='at', text='e-c')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-char-check')
Token(type='at', text='e-c')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t0')
Token(type='at', text='e-icount')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='maybe-add-label')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='do-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',e-icount')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-unget-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-unget-char')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-unget-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-unget-char')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-unread-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-unread-char')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-unread-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-unread-char')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='unget-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-unget-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='unget-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='safe-unget-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='unread-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-input')
Token(type='cb', text=')')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-unread-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-unread-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='unread-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-input')
Token(type='cb', text=')')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-unread-char-libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-input')
Token(type='cb', text=')')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='safe-unread-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='safe-unread-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='octet?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='at', text='255')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-octet-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='check-octet?')
Token(type='at', text='Llib')
Token(type='at', text='e-o')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check-octet?')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-octet')
Token(type='at', text='type-octet')
Token(type='at', text=',e-o')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='at', text='check-port?')
Token(type='at', text='check-octet?')
Token(type='at', text='do-libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='const-octet?')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='octet?')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='check-octet?')
Token(type='at', text='check-port?')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='const-octet?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-port-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check-port?')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-p')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-binary-input-port')
Token(type='at', text='type-binary-input-port')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-eof-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-o')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='const-octet?')
Token(type='at', text='body')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e-o')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='seof')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-o')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-icount')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-port-check')
Token(type='at', text='e-p')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-eof-check')
Token(type='at', text='e-o')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-octet-check')
Token(type='at', text='check-octet?')
Token(type='at', text='Llib')
Token(type='at', text='e-o')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t0')
Token(type='at', text='e-icount')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='maybe-add-label')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='do-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',e-icount')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',t0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-unget-u8-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-unget-u8')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-unget-u8-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-unget-u8')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='unget-u8')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-unget-u8-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='unget-u8')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='octet?')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='safe-unget-u8-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='at', text='check-port?')
Token(type='at', text='check-octet?')
Token(type='at', text='do-libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='check-octet?')
Token(type='at', text='check-port?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-port-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check-port?')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-p')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-binary-output-port')
Token(type='at', text='type-binary-output-port')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-update')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t0')
Token(type='at', text='e-ocount')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',e-ocount')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='check-octet?')
Token(type='ob', text='(')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-ocount')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-octet-check')
Token(type='at', text='check-octet?')
Token(type='at', text='Llib')
Token(type='at', text='e-o')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-port-check')
Token(type='at', text='e-p')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t0')
Token(type='at', text='e-ocount')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='maybe-add-label')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='do-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-o')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='add-update')
Token(type='at', text='t0')
Token(type='at', text='e-ocount')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-olast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-put-u8-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-o')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-put-u8')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-put-u8-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-o')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-put-u8')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='put-u8')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-put-u8-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='put-u8')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-o')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='octet?')
Token(type='at', text='e-o')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='safe-put-u8-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='check-port?')
Token(type='at', text='check-char?')
Token(type='at', text='do-libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='check-char?')
Token(type='at', text='check-port?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-char-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check-char?')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e-c')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-port-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check-port?')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-p')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-textual-output-port')
Token(type='at', text='type-textual-output-port')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-update')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t0')
Token(type='at', text='e-ocount')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',e-ocount')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='check-char?')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-ocount')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-char-check')
Token(type='at', text='e-c')
Token(type='ob', text='(')
Token(type='at', text='maybe-add-port-check')
Token(type='at', text='e-p')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t0')
Token(type='at', text='e-ocount')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='maybe-add-label')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='do-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='add-update')
Token(type='at', text='t0')
Token(type='at', text='e-ocount')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='string-char-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',t0')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-olast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-put-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-put-char')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-put-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-put-char')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-write-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-write-char')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-write-char-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-write-char')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='unsafe-newline-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-newline')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='safe-newline-libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-newline')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='put-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-put-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='put-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='safe-put-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='write-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-write-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-write-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='write-char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-write-char-libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='at', text='e-c')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='safe-write-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-c')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='at', text='e-c')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='safe-write-char-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='newline')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ch', text='#\\newline')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-newline-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ch', text='#\\newline')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-newline-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='newline')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='current-output')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ch', text='#\\newline')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='unsafe-newline-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-p')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ch', text='#\\newline')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='at', text='safe-newline-libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fxop?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='overflow-flag')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='adjust')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lfail')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lfail")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',null-info')
Token(type='at', text=',op')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='adjust')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text='overflow-flag')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lfail')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lfail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='+')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxop?')
Token(type='at', text='%+/ovfl')
Token(type='at', text="'overflow")
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxop?')
Token(type='at', text='%+/ovfl')
Token(type='at', text="'overflow")
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: handle 3-operand case ala fx+, w/3-operand library +')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='*')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxop?')
Token(type='at', text='%*/ovfl')
Token(type='at', text="'multiply-overflow")
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='build-unfix')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: swap e1 & e2 if e1 is constant')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxop?')
Token(type='at', text='%*/ovfl')
Token(type='at', text="'multiply-overflow")
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='build-unfix')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: handle 3-operand case ala fx+, w/3-operand library *')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='-')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxop?')
Token(type='at', text='%-/ovfl')
Token(type='at', text="'overflow")
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxop?')
Token(type='at', text='%-/ovfl')
Token(type='at', text="'overflow")
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: handle 3-operand case ala fx+, w/3-operand library -')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fxop?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lfail')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lfail")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',null-info')
Token(type='at', text=',op')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'overflow")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lfail')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lfail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-inline-1op')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxop?')
Token(type='at', text='op')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline-1op')
Token(type='at', text='%-/ovfl')
Token(type='at', text='1-')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline-1op')
Token(type='at', text='%-/ovfl')
Token(type='at', text='-1+')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline-1op')
Token(type='at', text='%-/ovfl')
Token(type='at', text='sub1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline-1op')
Token(type='at', text='%+/ovfl')
Token(type='at', text='1+')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline-1op')
Token(type='at', text='%+/ovfl')
Token(type='at', text='add1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='/')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='/')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='/')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='zgo')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eqvop-null-fptr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='zgo')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='zgo')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='=')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:=')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-relop-inline')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='r6rs:name')
Token(type='at', text='relop')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='builder')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='relop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='builder')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: handle 3-operand case w/3-operand library routine')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='builder')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: handle 3-operand case w/3-operand library routine')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-relop-inline')
Token(type='at', text='<')
Token(type='at', text='r6rs:<')
Token(type='at', text='RELOP<')
Token(type='at', text='<')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-relop-inline')
Token(type='at', text='<=')
Token(type='at', text='r6rs:<=')
Token(type='at', text='RELOP<=')
Token(type='at', text='<=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-relop-inline')
Token(type='at', text='>=')
Token(type='at', text='r6rs:>=')
Token(type='at', text='RELOP>=')
Token(type='at', text='>=')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-relop-inline')
Token(type='at', text='>')
Token(type='at', text='r6rs:>')
Token(type='at', text='RELOP>')
Token(type='at', text='>')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='positive?')
Token(type='lc', text='; 3 so opt-level 2 errors come from positive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-prim')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='3')
Token(type='at', text="'>")
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='nonnegative?')
Token(type='lc', text='; 3 so opt-level 2 errors come from nonnegative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-prim')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='3')
Token(type='at', text="'>=")
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='negative?')
Token(type='lc', text='; 3 so opt-level 2 errors come from negative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-prim')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='3')
Token(type='at', text="'<")
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='nonpositive?')
Token(type='lc', text='; 3 so opt-level 2 errors come from nonpositive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-prim')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='3')
Token(type='at', text="'<=")
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='zero?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'ftype-pointer-address")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-ftype-pointer-null?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='zero?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='positive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP>')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='nonnegative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP>=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='negative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP<')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='nonpositive?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='relop-length')
Token(type='at', text='RELOP<=')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-logorop-inline')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-logop')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='libcall')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-logop')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-logop')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-logorop-inline')
Token(type='at', text='logor')
Token(type='at', text='logior')
Token(type='at', text='bitwise-ior')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-logop-inline')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='unit')
Token(type='at', text='name')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-logop')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='libcall')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='unit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-logop')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='unit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-logop')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-logop-inline')
Token(type='at', text='logand')
Token(type='at', text='-1')
Token(type='at', text='logand')
Token(type='at', text='bitwise-and')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-logop-inline')
Token(type='at', text='logxor')
Token(type='at', text='0')
Token(type='at', text='logxor')
Token(type='at', text='bitwise-xor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-lognot')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logxor')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fxlognot')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='mask-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='lognot')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-lognot')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='lognot')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='bitwise-not')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-lognot')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='bitwise-not')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-logbit?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='libcall')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='>')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='libcall')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='logbit?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-logbit?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='logbit?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='bitwise-bit-set?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-logbit?')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='bitwise-bit-set?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='logbit1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='logbit1')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='logbit1')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='logbit0')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e2')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='lognot')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='logbit0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',e1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='lognot')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='logbit0')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='logtest')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='logtest')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$flhash')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-flonum-extractor')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pos')
Token(type='at', text='size')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cnt')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='pos')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='mask')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='expt')
Token(type='at', text='2')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='expt')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text="'integer-32")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',e1')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='cnt')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',cnt')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='cnt')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',body')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='0')
Token(type='at', text='cnt')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fllp')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flonum-extractor')
Token(type='at', text='19')
Token(type='at', text='12')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$flonum-sign')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flonum-extractor')
Token(type='at', text='31')
Token(type='at', text='1')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$flonum-exponent')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flonum-extractor')
Token(type='at', text='20')
Token(type='at', text='11')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fleqv?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e2')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'compiler-internal")
Token(type='st', text='"$fleqv doesn\'t handle ptr-bits = ~s"')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-flop-1')
Token(type='lc', text='; NB: e must be bound')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',null-info')
Token(type='at', text=',op')
Token(type='at', text=',e')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-flop-2')
Token(type='lc', text='; NB: e1 and e2 must be bound')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',null-info')
Token(type='at', text=',op')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-flabs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='disp-high')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='disp-low')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='disp-low')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='disp-high')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='at', text=',disp-high')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='at', text=',disp-high')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='at', text=',disp-low')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='at', text=',disp-low')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-flneg')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logxor')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='63')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='disp-high')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='disp-low')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='disp-low')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='disp-high')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='at', text=',disp-high')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logxor')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='at', text=',disp-high')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='31')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='at', text=',disp-low')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='at', text=',disp-low')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text=';; TODO: Rather then reducing here, (which will allocate a new flonum for each interim result)')
Token(type='lc', text=';; we could allocate a single flonum and reuse it until the final result is calculated.')
Token(type='lc', text=';; Better yet, we could do this across nested fl operations, so that only one flonum is')
Token(type='lc', text=';; allocated across nested fl+, fl*, fl-, fl/ etc. operation')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fl+')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0.0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flop-2')
Token(type='at', text='%fl+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fl*')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1.0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flop-2')
Token(type='at', text='%fl*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fl-')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flneg')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flop-2')
Token(type='at', text='%fl-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fl/')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flop-2')
Token(type='at', text='%fl/')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1.0')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flop-2')
Token(type='at', text='%fl/')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='flsqrt')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='architecture')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x86')
Token(type='at', text='x86_64')
Token(type='at', text='arm32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flop-1')
Token(type='at', text='%flsqrt')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ppc32')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='flround')
Token(type='lc', text='; NB: there is no support in SSE2 for flround, though this was added in SSE4.1')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='flround')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='flabs')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flabs')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fl-make-rectangular')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-inexactnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='inexactnum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-inexactnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%load-double')
Token(type='at', text=',e1')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%store-double')
Token(type='at', text=',t')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='inexactnum-real-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%load-double')
Token(type='at', text=',e2')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='flonum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-loadfl')
Token(type='at', text='%flreg1')
Token(type='cb', text=')')
Token(type='at', text=',%store-double')
Token(type='at', text=',t')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='inexactnum-imag-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fl-make-rectangular')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fl-make-rectangular')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='cfl-')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-flneg')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-fl-make-rectangular')
Token(type='ob', text='(')
Token(type='at', text='build-flneg')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flneg')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: add 3 argument version of cfl- library function')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='cfl+')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0.0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: add 3 argument version of cfl+ library function')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='cfl*')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1.0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: add 3 argument version of cfl* library function')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='cfl/')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl/')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1.0')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl/')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: add 3 argument version of cfl/ library function')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='cfl/')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='cfl-conjugate')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='build-fl-make-rectangular')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flneg')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-exactnum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-exactnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='exactnum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-exactnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='exactnum-real-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='exactnum-imag-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-fl<')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='fl<')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-fl=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='fl=')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-fl<=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='fl<=')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-fl-cmp-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='r6rs:op')
Token(type='at', text='builder')
Token(type='at', text='inequality?')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='args')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='reducer')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='inequality?')
Token(type='cb', text=')')
Token(type='at', text="#'reduce-inequality")
Token(type='at', text="#'reduce-equality")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fl=')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='builder')
Token(type='at', text='args')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reducer')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='r6rs:op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='builder')
Token(type='at', text='args')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reducer')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl=')
Token(type='at', text='fl=?')
Token(type='at', text='build-fl=')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl<')
Token(type='at', text='fl<?')
Token(type='at', text='build-fl<')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl>')
Token(type='at', text='fl>?')
Token(type='at', text='build-fl<')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl<=')
Token(type='at', text='fl<=?')
Token(type='at', text='build-fl<=')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl>=')
Token(type='at', text='fl>=?')
Token(type='at', text='build-fl<=')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='build-bind-and-check')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-fl-cmp-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='op')
Token(type='at', text='r6rs:op')
Token(type='at', text='builder')
Token(type='at', text='inequality?')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='args')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='e2')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-bind-and-check')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='builder')
Token(type='at', text='args')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:op')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-bind-and-check')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='r6rs:op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='builder')
Token(type='at', text='args')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl=')
Token(type='at', text='fl=?')
Token(type='at', text='build-fl=')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl<')
Token(type='at', text='fl<?')
Token(type='at', text='build-fl<')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl>')
Token(type='at', text='fl>?')
Token(type='at', text='build-fl<')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl<=')
Token(type='at', text='fl<=?')
Token(type='at', text='build-fl<=')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fl-cmp-inline')
Token(type='at', text='fl>=')
Token(type='at', text='fl>=?')
Token(type='at', text='build-fl<=')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-cfl=')
Token(type='lc', text='; NB: e1 and e2 must be bound')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-fl=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fl=')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0.0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fl=')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fl=')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0.0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fl=')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='build-fl=')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-imag-part')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fl=')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$inexactnum-real-part')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='cfl=')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-cfl=')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; this is weird, why not just true?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-cfl=')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: should we avoid building for more then the 3 item case?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce-equality')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-flop-3')
Token(type='lc', text='; NB: e1, e2, and e3 must be bound')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-flop-2')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='build-flop-2')
Token(type='at', text='op')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-checked-flop')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-flonums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='op')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-flonums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-flop-2')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='op')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-flonums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-flop-3')
Token(type='at', text='op')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fl+')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0.0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked-flop')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl+')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='0.0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked-flop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='%fl+')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: add 3 argument fl+ library function')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked')
Token(type='at', text='flop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='%fl+')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl+')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fl*')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1.0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked-flop')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl*')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1.0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked-flop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='%fl*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: add 3 argument fl* library function')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked')
Token(type='at', text='flop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='%fl*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fl-')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-flonums?')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-flneg')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='flnegate')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked-flop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='%fl-')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: add 3 argument fl- library function')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked')
Token(type='at', text='flop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='%fl-')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl-')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fl/')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked-flop')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='1.0')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='at', text='%fl/')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl/')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked-flop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='%fl/')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl/')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: add 3 argument fl/ library function')
Token(type='dc', text='#;')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-checked')
Token(type='at', text='flop')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='at', text='%fl/')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fl/')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; NB: assuming that we have a trunc instruction for now, will need to change to support Sparc')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='flonum->fixnum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='trunc')
Token(type='at', text=',e-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fixnum->flonum')
Token(type='lc', text='; NB: x must already be bound in order to ensure it is done before the flonum is allocated')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='flt')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fixnum->flonum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fixnum->flonum')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='real->flonum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='flonum?')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='at', text='e-x')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e-x')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-fixnum->flonum')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-flonum')
Token(type='at', text='type-flonum')
Token(type='at', text=',e-x')
Token(type='cb', text=')')
Token(type='at', text=',e-x')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='real->flonum')
Token(type='at', text='e-x')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='real->flonum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$real->flonum')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$real->flonum')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='x')
Token(type='at', text='who')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$record')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tag')
Token(type='at', text='.')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$record')
Token(type='at', text='tag')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$object-address')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unsigned->ptr')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e-ptr')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text='ptr-type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$address->object')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-addr')
Token(type='at', text='e-roffset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-roffset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='ptr->integer')
Token(type='at', text='e-addr')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text='ptr-type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e-roffset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$object-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='filter-foreign-type')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='record-datatype')
Token(type='at', text='list')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text="'(")
Token(type='at', text='char')
Token(type='at', text='wchar')
Token(type='at', text='boolean')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='#f')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$swap-object-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='filter-foreign-type')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='record-datatype')
Token(type='at', text='list')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text="'(")
Token(type='at', text='char')
Token(type='at', text='wchar')
Token(type='at', text='boolean')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='#t')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='foreign-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-type')
Token(type='at', text='e-addr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='filter-foreign-type')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='record-datatype')
Token(type='at', text='list')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text="'(")
Token(type='at', text='char')
Token(type='at', text='wchar')
Token(type='at', text='boolean')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='#f')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='ptr->integer')
Token(type='at', text='e-addr')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$object-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='filter-foreign-type')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='record-datatype')
Token(type='at', text='list')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text="'(")
Token(type='at', text='char')
Token(type='at', text='wchar')
Token(type='at', text='boolean')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'double-float")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-set!')
Token(type='at', text='type')
Token(type='at', text='base')
Token(type='at', text='offset')
Token(type='at', text='value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='foreign-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-type')
Token(type='at', text='e-addr')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='filter-foreign-type')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='record-datatype')
Token(type='at', text='list')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='type')
Token(type='ob', text="'(")
Token(type='at', text='char')
Token(type='at', text='wchar')
Token(type='at', text='boolean')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'double-float")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-set!')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='ptr->integer')
Token(type='at', text='e-addr')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$make-fptr')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ftype')
Token(type='at', text='e-addr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-addr')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'ftype-pointer-address")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-ftype')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-ftype')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e1')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-ftype')
Token(type='at', text='e-addr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-ftype')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='ptr->integer')
Token(type='at', text='e-addr')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='ftype-pointer-address')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-64")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='e-fptr')
Token(type='at', text='%zero')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='ftype-pointer-null?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-ftype-pointer-null?')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='ftype-pointer=?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-ftype-pointer-equal?')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fx+raw')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='fx-arg')
Token(type='at', text='raw-arg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='fx-arg')
Token(type='cb', text=')')
Token(type='at', text='raw-arg')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',raw-arg')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='fx-arg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='$extract-fptr-address')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='suppress-unsafe-cast')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-fptr')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info1')
Token(type='at', text=',mdcl1')
Token(type='at', text=',pr1')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info2')
Token(type='at', text=',mdcl2')
Token(type='at', text=',pr2')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr1')
Token(type='cb', text=')')
Token(type='at', text="'$make-fptr")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr2')
Token(type='cb', text=')')
Token(type='at', text="'ftype-pointer-address")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='e-fptr')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-fptr')
Token(type='lc', text='; skip allocation and dereference of ftype-pointer for $fptr-fptr-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='at', text=',e3')
Token(type='cb', text=')')
Token(type='lc', text='; e1, e2, e3 = fptr, offset, ftd')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'$fptr-fptr-ref")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='e3')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='ob', text=',(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='at', text=',e-index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; skip allocation and dereference of ftype-pointer for $fptr-&ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='at', text=',e3')
Token(type='cb', text=')')
Token(type='lc', text='; e1, e2, e3 = fptr, offset, ftd')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'$fptr-&ref")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fx+raw')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; skip allocation and dereference of ftype-pointer for $make-fptr')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='lc', text='; e1, e2 = ftd, (ptr) addr')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'$make-fptr")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e2')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',pr')
Token(type='at', text=',e3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='primref-name')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='at', text="'ftype-pointer-address")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='all-set?')
Token(type='ob', text='(')
Token(type='at', text='prim-mask')
Token(type='at', text='unsafe')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primref-flags')
Token(type='at', text='pr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e3')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ptr->integer')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='ob', text=',(')
Token(type='at', text='suppress-unsafe-cast')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-offset-addr')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='lc', text='; bind offset before doing the load (a) to maintain applicative order---the')
Token(type='lc', text='; load can cause an invalid memory reference---and (b) so that the raw value')
Token(type='lc', text="; isn't live across any calls")
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fx+raw')
Token(type='at', text='e-offset')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-&ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='at', text='e-ftd')
Token(type='cb', text=')')
Token(type='lc', text='; see comment in $fptr-offset-addr')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-offset')
Token(type='at', text='e-ftd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$record')
Token(type='at', text='e-ftd')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='build-fx+raw')
Token(type='at', text='e-offset')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-fptr-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='at', text='e-ftd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-$record')
Token(type='at', text='e-ftd')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='ob', text=',(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='at', text=',e-index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-fptr-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-addr')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='e-index')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',e-addr')
Token(type='at', text=',e-index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='ptr-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',e-val')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='$do-fptr-ref-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='swapped?')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-fptr-ref-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='ref')
Token(type='at', text='maybe-k')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='#,name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='#,(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='maybe-k')
Token(type='ob', text='#`(')
Token(type='at', text='#,maybe-k')
Token(type='at', text='#,body')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='$do-fptr-ref-inline')
Token(type='at', text='#,ref')
Token(type='at', text='#,type')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='?type')
Token(type='at', text='ref')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-inline')
Token(type='at', text="#'name")
Token(type='at', text="#'?type")
Token(type='at', text="#'ref")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='?type')
Token(type='at', text='ref')
Token(type='at', text='?k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-inline')
Token(type='at', text="#'name")
Token(type='at', text="#'?type")
Token(type='at', text="#'ref")
Token(type='at', text="#'?k")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-integer-8')
Token(type='at', text="'integer-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-unsigned-8')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-integer-16')
Token(type='at', text="'integer-16")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-unsigned-16')
Token(type='at', text="'unsigned-16")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-integer-16')
Token(type='at', text="'integer-16")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-unsigned-16')
Token(type='at', text="'unsigned-16")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-integer-24')
Token(type='at', text="'integer-24")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-unsigned-24')
Token(type='at', text="'unsigned-24")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-integer-24')
Token(type='at', text="'integer-24")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-unsigned-24')
Token(type='at', text="'unsigned-24")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-integer-32')
Token(type='at', text="'integer-32")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-unsigned-32')
Token(type='at', text="'unsigned-32")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-integer-32')
Token(type='at', text="'integer-32")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-unsigned-32')
Token(type='at', text="'unsigned-32")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-integer-40')
Token(type='at', text="'integer-40")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-unsigned-40')
Token(type='at', text="'unsigned-40")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-integer-40')
Token(type='at', text="'integer-40")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-unsigned-40')
Token(type='at', text="'unsigned-40")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-integer-48')
Token(type='at', text="'integer-48")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-unsigned-48')
Token(type='at', text="'unsigned-48")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-integer-48')
Token(type='at', text="'integer-48")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-unsigned-48')
Token(type='at', text="'unsigned-48")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-integer-56')
Token(type='at', text="'integer-56")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-unsigned-56')
Token(type='at', text="'unsigned-56")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-integer-56')
Token(type='at', text="'integer-56")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-unsigned-56')
Token(type='at', text="'unsigned-56")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-integer-64')
Token(type='at', text="'integer-64")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-unsigned-64')
Token(type='at', text="'unsigned-64")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-integer-64')
Token(type='at', text="'integer-64")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-unsigned-64')
Token(type='at', text="'unsigned-64")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-double-float')
Token(type='at', text="'double-float")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-double-float')
Token(type='at', text="'double-float")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-single-float')
Token(type='at', text="'single-float")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-single-float')
Token(type='at', text="'single-float")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-char')
Token(type='at', text="'unsigned-8")
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-integer->char')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-wchar')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='wchar-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-16")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-integer->char')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-wchar')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='wchar-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-16")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-integer->char')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-boolean')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='int-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-64")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-boolean')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='int-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-64")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-fixnum')
Token(type='at', text="'fixnum")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-ref-inline')
Token(type='at', text='$fptr-ref-swap-fixnum')
Token(type='at', text="'fixnum")
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='$do-fptr-set!-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='set')
Token(type='at', text='type')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='at', text='e-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-fptr-set!-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-body')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='set')
Token(type='at', text='maybe-massage-val')
Token(type='cb', text=')')
Token(type='ob', text='#``(')
Token(type='at', text='seq')
Token(type='at', text=',e-info')
Token(type='ob', text='#,(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='#`(')
Token(type='at', text='$do-fptr-set!-inline')
Token(type='at', text='#,set')
Token(type='at', text='#,type')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='maybe-massage-val')
Token(type='ob', text='#`,(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-offset')
Token(type='ob', text='[')
Token(type='at', text='e-val')
Token(type='ob', text='(')
Token(type='at', text='#,maybe-massage-val')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='#,body')
Token(type='cb', text=')')
Token(type='ob', text='#`,(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='at', text='#,body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='check-64?')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='#,name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-info')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='#,(')
Token(type='at', text='if')
Token(type='at', text='check-64?')
Token(type='ob', text='#`(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='#,body')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='check-64?')
Token(type='at', text='name')
Token(type='at', text='?type')
Token(type='at', text='set')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-inline')
Token(type='at', text="#'name")
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='check-64?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-body')
Token(type='at', text="#'?type")
Token(type='at', text="#'set")
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='check-64?')
Token(type='at', text='name')
Token(type='at', text='?type')
Token(type='at', text='set')
Token(type='at', text='?massage-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-inline')
Token(type='at', text="#'name")
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='check-64?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-body')
Token(type='at', text="#'?type")
Token(type='at', text="#'set")
Token(type='at', text="#'?massage-value")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-integer-8!')
Token(type='at', text="'integer-8")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-unsigned-8!')
Token(type='at', text="'unsigned-8")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-integer-16!')
Token(type='at', text="'integer-16")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-unsigned-16!')
Token(type='at', text="'unsigned-16")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-integer-16!')
Token(type='at', text="'integer-16")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-unsigned-16!')
Token(type='at', text="'unsigned-16")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-integer-24!')
Token(type='at', text="'integer-24")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-unsigned-24!')
Token(type='at', text="'unsigned-24")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-integer-24!')
Token(type='at', text="'integer-24")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-unsigned-24!')
Token(type='at', text="'unsigned-24")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-integer-32!')
Token(type='at', text="'integer-32")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-unsigned-32!')
Token(type='at', text="'unsigned-32")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-integer-32!')
Token(type='at', text="'integer-32")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-unsigned-32!')
Token(type='at', text="'unsigned-32")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-integer-40!')
Token(type='at', text="'integer-40")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-unsigned-40!')
Token(type='at', text="'unsigned-40")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-integer-40!')
Token(type='at', text="'integer-40")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-unsigned-40!')
Token(type='at', text="'unsigned-40")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-integer-48!')
Token(type='at', text="'integer-48")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-unsigned-48!')
Token(type='at', text="'unsigned-48")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-integer-48!')
Token(type='at', text="'integer-48")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-unsigned-48!')
Token(type='at', text="'unsigned-48")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-integer-56!')
Token(type='at', text="'integer-56")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-unsigned-56!')
Token(type='at', text="'unsigned-56")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-integer-56!')
Token(type='at', text="'integer-56")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-unsigned-56!')
Token(type='at', text="'unsigned-56")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-integer-64!')
Token(type='at', text="'integer-64")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-unsigned-64!')
Token(type='at', text="'unsigned-64")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-integer-64!')
Token(type='at', text="'integer-64")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-unsigned-64!')
Token(type='at', text="'unsigned-64")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-double-float!')
Token(type='at', text="'double-float")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-swap-double-float!')
Token(type='at', text="'double-float")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-single-float!')
Token(type='at', text="'single-float")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-char!')
Token(type='at', text="'unsigned-8")
Token(type='at', text='build-object-set!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-char->integer')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-wchar!')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='wchar-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-16")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='build-object-set!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-char->integer')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-wchar!')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='wchar-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-16")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='build-swap-object-set!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-char->integer')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-boolean!')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='int-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-64")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='build-object-set!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',z')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-boolean!')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='int-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-32")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text="'unsigned-64")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='build-swap-object-set!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='z')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',z')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-fixnum!')
Token(type='at', text="'fixnum")
Token(type='at', text='build-object-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-swap-fixnum!')
Token(type='at', text="'fixnum")
Token(type='at', text='build-swap-object-set!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='signed?')
Token(type='at', text='type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='at', text='e-start')
Token(type='at', text='e-end')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e-start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e-end')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm-start')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-start')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='imm-end')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-end')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text="'type")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='imm-start')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='imm-end')
Token(type='at', text='imm-start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='imm-end')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='signed?')
Token(type='at', text='fx<=')
Token(type='at', text='fx<')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='imm-end')
Token(type='at', text='imm-start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int-load')
Token(type='at', text='swapped?')
Token(type='at', text="'type")
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='signed?')
Token(type='at', text='extract-signed-bitfield')
Token(type='at', text='extract-unsigned-bitfield')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='at', text='imm-start')
Token(type='at', text='imm-end')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-unsigned-8')
Token(type='at', text='#t')
Token(type='at', text='unsigned-8')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-unsigned-8')
Token(type='at', text='#f')
Token(type='at', text='unsigned-8')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-unsigned-16')
Token(type='at', text='#t')
Token(type='at', text='unsigned-16')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-unsigned-16')
Token(type='at', text='#f')
Token(type='at', text='unsigned-16')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-swap-unsigned-16')
Token(type='at', text='#t')
Token(type='at', text='unsigned-16')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-swap-unsigned-16')
Token(type='at', text='#f')
Token(type='at', text='unsigned-16')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-unsigned-24')
Token(type='at', text='#t')
Token(type='at', text='unsigned-24')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-unsigned-24')
Token(type='at', text='#f')
Token(type='at', text='unsigned-24')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-swap-unsigned-24')
Token(type='at', text='#t')
Token(type='at', text='unsigned-24')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-swap-unsigned-24')
Token(type='at', text='#f')
Token(type='at', text='unsigned-24')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-unsigned-32')
Token(type='at', text='#t')
Token(type='at', text='unsigned-32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-unsigned-32')
Token(type='at', text='#f')
Token(type='at', text='unsigned-32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-swap-unsigned-32')
Token(type='at', text='#t')
Token(type='at', text='unsigned-32')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-swap-unsigned-32')
Token(type='at', text='#f')
Token(type='at', text='unsigned-32')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-unsigned-40')
Token(type='at', text='#t')
Token(type='at', text='unsigned-40')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-unsigned-40')
Token(type='at', text='#f')
Token(type='at', text='unsigned-40')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-swap-unsigned-40')
Token(type='at', text='#t')
Token(type='at', text='unsigned-40')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-swap-unsigned-40')
Token(type='at', text='#f')
Token(type='at', text='unsigned-40')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-unsigned-48')
Token(type='at', text='#t')
Token(type='at', text='unsigned-48')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-unsigned-48')
Token(type='at', text='#f')
Token(type='at', text='unsigned-48')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-swap-unsigned-48')
Token(type='at', text='#t')
Token(type='at', text='unsigned-48')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-swap-unsigned-48')
Token(type='at', text='#f')
Token(type='at', text='unsigned-48')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-unsigned-56')
Token(type='at', text='#t')
Token(type='at', text='unsigned-56')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-unsigned-56')
Token(type='at', text='#f')
Token(type='at', text='unsigned-56')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-swap-unsigned-56')
Token(type='at', text='#t')
Token(type='at', text='unsigned-56')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-swap-unsigned-56')
Token(type='at', text='#f')
Token(type='at', text='unsigned-56')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-unsigned-64')
Token(type='at', text='#t')
Token(type='at', text='unsigned-64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-unsigned-64')
Token(type='at', text='#f')
Token(type='at', text='unsigned-64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ibits-swap-unsigned-64')
Token(type='at', text='#t')
Token(type='at', text='unsigned-64')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-ref-inline')
Token(type='at', text='$fptr-ref-ubits-swap-unsigned-64')
Token(type='at', text='#f')
Token(type='at', text='unsigned-64')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='check-64?')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='swapped?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='checks')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e-start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e-end')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='checks')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='check-64?')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='checks')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='checks')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='at', text='e-start')
Token(type='at', text='e-end')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='checks')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='imm-start')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-start')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='imm-end')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-end')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text="'type")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='imm-start')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='imm-end')
Token(type='at', text='imm-start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='imm-end')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='imm-end')
Token(type='at', text='imm-start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-addr')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int-load')
Token(type='at', text='swapped?')
Token(type='at', text="'type")
Token(type='at', text='e-addr')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-int-store')
Token(type='at', text='swapped?')
Token(type='at', text="'type")
Token(type='at', text='e-addr')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='ob', text='(')
Token(type='at', text='insert-bitfield')
Token(type='at', text='#t')
Token(type='at', text='imm-start')
Token(type='at', text='imm-end')
Token(type='ob', text='(')
Token(type='at', text='type->width')
Token(type='at', text="'type")
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-unsigned-8!')
Token(type='at', text='unsigned-8')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-unsigned-16!')
Token(type='at', text='unsigned-16')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-swap-unsigned-16!')
Token(type='at', text='unsigned-16')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-unsigned-24!')
Token(type='at', text='unsigned-24')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-swap-unsigned-24!')
Token(type='at', text='unsigned-24')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-unsigned-32!')
Token(type='at', text='unsigned-32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-swap-unsigned-32!')
Token(type='at', text='unsigned-32')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-unsigned-40!')
Token(type='at', text='unsigned-40')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-swap-unsigned-40!')
Token(type='at', text='unsigned-40')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-unsigned-48!')
Token(type='at', text='unsigned-48')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-swap-unsigned-48!')
Token(type='at', text='unsigned-48')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-unsigned-56!')
Token(type='at', text='unsigned-56')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#f')
Token(type='at', text='$fptr-set-bits-swap-unsigned-56!')
Token(type='at', text='unsigned-56')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-bits-unsigned-64!')
Token(type='at', text='unsigned-64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-fptr-bits-set-inline')
Token(type='at', text='#t')
Token(type='at', text='$fptr-set-bits-swap-unsigned-64!')
Token(type='at', text='unsigned-64')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-locked-decr!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='locked-decr!')
Token(type='ob', text=',(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='at', text=',e-index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'eq?")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-locked-incr!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='locked-incr!')
Token(type='ob', text=',(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='at', text=',e-index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'eq?")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='clear-lock')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lock-type')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text="'integer-32")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text="'integer-64")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='lock-type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='ob', text=',(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='at', text=',e-index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-init-lock!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='clear-lock')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-unlock!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='clear-lock')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-lock!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-base')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='lock!')
Token(type='at', text=',e-base')
Token(type='at', text=',e-index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fptr-spin-lock!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fptr')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset-expr->index+offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-base')
Token(type='ob', text='(')
Token(type='at', text='$extract-fptr-address')
Token(type='at', text='e-fptr')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='L1')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'L1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='L2')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'L2")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',L1')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='lock!')
Token(type='at', text=',e-base')
Token(type='at', text=',e-index')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',L2')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='pause')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',e-base')
Token(type='at', text=',e-index')
Token(type='at', text=',imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',L1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',L2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-port-flags-set?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-flags')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ash')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flags-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e-flags')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flags-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-port-input-empty?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='binary-port?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-flags-set?')
Token(type='at', text='e-p')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-binary')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='textual-port?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-not')
Token(type='ob', text='(')
Token(type='at', text='build-port-flags-set?')
Token(type='at', text='e-p')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-binary')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='port-closed?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-flags-set?')
Token(type='at', text='e-p')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-closed')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$port-flags-set?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-flags-set?')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='port-eof?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-port-input-empty?')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-port-flags-set?')
Token(type='at', text='e-p')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-eof')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='unsafe-port-eof?')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='port-eof?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Llib')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Llib")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-p')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t0')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-input-port')
Token(type='at', text='type-input-port')
Token(type='at', text=',t0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-port-input-empty?')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='at', text=',t0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ash')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-eof')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flags-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Llib')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='safe-port-eof?')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Llib')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='port-input-empty?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-empty?')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='port-output-full?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-set-port-flags!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-flags')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ash')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flags-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='at', text='e-flags')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flags-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-reset-port-flags!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-flags')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='lognot')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flags-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='lognot')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='e-flags')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flags-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$set-port-flags!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-flags!')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$reset-port-flags!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-reset-port-flags!')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='mark-port-closed!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-flags!')
Token(type='at', text='e-p')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-closed')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-p')
Token(type='at', text='e-bool')
Token(type='at', text='flag')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-flags')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text=',flag')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-bool')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='d')
Token(type='at', text='build-set-port-flags!')
Token(type='at', text='build-reset-port-flags!')
Token(type='cb', text=')')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e-bool')
Token(type='ob', text=',(')
Token(type='at', text='build-set-port-flags!')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-reset-port-flags!')
Token(type='at', text='e-p')
Token(type='at', text='e-flags')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-port-bol!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-bool')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-p')
Token(type='at', text='e-bool')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-bol')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-port-eof!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-bool')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-p')
Token(type='at', text='e-bool')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-flag-eof')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-size')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='textual-port-input-size')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-size')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='binary-port-input-size')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-size')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-size')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-olast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-obuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='textual-port-output-size')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-size')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='binary-port-output-size')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-size')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-index')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='lc', text='; TODO: use lea2?')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='textual-port-input-index')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-index')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='binary-port-input-index')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-index')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-index')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-olast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-obuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='textual-port-output-index')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-index')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='binary-port-output-index')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-index')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-count')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='textual-port-input-count')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-count')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='binary-port-input-count')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-input-count')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-count')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='textual-port-output-count')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-count')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='binary-port-output-count')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-port-output-count')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-input-size!')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='lc', text='; actually, set last to buffer[0] + size; count to size')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-x')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='at', text='e-x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',e-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-textual-port-input-size!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-input-size!')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-binary-port-input-size!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-input-size!')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-output-size!')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='lc', text='; actually, set last to buffer[0] + size; count to size')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-x')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='at', text='e-x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',e-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-olast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-obuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-textual-port-output-size!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-output-size!')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-binary-port-output-size!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-output-size!')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-input-index!')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='lc', text='; actually, set count to index - size, where size = last - buffer[0]')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='e-x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-textual-port-input-index!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-input-index!')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-binary-port-input-index!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-input-index!')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-output-index!')
Token(type='at', text='port-type')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='lc', text='; actually, set count to index - size, where size = last - buffer[0]')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='e-x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-olast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-obuffer-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-textual-port-output-index!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-output-index!')
Token(type='at', text="'textual")
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-binary-port-output-index!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-port-output-index!')
Token(type='at', text="'binary")
Token(type='at', text='e-p')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='make-build-set-port-buffer!')
Token(type='at', text='port-type')
Token(type='at', text='ibuffer-disp')
Token(type='at', text='icount-disp')
Token(type='at', text='ilast-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='at', text='new?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='at', text='new?')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='at', text=',ibuffer-disp')
Token(type='cb', text=')')
Token(type='at', text=',e-b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-p')
Token(type='at', text='ibuffer-disp')
Token(type='at', text='e-b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-length')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-b')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='string-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='expt')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-b')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='at', text=',icount-disp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',e-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='at', text=',ilast-disp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',e-b')
Token(type='at', text=',e-length')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='port-type')
Token(type='at', text="'textual")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='make-port')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='at', text='flags')
Token(type='at', text='set-ibuf!')
Token(type='at', text='set-obuf!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-info')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-p')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-port')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',flags')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-handler-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-handler')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-name-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='port-info-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-info')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='set-ibuf!')
Token(type='at', text='e-p')
Token(type='at', text='e-ib')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='set-obuf!')
Token(type='at', text='e-p')
Token(type='at', text='e-ob')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',e-p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='make-build-clear-count')
Token(type='at', text='count-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='at', text='new?')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-p')
Token(type='at', text=',count-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-set-textual-port-input-buffer!')
Token(type='ob', text='(')
Token(type='at', text='make-build-set-port-buffer!')
Token(type='at', text="'textual")
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-set-textual-port-output-buffer!')
Token(type='ob', text='(')
Token(type='at', text='make-build-set-port-buffer!')
Token(type='at', text="'textual")
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-obuffer-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-olast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-textual-port-input-buffer!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-textual-port-input-buffer!')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-textual-port-output-buffer!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-textual-port-output-buffer!')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-port')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='st', text='""')
Token(type='cb', text=')')
Token(type='at', text='e-info')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-input-port')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='PORT-FLAG-INPUT-MODE')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='build-set-textual-port-input-buffer!')
Token(type='ob', text='(')
Token(type='at', text='make-build-clear-count')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-textual-input-port')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-port')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='st', text='""')
Token(type='cb', text=')')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-output-port')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-build-clear-count')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='build-set-textual-port-output-buffer!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-textual-output-port')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-port')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-io-port')
Token(type='cb', text=')')
Token(type='at', text='build-set-textual-port-input-buffer!')
Token(type='at', text='build-set-textual-port-output-buffer!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-textual-input/output-port')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-set-binary-port-input-buffer!')
Token(type='ob', text='(')
Token(type='at', text='make-build-set-port-buffer!')
Token(type='at', text="'binary")
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-ibuffer-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-ilast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-set-binary-port-output-buffer!')
Token(type='ob', text='(')
Token(type='at', text='make-build-set-port-buffer!')
Token(type='at', text="'binary")
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-obuffer-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-olast-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-binary-port-input-buffer!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-binary-port-input-buffer!')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='set-binary-port-output-buffer!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-set-binary-port-output-buffer!')
Token(type='at', text='e-p')
Token(type='at', text='e-b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-port')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text='#vu8(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-info')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-input-port')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='PORT-FLAG-INPUT-MODE')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='PORT-FLAG-BINARY')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='build-set-binary-port-input-buffer!')
Token(type='ob', text='(')
Token(type='at', text='make-build-clear-count')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-ocount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-binary-input-port')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-port')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text='#vu8(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-output-port')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='PORT-FLAG-BINARY')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-build-clear-count')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='port-icount-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='build-set-binary-port-output-buffer!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-binary-output-port')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-port')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-io-port')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='PORT-FLAG-BINARY')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='build-set-binary-port-input-buffer!')
Token(type='at', text='build-set-binary-port-output-buffer!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-binary-input/output-port')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-name')
Token(type='at', text='e-handler')
Token(type='at', text='e-ib')
Token(type='at', text='e-ob')
Token(type='at', text='e-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fxvector-ref-check')
Token(type='ob', text='(')
Token(type='at', text='build-ref-check')
Token(type='at', text='fxvector-type-disp')
Token(type='at', text='maximum-fxvector-length')
Token(type='at', text='fxvector-length-offset')
Token(type='at', text='type-fxvector')
Token(type='at', text='mask-fxvector')
Token(type='at', text='fxvector-immutable-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fxvector-set!-check')
Token(type='ob', text='(')
Token(type='at', text='build-ref-check')
Token(type='at', text='fxvector-type-disp')
Token(type='at', text='maximum-fxvector-length')
Token(type='at', text='fxvector-length-offset')
Token(type='at', text='type-mutable-fxvector')
Token(type='at', text='mask-mutable-fxvector')
Token(type='at', text='fxvector-immutable-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$fxvector-ref-check?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxvector-ref-check')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$fxvector-set!-check?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxvector-set!-check')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='expr->index')
Token(type='at', text='e-i')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-fxvector-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-fv')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-fv')
Token(type='at', text=',e-i')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxvector-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxvector-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fxvector-ref-check')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='go')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxvector-ref')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='expr->index')
Token(type='at', text='e-i')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-fxvector-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-fv')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-fv')
Token(type='at', text=',e-i')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxvector-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='fxvector-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-fxvector-set!-check')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='go')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='fxvector-set!')
Token(type='at', text='e-fv')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fxvector-set-immutable!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='build-set-immutable!')
Token(type='at', text='fxvector-type-disp')
Token(type='at', text='fxvector-immutable-flag')
Token(type='cb', text=')')
Token(type='at', text='e-fv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-string-ref-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='build-ref-check')
Token(type='at', text='string-type-disp')
Token(type='at', text='maximum-string-length')
Token(type='at', text='string-length-offset')
Token(type='at', text='type-string')
Token(type='at', text='mask-string')
Token(type='at', text='string-immutable-flag')
Token(type='cb', text=')')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-string-set!-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='build-ref-check')
Token(type='at', text='string-type-disp')
Token(type='at', text='maximum-string-length')
Token(type='at', text='string-length-offset')
Token(type='at', text='type-mutable-string')
Token(type='at', text='mask-mutable-string')
Token(type='at', text='string-immutable-flag')
Token(type='cb', text=')')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$string-ref-check?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-string-ref-check')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$string-set!-check?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-string-set!-check')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='expr->index')
Token(type='at', text='e-i')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-string-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='string-char-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',e-s')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='string-char-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',e-s')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='e-i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='string-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='string-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-string-ref-check')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='go')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='string-ref')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='expr->index')
Token(type='at', text='e-i')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-string-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='string-char-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',e-s')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='string-char-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',e-s')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='e-i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='string-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='string-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-ref-check')
Token(type='ob', text='(')
Token(type='at', text='build-string-set!-check')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='at', text='e-ref-check')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='at', text='e-ref-check')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='go')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='string-set!')
Token(type='at', text='e-s')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$string-set-immutable!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-s')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='build-set-immutable!')
Token(type='at', text='string-type-disp')
Token(type='at', text='string-immutable-flag')
Token(type='cb', text=')')
Token(type='at', text='e-s')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-vector-ref-check')
Token(type='ob', text='(')
Token(type='at', text='build-ref-check')
Token(type='at', text='vector-type-disp')
Token(type='at', text='maximum-vector-length')
Token(type='at', text='vector-length-offset')
Token(type='at', text='type-vector')
Token(type='at', text='mask-vector')
Token(type='at', text='vector-immutable-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-vector-set!-check')
Token(type='ob', text='(')
Token(type='at', text='build-ref-check')
Token(type='at', text='vector-type-disp')
Token(type='at', text='maximum-vector-length')
Token(type='at', text='vector-length-offset')
Token(type='at', text='type-mutable-vector')
Token(type='at', text='mask-mutable-vector')
Token(type='at', text='vector-immutable-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$vector-ref-check?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-vector-ref-check')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$vector-set!-check?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-vector-set!-check')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-i')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='at', text=',e-i')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='vector-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='vector-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-vector-ref-check')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='vector-ref')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-i')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-v')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='vector-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='vector-set!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-vector-set!-check')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='vector-set!')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$vector-set-immutable!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='build-set-immutable!')
Token(type='at', text='vector-type-disp')
Token(type='at', text='vector-immutable-flag')
Token(type='cb', text=')')
Token(type='at', text='e-fv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-i')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-v')
Token(type='at', text='%zero')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='ob', text='(')
Token(type='at', text='make-build-cas')
Token(type='at', text='e-old')
Token(type='cb', text=')')
Token(type='at', text='build-cas-seq')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='build-dirty-store')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='at', text='e-new')
Token(type='ob', text='(')
Token(type='at', text='make-build-cas')
Token(type='at', text='e-old')
Token(type='cb', text=')')
Token(type='at', text='build-cas-seq')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='vector-cas!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='vector-cas!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-vector-set!-check')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='vector-cas!')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-old')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-i')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-v')
Token(type='at', text=',e-i')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='vector-set-fixnum!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='vector-set-fixnum!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='build-vector-set!-check')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='go')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='vector-set-fixnum!')
Token(type='at', text='e-v')
Token(type='at', text='e-i')
Token(type='at', text='e-new')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-bytevector-ref-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-bits')
Token(type='at', text='e-bv')
Token(type='at', text='e-i')
Token(type='at', text='check-mutable?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='d')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='fxquotient')
Token(type='at', text='d')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bits')
Token(type='at', text='d')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='bytes')
Token(type='ob', text='(')
Token(type='at', text='fxquotient')
Token(type='at', text='d')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e-bv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-bv')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='check-mutable?')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-mutable-bytevector')
Token(type='at', text='type-mutable-bytevector')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-bytevector')
Token(type='at', text='type-bytevector')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='expr->index')
Token(type='at', text='e-i')
Token(type='at', text='bytes')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-bytevector-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bytes')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-bytevector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-immutable-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='$type-check')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='ob', text='(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bytes')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='mask-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-fixnum')
Token(type='cb', text=')')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='lc', text='; NB. add cannot overflow or change negative to positive when')
Token(type='lc', text='; low-order (log2 bytes) bits of fixnum value are zero, as')
Token(type='lc', text='; guaranteed by type-check above')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='bytes')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='e-i')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e-i')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bytes')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$bytevector-ref-check?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bits')
Token(type='at', text='e-bv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-bytevector-ref-check')
Token(type='at', text='e-bits')
Token(type='at', text='e-bv')
Token(type='at', text='e-i')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$bytevector-set!-check?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bits')
Token(type='at', text='e-bv')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-bytevector-ref-check')
Token(type='at', text='e-bits')
Token(type='at', text='e-bv')
Token(type='at', text='e-i')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-bytevector-fill')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='filler')
Token(type='ob', text='(')
Token(type='at', text='make-build-fill')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-bytes')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='at', text='uptr')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-fill')
Token(type='ob', text='(')
Token(type='at', text='build-unfix')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='filler')
Token(type='at', text='e-bv')
Token(type='at', text='e-bytes')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-make-bytevector')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='maybe-e-fill')
Token(type='cb', text=')')
Token(type='lc', text='; NB: caller must bind maybe-e-fill')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='maybe-e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#f')
Token(type='at', text='maybe-e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='at', text='10000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bytevector')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='at', text='maybe-e-fill')
Token(type='ob', text='(')
Token(type='at', text='build-bytevector-fill')
Token(type='at', text='t')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',n')
Token(type='cb', text=')')
Token(type='at', text='maybe-e-fill')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-bytes')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tbytes")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t-vec')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tvec")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e-length')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-bytes')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-vec')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-typed-object')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t-bytes')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bytevector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-vec')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-type/length')
Token(type='at', text='t-bytes')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-bytevector')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='at', text='maybe-e-fill')
Token(type='ob', text='(')
Token(type='at', text='build-bytevector-fill')
Token(type='at', text='t-vec')
Token(type='at', text='t-bytes')
Token(type='at', text='maybe-e-fill')
Token(type='cb', text=')')
Token(type='at', text='t-vec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='valid-length?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bignum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-bytevector-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='make-bytevector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-bytevector')
Token(type='at', text='e-length')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='-128')
Token(type='at', text='x')
Token(type='at', text='255')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-bytevector')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='make-bytevector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-bytevector')
Token(type='at', text='e-length')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-bytevector')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='bytevector-fill!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='build-bytevector-fill')
Token(type='at', text='e-bv')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-bv')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-bytevector')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='find-k')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bytes')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='4')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='8')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='type*')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='at', text='unsigned-32')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-8')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='at', text='unsigned-64')
Token(type='at', text='unsigned-32')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-8')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bytes/2')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='bytes')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='at', text='bytes/2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='bytes/2')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='type*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='bytes')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='type*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-chunk')
Token(type='at', text='k')
Token(type='at', text='n')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-shift')
Token(type='at', text='e')
Token(type='at', text='shift')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='shift')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',shift')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxmin')
Token(type='at', text='k')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='list-head')
Token(type='at', text='e*')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='constant-part')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='expression-part')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='expression-shift')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='mask?')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; no need to mask the high-order byte')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='k')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='expression-part')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='expression-part')
Token(type='ob', text='(')
Token(type='at', text='build-shift')
Token(type='at', text='expression-part')
Token(type='at', text='expression-shift')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='at', text='constant-part')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='expression-part')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',expression-part')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',constant-part')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',constant-part')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='k')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='constant-part')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='constant-part')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='expression-shift')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='expression-shift')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='k')
Token(type='at', text='e*')
Token(type='at', text='constant-part')
Token(type='at', text='expression-part')
Token(type='at', text='expression-shift')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='k')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='at', text='constant-part')
Token(type='ob', text='(')
Token(type='at', text='logand')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='expression-part')
Token(type='at', text='expression-shift')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='k')
Token(type='at', text='e*')
Token(type='at', text='constant-part')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='build-unfix')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='mask?')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='#xff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='expression-part')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='build-shift')
Token(type='at', text='expression-part')
Token(type='at', text='expression-shift')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='len')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='len')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bytevector')
Token(type='cb', text=')')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='len')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text=';  build and store k-octet (k = 4 on 32-bit machines, k = 8 on 64-bit')
Token(type='lc', text=';  machines) chunks, taking endianness into account.  for the last')
Token(type='lc', text=';  chunk, set k = 1, 2, 4, or 8 depending on the number of octets')
Token(type='lc', text=';  remaining, padding with zeros as necessary.')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='find-k')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',t')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-chunk')
Token(type='at', text='k')
Token(type='at', text='n')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='list-tail')
Token(type='at', text='e*')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='bytevector')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='-128')
Token(type='at', text='x')
Token(type='at', text='255')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-bytevector')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='bytevector')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='build-bytevector')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='byte-offset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='off')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='integer?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='exact?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text=',n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',off')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='bytevector-copy!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='bv1')
Token(type='at', text='off1')
Token(type='at', text='bv2')
Token(type='at', text='off2')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='$byte-copy!')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='byte-offset')
Token(type='at', text='off1')
Token(type='cb', text=')')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='byte-offset')
Token(type='at', text='off2')
Token(type='cb', text=')')
Token(type='at', text=',n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='bytevector-truncate!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='bv')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='len')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='len')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='bv')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',bv')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='len')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',bv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='bv')
Token(type='at', text='len')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',len')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',bv')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-type/length')
Token(type='at', text='len')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-bytevector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',bv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$bytevector-set-immutable!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='bv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='build-set-immutable!')
Token(type='at', text='bytevector-type-disp')
Token(type='at', text='bytevector-immutable-flag')
Token(type='cb', text=')')
Token(type='at', text='bv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='bv-index-offset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='offset-expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='offset-expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='%zero')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='offset-expr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='build-unfix')
Token(type='at', text='offset-expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='bv-offset-okay?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='logand')
Token(type='at', text='x')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-8-inline')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='handle-prim')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='3')
Token(type='at', text="'$bytevector-ref-check?")
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='#f')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-8-inline')
Token(type='at', text='bytevector-s8-ref')
Token(type='at', text='integer-8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-8-inline')
Token(type='at', text='bytevector-u8-ref')
Token(type='at', text='unsigned-8')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='#f')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-s8-ref')
Token(type='at', text='integer-8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-u8-ref')
Token(type='at', text='unsigned-8')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-s16-native-ref')
Token(type='at', text='integer-16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-u16-native-ref')
Token(type='at', text='unsigned-16')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-s32-native-ref')
Token(type='at', text='integer-32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-u32-native-ref')
Token(type='at', text='unsigned-32')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-s64-native-ref')
Token(type='at', text='integer-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-u64-native-ref')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-ieee-single-native-ref')
Token(type='at', text='single-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ref-inline')
Token(type='at', text='bytevector-ieee-double-native-ref')
Token(type='at', text='double-float')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='check-64?')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text="#'(")
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-set!')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='check-64?')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='at', text="#'body")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-s8-set!')
Token(type='at', text='integer-8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-u8-set!')
Token(type='at', text='unsigned-8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='$bytevector-set!')
Token(type='at', text='unsigned-8')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-s16-native-set!')
Token(type='at', text='integer-16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-u16-native-set!')
Token(type='at', text='unsigned-16')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-s32-native-set!')
Token(type='at', text='integer-32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-u32-native-set!')
Token(type='at', text='unsigned-32')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-s64-native-set!')
Token(type='at', text='integer-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-u64-native-set!')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-native-ieee-set!-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-val')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-set!')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='ob', text='(')
Token(type='at', text='build-$real->flonum')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-val')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ieee-set!-inline')
Token(type='at', text='bytevector-ieee-single-native-set!')
Token(type='at', text='single-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-native-ieee-set!-inline')
Token(type='at', text='bytevector-ieee-double-native-set!')
Token(type='at', text='double-float')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='p2?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='i')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='unaligned-integers')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='#,(')
Token(type='at', text='p2?')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-offset-okay?')
Token(type='at', text='e-offset')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='x')
Token(type='ob', text="'(")
Token(type='at', text='big')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='native-endianness')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-s16-ref')
Token(type='at', text='integer-16')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-u16-ref')
Token(type='at', text='unsigned-16')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-s24-ref')
Token(type='at', text='integer-24')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-u24-ref')
Token(type='at', text='unsigned-24')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-s32-ref')
Token(type='at', text='integer-32')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-u32-ref')
Token(type='at', text='unsigned-32')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-s40-ref')
Token(type='at', text='integer-40')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-u40-ref')
Token(type='at', text='unsigned-40')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-s48-ref')
Token(type='at', text='integer-48')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-u48-ref')
Token(type='at', text='unsigned-48')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-s56-ref')
Token(type='at', text='integer-56')
Token(type='at', text='7')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-u56-ref')
Token(type='at', text='unsigned-56')
Token(type='at', text='7')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-s64-ref')
Token(type='at', text='integer-64')
Token(type='at', text='7')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-ref-inline')
Token(type='at', text='bytevector-u64-ref')
Token(type='at', text='unsigned-64')
Token(type='at', text='7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-ieee-ref-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='unaligned-floats')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-offset-okay?')
Token(type='at', text='e-offset')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='native-endianness')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='at', text='#f')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-ieee-ref-inline')
Token(type='at', text='bytevector-ieee-single-ref')
Token(type='at', text='single-float')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-ieee-ref-inline')
Token(type='at', text='bytevector-ieee-double-ref')
Token(type='at', text='double-float')
Token(type='at', text='7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='check-64?')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text="#'(")
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='unaligned-integers')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='mask')
Token(type='ob', text='(')
Token(type='at', text='bv-offset-okay?')
Token(type='at', text='e-offset')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='x')
Token(type='ob', text="'(")
Token(type='at', text='big')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='native-endianness')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-set!')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-swap-object-set!')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-syntax')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='datum')
Token(type='at', text='check-64?')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='at', text="#'body")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-s16-set!')
Token(type='at', text='integer-16')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-u16-set!')
Token(type='at', text='unsigned-16')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-s24-set!')
Token(type='at', text='integer-24')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-u24-set!')
Token(type='at', text='unsigned-24')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-s32-set!')
Token(type='at', text='integer-32')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#f')
Token(type='at', text='bytevector-u32-set!')
Token(type='at', text='unsigned-32')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-s40-set!')
Token(type='at', text='integer-40')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-u40-set!')
Token(type='at', text='unsigned-40')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-s48-set!')
Token(type='at', text='integer-48')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-u48-set!')
Token(type='at', text='unsigned-48')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-s56-set!')
Token(type='at', text='integer-56')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-u56-set!')
Token(type='at', text='unsigned-56')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-s64-set!')
Token(type='at', text='integer-64')
Token(type='at', text='7')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-int-set!-inline')
Token(type='at', text='#t')
Token(type='at', text='bytevector-u64-set!')
Token(type='at', text='unsigned-64')
Token(type='at', text='7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-ieee-set!-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='unaligned-floats')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-offset-okay?')
Token(type='at', text='e-offset')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='native-endianness')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-set!')
Token(type='at', text="'type")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='ob', text='(')
Token(type='at', text='build-$real->flonum')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-value')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-ieee-set!-inline')
Token(type='at', text='bytevector-ieee-single-set!')
Token(type='at', text='single-float')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-ieee-set!-inline')
Token(type='at', text='bytevector-ieee-double-set!')
Token(type='at', text='double-float')
Token(type='at', text='7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='anyint-ref-helper')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='mask')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='unaligned-integers')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-offset-okay?')
Token(type='at', text='e-offset')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='x')
Token(type='ob', text="'(")
Token(type='at', text='big')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-ref')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='native-endianness')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='type')
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-anyint-ref-inline')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='type8')
Token(type='at', text='type16')
Token(type='at', text='type32')
Token(type='at', text='type64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-eness')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e-eness')
Token(type='ob', text=',(')
Token(type='at', text='build-object-ref')
Token(type='at', text='#f')
Token(type='at', text="'type8")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='anyint-ref-helper')
Token(type='at', text="'type16")
Token(type='at', text='#b1')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='anyint-ref-helper')
Token(type='at', text="'type32")
Token(type='at', text='#b11')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='anyint-ref-helper')
Token(type='at', text="'type64")
Token(type='at', text='#b111')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-anyint-ref-inline')
Token(type='at', text='bytevector-sint-ref')
Token(type='at', text='integer-8')
Token(type='at', text='integer-16')
Token(type='at', text='integer-32')
Token(type='at', text='integer-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-anyint-ref-inline')
Token(type='at', text='bytevector-uint-ref')
Token(type='at', text='unsigned-8')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-32')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='anyint-set!-helper')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='mask')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='unaligned-integers')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-offset-okay?')
Token(type='at', text='e-offset')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='x')
Token(type='ob', text="'(")
Token(type='at', text='big')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='native-endianness')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-object-set!')
Token(type='at', text='type')
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-swap-object-set!')
Token(type='at', text='type')
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='define-bv-anyint-set!-inline')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='type8')
Token(type='at', text='type16')
Token(type='at', text='type32')
Token(type='at', text='type64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='at', text='e-eness')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bv-index-offset')
Token(type='at', text='e-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e-eness')
Token(type='ob', text=',(')
Token(type='at', text='build-object-set!')
Token(type='at', text="'type8")
Token(type='at', text='e-bv')
Token(type='at', text='e-index')
Token(type='at', text='imm-offset')
Token(type='at', text='e-value')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='anyint-set!-helper')
Token(type='at', text="'type16")
Token(type='at', text='1')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='anyint-set!-helper')
Token(type='at', text="'type32")
Token(type='at', text='3')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='anyint-set!-helper')
Token(type='at', text="'type64")
Token(type='at', text='7')
Token(type='at', text='e-bv')
Token(type='at', text='e-offset')
Token(type='at', text='e-value')
Token(type='at', text='e-eness')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-bv-anyint-set!-inline')
Token(type='at', text='bytevector-sint-set!')
Token(type='at', text='integer-8')
Token(type='at', text='integer-16')
Token(type='at', text='integer-32')
Token(type='at', text='integer-64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-bv-anyint-set!-inline')
Token(type='at', text='bytevector-uint-set!')
Token(type='at', text='unsigned-8')
Token(type='at', text='unsigned-16')
Token(type='at', text='unsigned-32')
Token(type='at', text='unsigned-64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='byte-count')
Token(type='at', text='e-n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-n')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='integer?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='exact?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e-n')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='byte-offset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-off')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='integer?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='exact?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='at', text='d')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',e-off')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='string-copy!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bv1')
Token(type='at', text='e-off1')
Token(type='at', text='e-bv2')
Token(type='at', text='e-off2')
Token(type='at', text='e-n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='$byte-copy!')
Token(type='at', text=',e-bv1')
Token(type='ob', text=',(')
Token(type='at', text='byte-offset')
Token(type='at', text='e-off1')
Token(type='cb', text=')')
Token(type='at', text=',e-bv2')
Token(type='ob', text=',(')
Token(type='at', text='byte-offset')
Token(type='at', text='e-off2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='byte-count')
Token(type='at', text='e-n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='string-truncate!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-str')
Token(type='at', text='e-len')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum-constant?')
Token(type='at', text='e-len')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='len')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-len')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='len')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='string')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-str')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-str')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='string-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='len')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-string')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-str')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-str')
Token(type='at', text='e-len')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e-len')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='string')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-str')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='string-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-type/length')
Token(type='at', text='e-len')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-string')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-str')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-string-fill')
Token(type='ob', text='(')
Token(type='at', text='make-build-fill')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-make-string')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='lc', text='; NB: caller must bind e-fill')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#f')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='at', text='10000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='string')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bytes')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-string')
Token(type='cb', text=')')
Token(type='at', text='bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='string-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-string')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-string-fill')
Token(type='at', text='t')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',bytes')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-bytes')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tsize")
Token(type='at', text="'uptr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t-str')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tstr")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e-length')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='string')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-bytes')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='e-length')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-str')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-typed-object')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t-bytes')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-string')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-str')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='string-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-type/length')
Token(type='at', text='t-bytes')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-string')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-string-fill')
Token(type='at', text='t-str')
Token(type='at', text='t-bytes')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='default-fill')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ptr->imm')
Token(type='ch', text='#\\nul')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='make-string')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-string')
Token(type='at', text='e-length')
Token(type='at', text='default-fill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-string')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bignum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-string-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='make-string')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-string')
Token(type='at', text='e-length')
Token(type='at', text='default-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='char?')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-string')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='string-fill!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-str')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-str')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-string-fill')
Token(type='at', text='e-str')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logxor')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-str')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='string-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-string')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='string-char-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fxvector-fill')
Token(type='ob', text='(')
Token(type='at', text='make-build-fill')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-assert')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-make-fxvector')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='lc', text='; NB: caller must bind e-fill')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#f')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='at', text='10000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='fxvector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bytes')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-fxvector')
Token(type='cb', text=')')
Token(type='at', text='bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-fxvector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-fxvector-fill')
Token(type='at', text='t')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',bytes')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='lc', text='; fixnum length doubles as byte count')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-fxv')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tfxv")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e-length')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='fxvector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-fxv')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-typed-object')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e-length')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-fxvector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-fxv')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-type/length')
Token(type='at', text='e-length')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-fxvector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-fxvector-fill')
Token(type='at', text='t-fxv')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='default-fill')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='make-fxvector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-fxvector')
Token(type='at', text='e-length')
Token(type='at', text='default-fill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-fxvector')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bignum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='maximum-fxvector-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='make-fxvector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-fxvector')
Token(type='at', text='e-length')
Token(type='at', text='default-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='fixnum?')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-fxvector')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='fxvector-fill!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-fxv')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-fxv')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fxvector-fill')
Token(type='at', text='e-fxv')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logxor')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-fxv')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-fxvector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fxvector-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-vector-fill')
Token(type='ob', text='(')
Token(type='at', text='make-build-fill')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-assert')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-make-vector')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='lc', text='; NB: caller must bind e-fill')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='no-need-to-bind?')
Token(type='at', text='#f')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='0')
Token(type='at', text='x')
Token(type='at', text='10000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant-value')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bytes')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-vector')
Token(type='cb', text=')')
Token(type='at', text='bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-length-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-vector-fill')
Token(type='at', text='t')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',bytes')
Token(type='cb', text=')')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='lc', text='; fixnum length doubles as byte count')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-vec')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tvec")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e-length')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-vec')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-typed-object')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e-length')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-vec')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-type/length')
Token(type='at', text='e-length')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-vector-fill')
Token(type='at', text='t-vec')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='default-fill')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='make-vector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-vector')
Token(type='at', text='e-length')
Token(type='at', text='default-fill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-vector')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='>=')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='make-vector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-vector')
Token(type='at', text='e-length')
Token(type='at', text='default-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='valid-length?')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='fixnum?')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-make-vector')
Token(type='at', text='e-length')
Token(type='at', text='e-fill')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-assert')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$make-eqhash-vector')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-vec')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tvec")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t-idx')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t-idx")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-idx')
Token(type='at', text=',e-length')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-idx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='ob', text=',(')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-vec')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-typed-object')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',t-idx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-vec')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-type/length')
Token(type='at', text='t-idx')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t-idx')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',t-idx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t-vec')
Token(type='at', text=',t-idx')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t-idx')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-idx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t-vec')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$continuation?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-closure')
Token(type='at', text='type-closure')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-continuation-code')
Token(type='at', text='type-continuation-code')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='code-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$continuation-stack-length')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$continuation-stack-clength')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='translate')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-clength-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$continuation-return-code')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='return-address-toplink-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$continuation-return-offset')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='return-address-toplink-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='return-address-toplink-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$continuation-return-livemask')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='return-address-livemask-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$continuation-stack-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-k')
Token(type='at', text='e-i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-k')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='translate')
Token(type='at', text='e-i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$foreign-char?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ptr->imm')
Token(type='ob', text='(')
Token(type='at', text='integer->char')
Token(type='at', text='#x100')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$foreign-wchar?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='wchar-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ptr->imm')
Token(type='ob', text='(')
Token(type='at', text='integer->char')
Token(type='at', text='#x10000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$integer-8?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='8')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'$integer-8?")
Token(type='st', text='"unexpected fixnum-bits"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x80')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x180')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$integer-16?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'$integer-16?")
Token(type='st', text='"unexpected fixnum-bits"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x8000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x18000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$integer-24?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='24')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'$integer-24?")
Token(type='st', text='"unexpected fixnum-bits"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x800000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x1800000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$integer-32?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x80000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x180000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-positive-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='<=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#xffffffff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-negative-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='>=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#x-80000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$integer-40?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x8000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x18000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-positive-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='<=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#xffffffffff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-negative-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='>=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#x-8000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$integer-48?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x800000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x1800000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-positive-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='<=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#xffffffffffff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-negative-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='>=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#x-800000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$integer-56?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x80000000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='#x180000000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-positive-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='<=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#xffffffffffffff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-negative-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='>=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#x-80000000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$integer-64?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text="'$integer-64?")
Token(type='st', text='"unexpected fixnum-bits"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-positive-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='<=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#xffffffffffffffff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-signed-bignum')
Token(type='at', text='type-negative-bignum')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='>=')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text='#x-8000000000000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='char->integer')
Token(type='lc', text='; assumes types are set up so that fixnum tag will be right after the shift')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-char')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-char->integer')
Token(type='at', text='e-char')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='char->integer')
Token(type='lc', text='; assumes types are set up so that fixnum tag will be right after the shift')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-char')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-char')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-char')
Token(type='at', text='type-char')
Token(type='at', text=',e-char')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',e-char')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='char-data-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-libcall')
Token(type='at', text='#t')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='char->integer')
Token(type='at', text='e-char')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='char-')
Token(type='lc', text='; assumes fixnum is zero')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='char-data-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='integer->char')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-int')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-integer->char')
Token(type='at', text='e-int')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='boolean=?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce-equality')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='symbol=?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='.')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reduce-equality')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='moi')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e')
Token(type='at', text='flag')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-type-flags-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='record-type-opaque?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='rtd-opaque')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='record-type-sealed?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='rtd-sealed')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='record-type-generative?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='rtd-generative')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-record?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-record')
Token(type='at', text='type-record')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-not')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logtest')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-type-flags-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='rtd-opaque')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-sealed-isa?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-rtd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-unsealed-isa?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-assigned-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-typed-object')
Token(type='at', text='type-typed-object')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='typed-object-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t')
Token(type='at', text=',e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-record')
Token(type='at', text='type-record')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-type-parent-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t')
Token(type='at', text=',e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='record?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-record?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-type-sealed?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-sealed-isa?')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-unsealed-isa?')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='r6rs:record?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-record?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='record?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-record?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-rtd')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='record-type-sealed?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-sealed-isa?')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-unsealed-isa?')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='$sealed-record?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-sealed-isa?')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='eq-hashtable?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rtd')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"hashtable-types.ss"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor')
Token(type='at', text='eq-ht')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-rtd')
Token(type='ob', text='`(')
Token(type='at', text='quote')
Token(type='at', text=',rtd')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='record-type-sealed?')
Token(type='at', text='rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-sealed-isa?')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-unsealed-isa?')
Token(type='at', text='e')
Token(type='at', text='e-rtd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='gensym?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-and')
Token(type='ob', text='(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-symbol')
Token(type='at', text='type-symbol')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-name-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-pair')
Token(type='at', text='type-pair')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-make-symbol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-symbol')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-symbol')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-name-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sunbound')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-pvalue-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='nonprocedure-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-plist-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-splist-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-hash-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-pname')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-pair')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-pname')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-make-symbol')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='gensym')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-make-symbol')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-pname')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e-pname')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-pname')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-pname')
Token(type='at', text='e-uname')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='2')
Token(type='at', text='gensym')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-make-symbol')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-pname')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='constant?')
Token(type='at', text='string?')
Token(type='at', text='e-pname')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go')
Token(type='at', text='e-pname')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-pname')
Token(type='at', text='e-uname')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='symbol->string')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-sym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e-name')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e-sym')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-name-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e-name')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-pair')
Token(type='at', text='type-pair')
Token(type='at', text=',e-name')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',e-name')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-name')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%primcall')
Token(type='at', text='#f')
Token(type='at', text='sexpr')
Token(type='at', text='$gensym->pretty-name')
Token(type='at', text=',e-sym')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$fxaddress')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='log2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='typemod')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='>')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-factor')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$set-timer')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='build-fix')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%trap')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%trap')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='directory-separator?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-feature')
Token(type='at', text='windows')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-simple-or')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ptr->imm')
Token(type='ch', text='#\\/')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ptr->imm')
Token(type='ch', text='#\\\\')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='ptr->imm')
Token(type='ch', text='#\\/')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-cdrs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='add-cdrs')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='list-ref')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ls')
Token(type='at', text='e-n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-n')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='d')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='add-cdrs')
Token(type='at', text='d')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='list-tail')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-ls')
Token(type='at', text='e-n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-n')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='d')
Token(type='at', text='4')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-cdrs')
Token(type='at', text='d')
Token(type='at', text='e-ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go0')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='subtype')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='$make-eq-hashtable')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='hashtable-default-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='subtype')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='go1')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-size')
Token(type='at', text='subtype')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L7')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e-size')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='quote')
Token(type='at', text=',d')
Token(type='cb', text=')')
Token(type='lc', text='; d must be a fixnum? for $hashtable-size-minlen and a')
Token(type='lc', text='; target-machine fixnum for cross compiling')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='target-fixnum?')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='d')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%primcall')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='$make-eq-hashtable')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='ob', text='(')
Token(type='at', text='$hashtable-size->minlen')
Token(type='at', text='d')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fix')
Token(type='at', text='subtype')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='make-eq-hashtable')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go0')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='eq-hashtable-subtype-normal')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go1')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-size')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='eq-hashtable-subtype-normal')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='make-weak-eq-hashtable')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go0')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='eq-hashtable-subtype-weak')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go1')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-size')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='eq-hashtable-subtype-weak')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='make-ephemeron-eq-hashtable')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go0')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='eq-hashtable-subtype-ephemeron')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='go1')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='e-size')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='eq-hashtable-subtype-ephemeron')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='def-put-x')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='at', text='x-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='name')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bop')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e-bop')
Token(type='at', text='e-x')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-prim')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='3')
Token(type='at', text="'x-length")
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bop')
Token(type='at', text='e-x')
Token(type='at', text='e-start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='bind')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='e-x')
Token(type='at', text='e-start')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e-bop')
Token(type='at', text='e-x')
Token(type='at', text='e-start')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='handle-prim')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='3')
Token(type='at', text="'x-length")
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='e-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e-start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e-bop')
Token(type='at', text='e-x')
Token(type='at', text='e-start')
Token(type='at', text='e-count')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-libcall')
Token(type='at', text='#f')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='name')
Token(type='at', text='e-bop')
Token(type='at', text='e-x')
Token(type='at', text='e-start')
Token(type='at', text='e-count')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-put-x')
Token(type='at', text='put-bytevector')
Token(type='at', text='bytevector-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-put-x')
Token(type='at', text='put-bytevector-some')
Token(type='at', text='bytevector-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-put-x')
Token(type='at', text='put-string')
Token(type='at', text='string-length')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='def-put-x')
Token(type='at', text='put-string-some')
Token(type='at', text='string-length')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$read-time-stamp-counter')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='architecture')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x86')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; returns low-order 32 bits in eax, high-order in edx')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%eax')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-kill*')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%edx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%read-time-stamp-counter')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='u32xu32->ptr')
Token(type='at', text='%edx')
Token(type='at', text='%eax')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x86_64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; returns low-order 32 bits in rax, high-order in rdx')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%rax')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-kill*')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%rdx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%read-time-stamp-counter')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='unsigned->ptr')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%rdx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%rax')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='arm32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unsigned->ptr')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='read-time-stamp-counter')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='ppc32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-hi')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t-hi")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t-hi')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-kill*')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%real-zero')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%read-time-stamp-counter')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='u32xu32->ptr')
Token(type='at', text='t-hi')
Token(type='at', text='%real-zero')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-inline')
Token(type='at', text='3')
Token(type='at', text='$read-performance-monitoring-counter')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='architecture')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x86')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%eax')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-kill*')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%edx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%read-performance-monitoring-counter')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='u32xu32->ptr')
Token(type='at', text='%edx')
Token(type='at', text='%eax')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x86_64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%rax')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-kill*')
Token(type='ob', text='(')
Token(type='at', text='reg-list')
Token(type='at', text='%rdx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%read-performance-monitoring-counter')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='unsigned->ptr')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%rdx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%rax')
Token(type='cb', text=')')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='arm32')
Token(type='at', text='ppc32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unsigned->ptr')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='read-performance-monitoring-counter')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; expand-primitives module')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-place-overflow-and-trap')
Token(type='at', text=':')
Token(type='at', text='L9')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L9.5')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='repeat?')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='update-label!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='orig-oc')
Token(type='ob', text='(')
Token(type='at', text='local-label-overflow-check')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='orig-tc')
Token(type='ob', text='(')
Token(type='at', text='local-label-trap-check')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='oc')
Token(type='at', text='orig-oc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='tc')
Token(type='at', text='orig-tc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='repeat?')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-overflow-check-set!')
Token(type='at', text='l')
Token(type='at', text='oc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-trap-check-set!')
Token(type='at', text='l')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='combine-seq')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='no')
Token(type='cb', text=')')
Token(type='at', text='y')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='yes')
Token(type='cb', text=')')
Token(type='at', text="'yes")
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='y')
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='at', text="'maybe")
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='strip-redundant-overflow-and-trap')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L9.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L9.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='goto')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='label')
Token(type='at', text='oc?')
Token(type='at', text='tc?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='goto*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='well-behaved-goto?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-oc?')
Token(type='at', text='goto')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='local-label-overflow-check')
Token(type='ob', text='(')
Token(type='at', text='goto-label')
Token(type='at', text='goto')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-tc?')
Token(type='at', text='goto')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='local-label-trap-check')
Token(type='ob', text='(')
Token(type='at', text='goto-label')
Token(type='at', text='goto')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='oc?')
Token(type='at', text='tc?')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='oc?')
Token(type='at', text='tc?')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='#t')
Token(type='at', text='tc?')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='oc?')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='oc?')
Token(type='at', text='#t')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='tc?')
Token(type='at', text='e')
Token(type='ob', text='`(')
Token(type='at', text='trap-check')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='at', text='oc?')
Token(type='at', text='#f')
Token(type='at', text='ioc')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info0')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='at', text='oc?')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-type')
Token(type='at', text='info0')
Token(type='cb', text=')')
Token(type='at', text="'library")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='libspec-does-not-expect-headroom?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library")
Token(type='ob', text='(')
Token(type='at', text='libspec->headroom-libspec')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='at', text='oc?')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-overflow-check-set!')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='local-label-overflow-check')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='oc?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-trap-check-set!')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='local-label-trap-check')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tc?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='goto*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-goto')
Token(type='at', text='l')
Token(type='at', text='oc?')
Token(type='at', text='tc?')
Token(type='cb', text=')')
Token(type='at', text='goto*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ir')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='ir')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='well-behaved-goto?')
Token(type='at', text='goto*')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='insert-loop-traps')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L9')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L9.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text='#f')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='has-no-headroom-libcall?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='e?')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L9.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-type')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text="'library")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='libspec-has-does-not-expect-headroom-version?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L9.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='request-trap-check')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='generate-interrupt-trap')
Token(type='cb', text=')')
Token(type='at', text="'yes")
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-trap-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='overflow?')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='request-trap-check')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='trap-check')
Token(type='at', text=',overflow?')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text="'no")
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='at', text='oc0')
Token(type='at', text='tc0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e1')
Token(type='at', text='oc1')
Token(type='at', text='tc1')
Token(type='cb', text=']')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='combine-seq')
Token(type='at', text='oc0')
Token(type='at', text='oc1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='combine-seq')
Token(type='at', text='tc0')
Token(type='at', text='tc1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='tail?')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text="'no")
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='local-label?')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-overflow-check')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-trap-check')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='at', text='oc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text="'no")
Token(type='at', text='oc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text="'no")
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='at', text='oc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text="'loop")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text="'no")
Token(type='at', text='oc*')
Token(type='cb', text=')')
Token(type='at', text='request-trap-check')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',e?')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='at', text='oc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e?')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='e?')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e?')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='e?')
Token(type='at', text="'no")
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; to save code space, we skip trap check for error calls under assumption trap checks will')
Token(type='lc', text="; be made by the error handler.  if not, could get a uninterruptible hard loop...c'est la vie")
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='wrap-tc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='overflow?')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='info-call-error?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text='tc')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='call')
Token(type='ob', text='(')
Token(type='at', text='add-trap-check')
Token(type='at', text='overflow?')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='noc?')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text='oc')
Token(type='at', text='oc*')
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='tail?')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='info-call-error?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='debug-level')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='noc?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='call')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',e?')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-call-pariah?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='wrap-tc')
Token(type='at', text='#t')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='call')
Token(type='at', text="'no")
Token(type='at', text='request-trap-check')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='noc?')
Token(type='ob', text='(')
Token(type='at', text='has-no-headroom-libcall?')
Token(type='at', text='e?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='libspec-does-not-expect-headroom?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='call')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library")
Token(type='ob', text='(')
Token(type='at', text='libspec->does-not-expect-headroom-libspec')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-call-pariah?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='wrap-tc')
Token(type='at', text='#t')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='call')
Token(type='at', text="'no")
Token(type='at', text='request-trap-check')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='call')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',e?')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-call-pariah?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',(')
Token(type='at', text='wrap-tc')
Token(type='at', text='#f')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='call')
Token(type='at', text="'yes")
Token(type='at', text='request-trap-check')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='at', text='oc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text="'no")
Token(type='at', text='oc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text="'no")
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text="'loop")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='tail?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='tc')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='add-trap-check')
Token(type='at', text='#t')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='oc')
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='at', text='oc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='at', text=',e')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text='oc')
Token(type='at', text='oc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text='tc')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='update-label!')
Token(type='at', text='l')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='at', text='->')
Token(type='at', text='lvalue')
Token(type='at', text='oc0')
Token(type='at', text='tc0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='at', text='oc1')
Token(type='at', text='tc1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='combine-seq')
Token(type='at', text='oc0')
Token(type='at', text='oc1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='combine-seq')
Token(type='at', text='tc0')
Token(type='at', text='tc1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvlet')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='ob', text=',[')
Token(type='at', text='body*')
Token(type='at', text='oc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='lc', text='; claiming mvlet always makes a nontail call')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text="'yes")
Token(type='at', text='request-trap-check')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e1')
Token(type='at', text='oc1')
Token(type='at', text='tc1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e2')
Token(type='at', text='oc2')
Token(type='at', text='tc2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; claiming mvcall always makes a nontail call')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='at', text="'yes")
Token(type='at', text='request-trap-check')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e*')
Token(type='at', text='oc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text='oc')
Token(type='at', text='oc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='combine-seq')
Token(type='at', text='tc')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='at', text='oc0')
Token(type='at', text='tc0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='at', text='oc1')
Token(type='at', text='tc1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='at', text='oc2')
Token(type='at', text='tc2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='combine-branch')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='l')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='yes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='r')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='at', text="'yes")
Token(type='at', text="'maybe")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='no')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='r')
Token(type='at', text="'no")
Token(type='cb', text=')')
Token(type='at', text="'no")
Token(type='at', text="'maybe")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='l')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='oc')
Token(type='ob', text='(')
Token(type='at', text='combine-seq')
Token(type='at', text='oc0')
Token(type='ob', text='(')
Token(type='at', text='combine-branch')
Token(type='at', text='oc1')
Token(type='at', text='oc2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tc')
Token(type='ob', text='(')
Token(type='at', text='combine-seq')
Token(type='at', text='tc0')
Token(type='ob', text='(')
Token(type='at', text='combine-branch')
Token(type='at', text='tc1')
Token(type='at', text='tc2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='wrap-oc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ocx')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='ocx')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='oc')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='wrap-tc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tcx')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='tcx')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='tc')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-trap-check')
Token(type='at', text='#t')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='ob', text=',(')
Token(type='at', text='wrap-oc')
Token(type='at', text='oc1')
Token(type='ob', text='(')
Token(type='at', text='wrap-tc')
Token(type='at', text='tc1')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='wrap-oc')
Token(type='at', text='oc2')
Token(type='ob', text='(')
Token(type='at', text='wrap-tc')
Token(type='at', text='tc2')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='at', text='#f')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='at', text='oc0')
Token(type='at', text='tc0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='at', text='oc1')
Token(type='at', text='tc1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='combine-seq')
Token(type='at', text='oc0')
Token(type='at', text='oc1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='combine-seq')
Token(type='at', text='tc0')
Token(type='at', text='tc1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='force-overflow?')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='repeat?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; should always be initialized and/or reset to #f')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='ob', text=',(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='oc')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='repeat?')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='repeat?')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='strip-redundant-overflow-and-trap')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='tc')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-trap-check')
Token(type='at', text='#t')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='force-overflow?')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='oc')
Token(type='at', text="'yes")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text="; punting badly here under assumption that we currently can't even generate")
Token(type='lc', text="; misbehaved gotos, i.e., paths ending in a goto that don't do an overflow")
Token(type='lc', text='; or trap check where the target label expects it to have been done.  if we')
Token(type='lc', text='; ever violate this assumption on a regular basis, might want to revisit and')
Token(type='lc', text='; do somthing better.')
Token(type='lc', text='; ... test punt case by commenting out above for all but library.ss')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text='#f')
Token(type='ob', text=',(')
Token(type='at', text='insert-loop-traps')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='cl*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-libspec')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='libspec-does-not-expect-headroom?')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='cl*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-rebind-on-ruined-path')
Token(type='at', text=':')
Token(type='at', text='L9.5')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L9.5')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='prefix*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-prefix!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='uvar-in-prefix?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-in-prefix!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='prefix*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='prefix*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-prefix*!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='add-prefix!')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='reset-prefix*!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='orig-prefix*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='at', text='prefix*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='diff*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='ls')
Token(type='at', text='orig-prefix*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='prefix*')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='at', text='diff*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-in-prefix!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='diff*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='gather-refs')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L9.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L9.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='uvar-in-prefix?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-in-prefix!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='e')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',e?')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='info-call-error?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',e?')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='prefix*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='gather-refs')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',t*')
Token(type='at', text=',x*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-assigned?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-prefix!')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-prefix*!')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='orig-prefix*')
Token(type='at', text='prefix*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e1-diff-prefix*')
Token(type='ob', text='(')
Token(type='at', text='reset-prefix*!')
Token(type='at', text='orig-prefix*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-prefix*!')
Token(type='at', text='e1-diff-prefix*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='e1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='prefix*')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='ob', text=',(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-finalize-loops')
Token(type='at', text=':')
Token(type='at', text='L9.5')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L9.75')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='ob', text='(')
Token(type='at', text='uvar-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='Ltop')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',x')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop.x*')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='x')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='Ltop.x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='Ltop.x*')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-optimize-pred-in-value')
Token(type='at', text=':')
Token(type='at', text='L9.75')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L9.75')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='bar')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='bool?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='bool?')
Token(type='at', text="'wrapper")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L9.75')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dont')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-values')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='e')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='bool?')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Value')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-values')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='ir')
Token(type='at', text="'value")
Token(type='cb', text=')')
Token(type='at', text='bar')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='ob', text='[')
Token(type='at', text='value?')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='ir')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='dont')
Token(type='at', text=':')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='at', text='bool?')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='at', text='bool?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='at', text='bool?')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='bool?')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='pred-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='at', text='dont')
Token(type='at', text=':')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='at', text='bool1?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='at', text='bool2?')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='at', text='value?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='bool1?')
Token(type='at', text='bool2?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='at', text="'wrapper")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='ob', text=',(')
Token(type='at', text='bar')
Token(type='at', text='e1')
Token(type='at', text='bool1?')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bar')
Token(type='at', text='e2')
Token(type='at', text='bool2?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-remove-complex-opera*')
Token(type='at', text=':')
Token(type='at', text='L9.75')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L10')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; remove-complex-opera* cannot assume that assigned uvars and')
Token(type='lc', text='; (mrefs at this point) are immutable.  it must take this into')
Token(type='lc', text='; account and avoid possible interleaved subexpression evaluation')
Token(type='lc', text='; for calls and inline forms.  it can do so by removing all lvalues')
Token(type='lc', text='; as call/inline subexpressions, or it can be more selective and')
Token(type='lc', text="; allow them to remain when doing so can't cause any problems.")
Token(type='lc', text='; for example, (<lvalue1> <lvalue2>) can be left alone, and both')
Token(type='lc', text=';')
Token(type='lc', text='; ((begin e <lvalue1>) <lvalue2>) => (begin e (<lvalue1> <lvalue2>))')
Token(type='lc', text=';')
Token(type='lc', text='; and')
Token(type='lc', text=';')
Token(type='lc', text='; (<lvalue1> (begin e <lvalue2>)) => (begin e (<lvalue1> <lvalue2>))')
Token(type='lc', text=';')
Token(type='lc', text='; are safe transformations, but')
Token(type='lc', text=';')
Token(type='lc', text='; ((begin e1 <lvalue1>) (begin e2 <lvalue2>))')
Token(type='lc', text=';')
Token(type='lc', text='; cannot be turned into')
Token(type='lc', text=';')
Token(type='lc', text='; (begin e1 e2 (<lvalue1> <lvalue2>)).')
Token(type='lc', text=';')
Token(type='lc', text='; NB: remove-complex-opera* produces set! forms rather than let bindings')
Token(type='lc', text='; since the former (but not the latter) can be pushed into both branches')
Token(type='lc', text='; of an if without causing potentially exponential code growth')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-tmp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='np-languages')
Token(type='at', text='make-tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Ref')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='var?')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='ir')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='ir')
Token(type='at', text='tmp')
Token(type='cb', text=')')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Lvalue?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L10')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='at', text=',lvalue')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Triv*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='lvalue-setup*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rt*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='setup*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='setup*')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='lvalue-setup*')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='rt*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='t-setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='lvalue-setup*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='lvalue-setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='t-setup*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue?')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='lc', text="; uvar's are singly assigned")
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-assigned?')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='t-setup*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='t')
Token(type='at', text='rt*')
Token(type='cb', text=')')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='lvalue-setup*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='t')
Token(type='at', text='rt*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='t-setup*')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-seq*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='at', text='build-seq')
Token(type='at', text='y')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L10')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-seq')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',x')
Token(type='at', text=',y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='ir')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L10')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='at', text=',rhs')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='lc', text='; sets lvalue to void. otherwise, the lvalue we entered with (which')
Token(type='lc', text='; might be referenced downstream) is never set and hence fails in the live')
Token(type='lc', text='; analysis where it is live all the way out of the function.')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#t')
Token(type='at', text="'object")
Token(type='at', text="'$oops")
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"returned ~r values to single value return context"')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected Rhs expression ~s"')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='local*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='nodups')
Token(type='at', text='x*')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='lvalue-okay?')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='lvalue-okay?')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-assigned?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='%zero')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='x')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='at', text='lvalue-okay?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x1')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Ref')
Token(type='at', text='e1')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x2')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Ref')
Token(type='at', text='e2')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='t')
Token(type='at', text='setup*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='x*')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='nodups')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='lvalue')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='ir')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='setup*')
Token(type='at', text='e*')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e0')
Token(type='at', text='values')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t')
Token(type='at', text='setup*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e0')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L10')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='ir')
Token(type='at', text='tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',e1*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv*')
Token(type='at', text='e1*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t1*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='e')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='setup*')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',e0?')
Token(type='at', text=',e1*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='e0?')
Token(type='ob', text='(')
Token(type='at', text='Triv*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e0?')
Token(type='at', text='e1*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='cdr')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv*')
Token(type='at', text='e1*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text='#f')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='at', text=',e0')
Token(type='at', text=',e1*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e0')
Token(type='at', text='e1*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='cdr')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv*')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e0')
Token(type='at', text='values')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e0')
Token(type='at', text='values')
Token(type='at', text='->')
Token(type='at', text='e0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lvalue')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='lvalue')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; must put lvalue setup* first to avoid potentially interleaved argument')
Token(type='lc', text='; evaluation in, e.g.:')
Token(type='lc', text=';')
Token(type='lc', text=';  (let ([p1 (cons 0 1)] [p2 (cons 0 2)])')
Token(type='lc', text=';    (let ([x (cons 0 3)])')
Token(type='lc', text=';      (set-car!')
Token(type='lc', text=';        (begin (set-car! x p1) (car x))')
Token(type='lc', text=';        (begin (set-car! x p2) (car x)))')
Token(type='lc', text=';      (eq? (car p1) p2)))')
Token(type='lc', text=';  ; after expand-primitives (essentially):')
Token(type='lc', text=';   => (let ([p1 (cons 0 1)] [p2 (cons 0 2)])')
Token(type='lc', text=';        (let ([x (cons 0 3)])')
Token(type='lc', text=';          (set!')
Token(type='lc', text=';            ,(%mref (begin (set! ,(%mref x 0) p1) ,(%mref x 0)) 0)')
Token(type='lc', text=';            (begin (set! ,(%mref x 0) p2) ,(%mref x 0)))')
Token(type='lc', text=';          (eq? ,(%mref p1 0) p2)))')
Token(type='lc', text=';  ; okay:')
Token(type='lc', text=';   => (let ([p1 (cons 0 1)] [p2 (cons 0 2)])')
Token(type='lc', text=';        (let ([x (cons 0 3)])')
Token(type='lc', text=';         ; setup* for lvalue:')
Token(type='lc', text=';          (set! ,(%mref x 0) p1)')
Token(type='lc', text=';          (set! t ,(%mref x 0))')
Token(type='lc', text=';         ; setup* for e')
Token(type='lc', text=';          (set! ,(%mref x 0) p2)')
Token(type='lc', text=';          (set!  ,(%mref t 0) ,(%mref x 0))')
Token(type='lc', text=';          (eq? ,(%mref p1 0) p2)))')
Token(type='lc', text=';  ; not okay:')
Token(type='lc', text=';   => (let ([p1 (cons 0 1)] [p2 (cons 0 2)])')
Token(type='lc', text=';        (let ([x (cons 0 3)])')
Token(type='lc', text=';         ; setup* for e')
Token(type='lc', text=';          (set! ,(%mref x 0) p2)')
Token(type='lc', text=';         ; setup* for lvalue:')
Token(type='lc', text=';          (set! ,(%mref x 0) p1)')
Token(type='lc', text=';          (set! t ,(%mref x 0))')
Token(type='lc', text=';          (set!')
Token(type='lc', text=';            ,(%mref t 0)')
Token(type='lc', text=';           ; wrong x[0]')
Token(type='lc', text=';            ,(%mref x 0))')
Token(type='lc', text=';          (eq? ,(%mref p1 0) p2)))')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='setup*')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='Rhs')
Token(type='at', text='e')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',x*')
Token(type='at', text=',e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='x*')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='nodups')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='x')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='e')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='at', text='x*')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvlet')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e')
Token(type='at', text='values')
Token(type='at', text='->')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='ob', text=',[')
Token(type='at', text='body*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='append')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='nodups')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvlet')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='e1')
Token(type='at', text='values')
Token(type='at', text='->')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t2')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='e2')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='setup*')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',e1')
Token(type='at', text=',t2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='setup*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='ir')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-seq*')
Token(type='at', text='setup*')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-push-mrvs')
Token(type='at', text=':')
Token(type='at', text='L10')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L10.5')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-tmp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='np-languages')
Token(type='at', text='make-tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Mvcall')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='e')
Token(type='at', text='consumer')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L10.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L10.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text=',consumer')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info2')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text=',consumer')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='at', text=',consumer')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mlabel')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text=',l*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mlabel')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text=',l*')
Token(type='at', text=',e*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',rhs')
Token(type='lc', text='; alloc, inline, foreign-call')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',tmp')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text=',consumer')
Token(type='at', text=',tmp')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='lc', text='; set! & mvset')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text=',consumer')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',local0*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='local*')
Token(type='at', text='local0*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='body')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='nodups')
Token(type='at', text='x*')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text=':')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Mvcall')
Token(type='at', text='info')
Token(type='at', text='e')
Token(type='at', text='t')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Mvcall')
Token(type='at', text='info')
Token(type='at', text='e')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvlet')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mv")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Pvalues')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-assignments')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='t*')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='body')
Token(type='at', text='x')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='lc', text="; okay to drop t since it's a triv")
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='body')
Token(type='at', text='x*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='find-matching-clause')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='x**')
Token(type='at', text='interface*')
Token(type='at', text='label*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='lc', text="; mark label referenced so it won't be discarded")
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration-set!')
Token(type='at', text='label')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-assignments')
Token(type='at', text='x*')
Token(type='at', text='t*')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='nfixed')
Token(type='at', text='x*')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='lc', text="; mark label referenced so it won't be discarded")
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration-set!')
Token(type='at', text='label')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='xfixed*')
Token(type='ob', text='(')
Token(type='at', text='list-head')
Token(type='at', text='x*')
Token(type='at', text='nfixed')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tfixed*')
Token(type='ob', text='(')
Token(type='at', text='list-head')
Token(type='at', text='t*')
Token(type='at', text='nfixed')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='xvar')
Token(type='ob', text='(')
Token(type='at', text='list-ref')
Token(type='at', text='x*')
Token(type='at', text='nfixed')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tvar*')
Token(type='ob', text='(')
Token(type='at', text='list-tail')
Token(type='at', text='t*')
Token(type='at', text='nfixed')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; the args are all trivs, otherwise this code would not properly build the rest')
Token(type='lc', text="; list after all of the arguments have been evaluated (and it couldn't suppress")
Token(type='lc', text='; the list creation when xvar is unreferenced)')
Token(type='ob', text='(')
Token(type='at', text='build-assignments')
Token(type='at', text='xfixed*')
Token(type='at', text='tfixed*')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='xvar')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='tvar*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',xvar')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-pair')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='tvar*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tvar*')
Token(type='at', text='tvar*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tvar')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='tvar*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tvar*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='tvar*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',tvar')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='tvar*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',xvar')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='next-offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',t')
Token(type='at', text='next-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='at', text='tvar*')
Token(type='at', text='next-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='src')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#t')
Token(type='at', text="'object")
Token(type='at', text="'$oops")
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='st', text='"incorrect number of values received in multiple value context"')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L10.5')
Token(type='at', text='Expr')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='Pvalues')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pvalues')
Token(type='at', text='info')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration-set!')
Token(type='at', text='l')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='label*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvset')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',label*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='e2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='ob', text=',[')
Token(type='at', text='e1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='at', text=',e1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',[')
Token(type='at', text='body')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mlabel')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text=',l*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mlabel')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text=',l*')
Token(type='at', text=',e*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',rhs')
Token(type='lc', text='; alloc, inline, foreign-call')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',tmp')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Pvalues')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='lc', text='; set! & mvset')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='Pvalues')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label*')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label*')
Token(type='at', text='label*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='body*')
Token(type='at', text='body*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rlabel*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rbody*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='label*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='rlabel*')
Token(type='at', text='rbody*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='label*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration-set!')
Token(type='at', text='label')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='label*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='label')
Token(type='at', text='rlabel*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='rbody*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='label*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='body*')
Token(type='cb', text=')')
Token(type='at', text='rlabel*')
Token(type='at', text='rbody*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mlabel')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text=',label*')
Token(type='at', text=',body*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-normalize-context')
Token(type='at', text=':')
Token(type='at', text='L10.5')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L11')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-tmp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='np-languages')
Token(type='at', text='make-tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='rhs-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='lvalue')
Token(type='at', text='info')
Token(type='at', text='prim')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L11')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pred-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='effect-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='value-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unrecognized prim ~s"')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaClause')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaClause')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',local0*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',body')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='local*')
Token(type='at', text='local0*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tlbody')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='body')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='nodups')
Token(type='at', text='x*')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='predicafy-triv')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text='?t')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='predicafy-rhs')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t')
Token(type='at', text='?rhs')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='predicafy-triv')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='predicafy-triv')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='predicafy-triv')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-literal-indirect?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='predicafy-triv')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-type')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text="'object")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-offset')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='info-call-error?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='debug-level')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='tail')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='predicafy-rhs')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='t0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='predicafy-rhs')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='at', text=',t0')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='pbody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='at', text=',pbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='ob', text=',[')
Token(type='at', text='pbody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='cb', text=')')
Token(type='at', text=',pbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',[')
Token(type='at', text='pbody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='cb', text=')')
Token(type='at', text=',pbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='value-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='predicafy-rhs')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='effect-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='pred-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unrecognized prim ~s"')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='rhs-inline')
Token(type='at', text='lvalue')
Token(type='at', text='info')
Token(type='at', text='prim')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='info-call-error?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='debug-level')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='tail')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='rhs')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvset')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',l*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='mvset')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',l*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#t')
Token(type='at', text="'object")
Token(type='at', text="'$oops")
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"returned ~r values to single value return context"')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='primitive-pure?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: do we get any of these when cp0 is run?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='value-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-tmp')
Token(type='at', text="'waste")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pred-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rhs-inline')
Token(type='at', text='lvalue')
Token(type='at', text='info')
Token(type='at', text='prim')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='info-call-error?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='debug-level')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='tail')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='ebody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='ob', text=',[')
Token(type='at', text='ebody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',[')
Token(type='at', text='ebody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='info-call-error?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='debug-level')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='tail')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mlabel')
Token(type='ob', text=',[')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text=',l*')
Token(type='ob', text=',[')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='join')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mjoin")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='at', text='e')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l*')
Token(type='at', text='l*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',join')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',join')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Expr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='pred-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='effect-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='value-primitive?')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unrecognized prim ~s"')
Token(type='at', text='prim')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',prim')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='rhs-inline')
Token(type='at', text='lvalue')
Token(type='at', text='info')
Token(type='at', text='prim')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='info-call-error?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='debug-level')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='rhs')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvset')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',l*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='mvset')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',l*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='ob', text=',[')
Token(type='at', text='tlbody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='ob', text=',[')
Token(type='at', text='tlbody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',[')
Token(type='at', text='tlbody')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mlabel')
Token(type='ob', text=',[')
Token(type='at', text='tl')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text=',l*')
Token(type='ob', text=',[')
Token(type='at', text='tl*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tl')
Token(type='at', text='tl')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l*')
Token(type='at', text='l*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tl*')
Token(type='at', text='tl*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='at', text='tl')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='tail')
Token(type='at', text=',tl')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='tl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='tl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-insert-trap-check')
Token(type='at', text=':')
Token(type='at', text='L11')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L11.5')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trap-check')
Token(type='at', text=',ioc')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%trap')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-/eq')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%trap')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'eq?")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='ob', text=',(')
Token(type='at', text='make-info-call')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library")
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='ioc')
Token(type='ob', text='(')
Token(type='at', text='lookup-does-not-expect-headroom-libspec')
Token(type='at', text='event')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='event')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-flatten-case-lambda')
Token(type='at', text=':')
Token(type='at', text='L11.5')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L12')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Ldoargerr')
Token(type='ob', text='(')
Token(type='at', text='make-Ldoargerr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Ldomvleterr')
Token(type='ob', text='(')
Token(type='at', text='make-Ldomvleterr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='flatten-clauses')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='cl*')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-libspec')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L12')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='equal?')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-interface*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='libspec-interface')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='libspec-closure?')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"libspec claims closure needed, but no free variables for ~s"')
Token(type='ob', text='(')
Token(type='at', text='libspec-name')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='libspec-closure?')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"libspec claims no closure needed, but has free variables ~s for ~s"')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='libspec-name')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-well-known?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cl*')
Token(type='at', text='cl*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='dcl*')
Token(type='at', text='dcl*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='local*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tlbody')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='tlbody')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='direct-call-label-referenced')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L11.5')
Token(type='at', text='CaseLambdaClause')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',local1*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',tlbody1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-cons')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='x*')
Token(type='at', text='local1*')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tlbody1')
Token(type='ob', text='`(')
Token(type='at', text='entry-point')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='ob', text=',(')
Token(type='at', text='Tail')
Token(type='at', text='tlbody1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='tlbody')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='tail')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='at', text=',tlbody1')
Token(type='cb', text=')')
Token(type='at', text='tlbody1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='at', text='local*')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cl*')
Token(type='at', text='cl*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='dcl*')
Token(type='at', text='dcl*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ldoargerr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L11.5')
Token(type='at', text='CaseLambdaClause')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='clause')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='at', text=',interface')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tlbody')
Token(type='ob', text='`(')
Token(type='at', text='entry-point')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='at', text=',mcp')
Token(type='ob', text=',(')
Token(type='at', text='Tail')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='interface')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fixed-args')
Token(type='ob', text='(')
Token(type='at', text='lognot')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tlbody')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced?')
Token(type='ob', text='(')
Token(type='at', text='list-ref')
Token(type='at', text='x*')
Token(type='at', text='fixed-args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='do-rest')
Token(type='at', text=',fixed-args')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='fixed-args')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='maybe-cons')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='x*')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='next-local*')
Token(type='at', text='next-tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='maybe-cons')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='x*')
Token(type='at', text='local*')
Token(type='at', text='next-local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',fixed-args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',next-tlbody')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='next-local*')
Token(type='at', text='next-tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='cl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='maybe-cons')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='x*')
Token(type='at', text='local*')
Token(type='at', text='next-local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',interface')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='at', text=',next-tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='flatten-mvclauses')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x**')
Token(type='at', text='interface*')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L12')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='lc', text='; goto domvleterr before decrementing sfp, so callers frame')
Token(type='lc', text='; is still on the stack, to go along with value in %ret / sfp[0]')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ldomvleterr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='interface')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ebody')
Token(type='ob', text='`(')
Token(type='at', text='mventry-point')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='interface')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fixed-args')
Token(type='ob', text='(')
Token(type='at', text='lognot')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ebody')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced?')
Token(type='ob', text='(')
Token(type='at', text='list-ref')
Token(type='at', text='x*')
Token(type='at', text='fixed-args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='do-rest')
Token(type='at', text=',fixed-args')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='fixed-args')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='ebody')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='next-ebody')
Token(type='ob', text='(')
Token(type='at', text='flatten-mvclauses')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',fixed-args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',next-ebody')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='next-ebody')
Token(type='ob', text='(')
Token(type='at', text='flatten-mvclauses')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',interface')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='at', text=',next-ebody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='at', text=',info')
Token(type='at', text=',cl*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='local*')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='flatten-clauses')
Token(type='at', text='info')
Token(type='at', text='cl*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='nodups')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*-set!')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='at', text='direct-call-label-referenced')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvset')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',mdcl')
Token(type='ob', text=',[')
Token(type='at', text='t0?')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',[')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',interface*')
Token(type='at', text=',l*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mvset')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='flatten-mvclauses')
Token(type='at', text='x**')
Token(type='at', text='interface*')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-impose-calling-conventions')
Token(type='at', text=':')
Token(type='at', text='L12')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L13')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='asm-module')
Token(type='at', text='asm-foreign-call')
Token(type='at', text='asm-foreign-callable')
Token(type='at', text='asm-enter')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='newframe-info-for-mventry-point')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Lcall-error')
Token(type='ob', text='(')
Token(type='at', text='make-Lcall-error')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='max-fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='le-label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-$type-check')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-tmp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='np-languages')
Token(type='at', text='make-tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-formal-registers!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='do-reg')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='reg*')
Token(type='at', text='arg-registers')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-reg')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='get-arg-regs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t*')
Token(type='at', text='t*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='reg*')
Token(type='at', text='arg-registers')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='reg')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='reg')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='reg-t*')
Token(type='cb', text=')')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='build-tail-call')
Token(type='at', text='build-nontail-call')
Token(type='at', text='build-mv-return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='symref?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='info-literal-indirect?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-type')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text="'object")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='symbol?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-offset')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='libref?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='info-literal-indirect?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-type')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text="'library")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='libspec?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='info-literal-offset')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-call')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='rpl')
Token(type='at', text='reg*')
Token(type='at', text='fv*')
Token(type='at', text='maybe-info')
Token(type='at', text='mdcl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-call')
Token(type='at', text='t')
Token(type='at', text='#f')
Token(type='at', text='rpl')
Token(type='at', text='reg*')
Token(type='at', text='fv*')
Token(type='at', text='maybe-info')
Token(type='at', text='mdcl')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='cploc')
Token(type='at', text='rpl')
Token(type='at', text='reg*')
Token(type='at', text='fv*')
Token(type='at', text='maybe-info')
Token(type='at', text='mdcl')
Token(type='at', text='consumer?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-return-address')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',rpl')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='size-rp-header')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',tl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ret')
Token(type='ob', text=',(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',tl')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='tl')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='finish-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='argcnt?')
Token(type='at', text='cp?')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live-reg*')
Token(type='ob', text='(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%ret')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='cp?')
Token(type='ob', text='(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%cp')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='live-fv*')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='at', text='fv*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='consumer?')
Token(type='ob', text='`(')
Token(type='at', text='jump')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',live-reg*')
Token(type='at', text='...')
Token(type='at', text=',live-fv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='argcnt?')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',live-reg*')
Token(type='at', text='...')
Token(type='at', text=',live-fv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='jump')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text=',live-reg*')
Token(type='at', text='...')
Token(type='at', text=',live-fv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='direct-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='rpl')
Token(type='ob', text='`(')
Token(type='at', text='joto')
Token(type='at', text=',mdcl')
Token(type='ob', text='(')
Token(type='at', text=',fv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',mdcl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='normal-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='cploc-is-cp?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; cploc must be #f, an nfv, %cp or an mref tc[cp]')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%cp")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='cploc')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='cploc')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='var?')
Token(type='at', text='cploc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='set-cp')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='lhs')
Token(type='at', text='rhs')
Token(type='at', text='?tl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tl')
Token(type='at', text='`?tl')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='cploc-is-cp?')
Token(type='cb', text=')')
Token(type='at', text='tl')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='lhs')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='at', text=',tl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='insert-procedure-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='maybe-info')
Token(type='ob', text='(')
Token(type='at', text='info-call-check?')
Token(type='at', text='maybe-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-closure')
Token(type='at', text='type-closure')
Token(type='at', text=',reg')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lcall-error')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='mdcl')
Token(type='ob', text='(')
Token(type='at', text='set-cp')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='or')
Token(type='at', text='cploc')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='set-return-address')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='mdcl')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='direct-call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='finish-call')
Token(type='at', text='#f')
Token(type='lc', text="; don't set the argcount, since it doesn't need to be checked")
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='`(')
Token(type='at', text='label-ref')
Token(type='at', text=',mdcl')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%cp")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-cp')
Token(type='at', text=',%cp')
Token(type='ob', text=',(')
Token(type='at', text='or')
Token(type='at', text='cploc')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='set-return-address')
Token(type='lc', text='; must be set before potential jump to call-error')
Token(type='ob', text='(')
Token(type='at', text='insert-procedure-check')
Token(type='at', text='%cp')
Token(type='ob', text='(')
Token(type='at', text='finish-call')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='or')
Token(type='at', text='cploc')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='set-cp')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='set-return-address')
Token(type='lc', text='; must be set before potential jump to call-error')
Token(type='ob', text='(')
Token(type='at', text='insert-procedure-check')
Token(type='at', text='%xp')
Token(type='ob', text='(')
Token(type='at', text='finish-call')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-return-address')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='mdcl')
Token(type='at', text='dcl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='direct-call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='finish-call')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='`(')
Token(type='at', text='label-ref')
Token(type='at', text=',mdcl')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L12')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='lc', text='; if the expression in the cp position #f, and we have an mdcl, this is')
Token(type='lc', text='; a hackish workaround for not having a good way to express maybe-Expr')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='symref?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='lc', text='; okay to do pvalue call even if this is a consumer call since only primrefs')
Token(type='lc', text='; come through as consumer symrefs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='sym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='at', text='sym')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='set-return-address')
Token(type='ob', text='(')
Token(type='at', text='finish-call')
Token(type='at', text='#t')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-pvalue-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='libref?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-cp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='libspec-closure?')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-cp')
Token(type='ob', text='(')
Token(type='at', text='set-return-address')
Token(type='ob', text='(')
Token(type='at', text='finish-call')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='libspec-closure?')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library-code")
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='normal-call')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='normal-call')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-consumer-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tc')
Token(type='at', text='cnfv')
Token(type='at', text='rpl')
Token(type='cb', text=')')
Token(type='lc', text="; haven't a clue which argument registers are live, so list 'em all.")
Token(type='lc', text="; also haven't a clue which frame variables are live.  really need a")
Token(type='lc', text='; way to list all of them as well, but we count on there being enough')
Token(type='lc', text='; other registers (e.g., ac0, xp) to get us from the producer return')
Token(type='lc', text='; point to the consumer jump point.')
Token(type='ob', text='(')
Token(type='at', text='build-call')
Token(type='at', text='tc')
Token(type='at', text='cnfv')
Token(type='at', text='rpl')
Token(type='at', text='arg-registers')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='prepare-for-consumer-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='mrvl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='loc0')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',loc0')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',mrvl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='store-cp?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L12')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-nontail-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='tc*')
Token(type='at', text='nfv**')
Token(type='at', text='mrvl')
Token(type='at', text='prepare-for-consumer?')
Token(type='at', text='build-postlude')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='get-arg-regs')
Token(type='at', text='t1*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nfv*')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'nfv")
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='store-cp?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'cnfv")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rpl*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'rpl")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'rpl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='newframe-info')
Token(type='ob', text='(')
Token(type='at', text='make-info-newframe')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='#f')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='nfv*')
Token(type='at', text='nfv**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-return-point')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rpl')
Token(type='at', text='mrvl')
Token(type='at', text='cnfv*')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='tail')
Token(type='at', text=',call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',rpl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='return-point')
Token(type='at', text=',newframe-info')
Token(type='at', text=',rpl')
Token(type='at', text=',mrvl')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='remq')
Token(type='at', text='#f')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-locs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='loc*')
Token(type='at', text='t*')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='loc')
Token(type='at', text='t')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='loc')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',loc')
Token(type='ob', text=',(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ebody')
Token(type='at', text='loc*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-call-pariah?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='cnfv*')
Token(type='at', text='tc*')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='nfv*')
Token(type='at', text='frame-t*')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='new-frame')
Token(type='at', text=',newframe-info')
Token(type='at', text=',rpl*')
Token(type='at', text='...')
Token(type='at', text=',rpl')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='prepare-for-consumer?')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='prepare-for-consumer-call')
Token(type='at', text='mrvl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-return-point')
Token(type='at', text='rpl')
Token(type='at', text='mrvl')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='build-call')
Token(type='at', text='t0')
Token(type='at', text='rpl')
Token(type='at', text='reg*')
Token(type='at', text='nfv*')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='this-mrvl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mrvl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-return-point')
Token(type='at', text='rpl')
Token(type='at', text='this-mrvl')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='build-call')
Token(type='at', text='t0')
Token(type='at', text='rpl')
Token(type='at', text='reg*')
Token(type='at', text='nfv*')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cnfv*')
Token(type='at', text='cnfv*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rpl*')
Token(type='at', text='rpl*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='this-mrvl')
Token(type='at', text='this-mrvl')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='prepare-for-consumer-call')
Token(type='at', text='this-mrvl')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tc')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tc*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rpl*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cnfv')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-return-point')
Token(type='at', text='rpl')
Token(type='at', text='mrvl')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='build-consumer-call')
Token(type='at', text='tc')
Token(type='at', text='cnfv')
Token(type='at', text='rpl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='this-mrvl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mrvl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-return-point')
Token(type='at', text='rpl')
Token(type='at', text='this-mrvl')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='build-consumer-call')
Token(type='at', text='tc')
Token(type='at', text='cnfv')
Token(type='at', text='rpl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='at', text='tc*')
Token(type='at', text='cnfv*')
Token(type='at', text='rpl*')
Token(type='at', text='this-mrvl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-postlude')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; NB: combine')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-nontail-call-for-tail-call-with-consumers')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='tc*')
Token(type='at', text='nfv**')
Token(type='at', text='mrvl')
Token(type='at', text='prepare-for-consumer?')
Token(type='at', text='build-postlude')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='get-arg-regs')
Token(type='at', text='t1*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nfv*')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'nfv")
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='store-cp?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'cnfv")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rpl*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'rpl")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'rpl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='newframe-info')
Token(type='ob', text='(')
Token(type='at', text='make-info-newframe')
Token(type='ob', text='(')
Token(type='at', text='info-call-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-call-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='#f')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='nfv*')
Token(type='at', text='nfv**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-return-point')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rpl')
Token(type='at', text='mrvl')
Token(type='at', text='cnfv*')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='tail')
Token(type='at', text=',call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',rpl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='return-point')
Token(type='at', text=',newframe-info')
Token(type='at', text=',rpl')
Token(type='at', text=',mrvl')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='remq')
Token(type='at', text='#f')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-locs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='loc*')
Token(type='at', text='t*')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='loc')
Token(type='at', text='t')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='loc')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',loc')
Token(type='ob', text=',(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ebody')
Token(type='at', text='loc*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-call-pariah?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='cnfv*')
Token(type='at', text='tc*')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='nfv*')
Token(type='at', text='frame-t*')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='new-frame')
Token(type='at', text=',newframe-info')
Token(type='at', text=',rpl*')
Token(type='at', text='...')
Token(type='at', text=',rpl')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='prepare-for-consumer?')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='prepare-for-consumer-call')
Token(type='at', text='mrvl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-return-point')
Token(type='at', text='rpl')
Token(type='at', text='mrvl')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='build-call')
Token(type='at', text='t0')
Token(type='at', text='rpl')
Token(type='at', text='reg*')
Token(type='at', text='nfv*')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='this-mrvl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mrvl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-return-point')
Token(type='at', text='rpl')
Token(type='at', text='this-mrvl')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='build-call')
Token(type='at', text='t0')
Token(type='at', text='rpl')
Token(type='at', text='reg*')
Token(type='at', text='nfv*')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tc*')
Token(type='at', text='tc*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cnfv*')
Token(type='at', text='cnfv*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rpl*')
Token(type='at', text='rpl*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='this-mrvl')
Token(type='at', text='this-mrvl')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='prepare-for-consumer-call')
Token(type='at', text='this-mrvl')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tc')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='tc*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rpl*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cnfv')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-return-point')
Token(type='at', text='rpl')
Token(type='at', text='mrvl')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='build-consumer-call')
Token(type='at', text='tc')
Token(type='at', text='cnfv')
Token(type='at', text='rpl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='this-mrvl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mrvl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-return-point')
Token(type='at', text='rpl')
Token(type='at', text='this-mrvl')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='build-consumer-call')
Token(type='at', text='tc')
Token(type='at', text='cnfv')
Token(type='at', text='rpl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='at', text='tc*')
Token(type='at', text='cnfv*')
Token(type='at', text='rpl*')
Token(type='at', text='this-mrvl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-postlude')
Token(type='at', text='newframe-info')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='ob', text='(')
Token(type='at', text='last-pair')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='build-tail-call')
Token(type='at', text='build-mv-return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-locs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='loc*')
Token(type='at', text='t*')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='loc')
Token(type='at', text='t')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='lc', text='; omit set! for tail-frame optimization')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tlbody')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',loc')
Token(type='ob', text=',(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tlbody')
Token(type='at', text='loc*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-shift-args')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<=')
Token(type='at', text=',%ts')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ts')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='shift-arg')
Token(type='at', text=',%xp')
Token(type='at', text='0')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%xp')
Token(type='at', text=',%ts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-tail-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='get-arg-regs')
Token(type='at', text='t1*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frame-t*')
Token(type='at', text='frame-t*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='at', text='max-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='fv*')
Token(type='at', text='frame-t*')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='ob', text='(')
Token(type='at', text='build-call')
Token(type='at', text='t0')
Token(type='at', text='#f')
Token(type='at', text='reg*')
Token(type='at', text='fv*')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tc')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='ob', text='(')
Token(type='at', text='last-pair')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='mrvl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mrvl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='store-cp?')
Token(type='at', text='tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='build-nontail-call-for-tail-call-with-consumers')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='tc*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='mrvl')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='newframe-info')
Token(type='at', text='cnfv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='at', text='cnfv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='remove-frame')
Token(type='at', text=',newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='restore-local-saves')
Token(type='at', text=',newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='at', text=',cnfv')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-shift-args')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-consumer-call')
Token(type='at', text='tc')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tc*')
Token(type='ob', text='(')
Token(type='at', text='list-head')
Token(type='at', text='tc*')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='tc*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='build-nontail-call')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='tc*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='mrvl')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='remove-frame')
Token(type='at', text=',newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='restore-local-saves')
Token(type='at', text=',newframe-info')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-shift-args')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-consumer-call')
Token(type='at', text='tc')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-mv-return')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='get-arg-regs')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frame-t*')
Token(type='at', text='frame-t*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='at', text='max-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='frame-t*')
Token(type='cb', text=')')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='fv*')
Token(type='at', text='frame-t*')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='reg*')
Token(type='at', text='reg-t*')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='length')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; must leave RA in %ret for values-error')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ret')
Token(type='ob', text=',(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ret')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='return-address-mv-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',%ret')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='at', text=',fv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='return-address-mv-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='ob', text=',(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',fv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='do-return')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='retval')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text='retval')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Ref')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='build-foreign-call')
Token(type='at', text='build-fcallable')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-unfix')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fix')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Scheme->C')
Token(type='lc', text='; ASSUMPTIONS: ac0, ac1, and xp are not C argument registers')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='toC')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='ptr->integer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='width')
Token(type='at', text='t')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='build-unfix')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-fixnum')
Token(type='at', text='type-fixnum')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='width')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='at', text='%ac0')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Rhs')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='k')
Token(type='at', text='%ac0')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Rhs')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='build-unfix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='case')
Token(type='at', text='width')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofargint32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofargint64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"can\'t handle width ~s"')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='width')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='%ac0')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-u*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='toC')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Rhs')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='toC')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='%lea')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-float')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='toC')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='Ltype')
Token(type='at', text='Type')
Token(type='cb', text=')')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-scheme-object')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='toC')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-fixnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='toC')
Token(type='ob', text='(')
Token(type='at', text='build-unfix')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-u8*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-u*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-u16*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-u*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-u32*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-u*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-integer')
Token(type='at', text=',bits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ptr->integer')
Token(type='at', text='bits')
Token(type='at', text='t')
Token(type='at', text='toC')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-unsigned')
Token(type='at', text=',bits')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ptr->integer')
Token(type='at', text='bits')
Token(type='at', text='t')
Token(type='at', text='toC')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-double-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-float')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-single-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-float')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-ftd')
Token(type='at', text=',ftd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='toC')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-ftd&')
Token(type='at', text=',ftd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='toC')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"invalid parameter type specifier ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Scheme->C-for-result')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='toC')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='Ltype')
Token(type='at', text='Type')
Token(type='cb', text=')')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-void')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='toC')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-ftd&')
Token(type='at', text=',ftd')
Token(type='cb', text=')')
Token(type='lc', text=";; pointer isn't received as a result, but instead passed")
Token(type='lc', text=';; to the function as its first argument (or simulated as such)')
Token(type='ob', text='(')
Token(type='at', text='toC')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='Scheme->C')
Token(type='at', text='type')
Token(type='at', text='toC')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='C->Scheme')
Token(type='lc', text='; ASSUMPTIONS: ac0, ac1, and xp are not C argument registers')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='type')
Token(type='at', text='fromC')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='integer->ptr')
Token(type='lc', text='; ac0 holds low 32-bits, ac1 holds high 32 bits, if needed')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='width')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='build-unfix')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',x')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',big')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='case')
Token(type='at', text='width')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretint32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretint64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"can\'t handle width ~s"')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='width')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lbig')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lbig")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t-ac1')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t-ac1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-ac1')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t-ac1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='lc', text='; TODO: unnecessary if ac1 is not a pseudo register')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t-ac1')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='e1')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',Lbig')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lbig')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='unsigned->ptr')
Token(type='lc', text='; ac0 holds low 32-bits, ac1 holds high 32 bits, if needed')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='width')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='fixnum-bits')
Token(type='cb', text=')')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e1')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='at', text=',big')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='e2')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='case')
Token(type='at', text='width')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretuns32')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretuns64')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"can\'t handle width ~s"')
Token(type='at', text='width')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='width')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lbig')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lbig")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='t-ac1')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t-ac1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-ac1')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t-ac1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='lc', text='; TODO: unnecessary if ac1 is not a pseudo register')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',t-ac1')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',t-ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='e1')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',Lbig')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lbig')
Token(type='cb', text=')')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='alloc-fptr')
Token(type='at', text='ftd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='at', text='ftd')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='Ltype')
Token(type='at', text='Type')
Token(type='cb', text=')')
Token(type='at', text='type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-void')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-scheme-object')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fromC')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-fixnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='build-fix')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-u8*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretu8*')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-u16*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretu16*')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-u32*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dofretu32*')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-integer')
Token(type='at', text=',bits')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='bits')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='integer->ptr')
Token(type='at', text='bits')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-unsigned')
Token(type='at', text=',bits')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='bits')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='unsigned->ptr')
Token(type='at', text='bits')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-double-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='fromC')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-single-float')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-flonum')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-flonum')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='fromC')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-ftd')
Token(type='at', text=',ftd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='lc', text='; C integer return might be wiped out by alloc')
Token(type='ob', text=',(')
Token(type='at', text='alloc-fptr')
Token(type='at', text='ftd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-ftd&')
Token(type='at', text=',ftd')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='fromC')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='alloc-fptr')
Token(type='at', text='ftd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"invalid result type specifier ~s"')
Token(type='at', text='type')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='pick-Scall')
Token(type='at', text='result-type')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='Ltype')
Token(type='at', text='Type')
Token(type='cb', text=')')
Token(type='at', text='result-type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-void')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='Scall-any-results')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='Scall-one-result')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-foreign-call')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='maybe-lvalue')
Token(type='at', text='new-frame?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='arg-type*')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-arg-type*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='result-type')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-result-type')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='allocate')
Token(type='at', text='c-args')
Token(type='at', text='ccall')
Token(type='at', text='c-res')
Token(type='at', text='deallocate')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-foreign-call')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; NB. allocate must save tc if not callee-save, and ccall')
Token(type='lc', text=';     (not deallocate) must restore tc if not callee-save')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='allocate')
Token(type='cb', text=')')
Token(type='lc', text='; cp must hold our closure or our code object.  we choose code object')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='cp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',le-label')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='with-saved-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='cb', text=')')
Token(type='lc', text='; save just the required registers, e.g., %sfp')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='t1')
Token(type='at', text='arg-type')
Token(type='at', text='c-arg')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='Scheme->C')
Token(type='at', text='arg-type')
Token(type='at', text='c-arg')
Token(type='at', text='t1')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ccall')
Token(type='at', text='t0')
Token(type='cb', text=')')
Token(type='at', text='t1*')
Token(type='at', text='arg-type*')
Token(type='at', text='c-args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='deallocate')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='maybe-lvalue')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='Ltype')
Token(type='at', text='Type')
Token(type='cb', text=')')
Token(type='at', text='result-type')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-ftd&')
Token(type='at', text=',ftd')
Token(type='cb', text=')')
Token(type='lc', text=";; Don't actually return a value, because the result")
Token(type='lc', text=';; was instead installed in the first argument.')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',maybe-lvalue')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='C->Scheme')
Token(type='at', text='result-type')
Token(type='at', text='c-res')
Token(type='at', text='maybe-lvalue')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='new-frame?')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"can\'t handle nontail foreign calls"')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-fcallable')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='self-label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-locs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='loc*')
Token(type='at', text='t*')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='loc')
Token(type='at', text='t')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Effect')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',loc')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ebody')
Token(type='at', text='loc*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='arg-type*')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-arg-type*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='result-type')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-result-type')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'t")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='arg-type*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='reg*')
Token(type='at', text='reg-x*')
Token(type='at', text='frame-x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='get-arg-regs')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frame-x*')
Token(type='at', text='frame-x*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='frame-x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='at', text='max-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='frame-x*')
Token(type='cb', text=')')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; add 2 for the old RA and cchain')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='max-fv')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='c-init')
Token(type='at', text='c-args')
Token(type='at', text='c-result')
Token(type='at', text='c-return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-foreign-callable')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; c-init saves C callee-save registers and restores tc')
Token(type='lc', text='; each of c-args sets a variable to one of the C arguments')
Token(type='lc', text='; c-result converts C results to Scheme values')
Token(type='lc', text='; c-return restores callee-save registers and returns to C')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='c-init')
Token(type='cb', text=')')
Token(type='lc', text="; although we don't actually need %cp in a register, we need")
Token(type='lc', text="; to make sure that `(%tc-ref cp)` doesn't change before S_call_help")
Token(type='lc', text='; is called, and claiming that %cp is live is the easiest way')
Token(type='ob', text=',(')
Token(type='at', text='restore-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text="; need overflow check since we're effectively retroactively turning")
Token(type='lc', text='; what was a foreign call into a Scheme non-tail call')
Token(type='ob', text='(')
Token(type='at', text='fcallable-overflow-check')
Token(type='cb', text=')')
Token(type='lc', text='; leave room for the RA & c-chain')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='x')
Token(type='at', text='arg-type')
Token(type='at', text='c-arg')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text=',(')
Token(type='at', text='C->Scheme')
Token(type='at', text='arg-type')
Token(type='at', text='c-arg')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='at', text='fv*')
Token(type='at', text='frame-x*')
Token(type='ob', text='(')
Token(type='at', text='set-locs')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='ob', text=',(')
Token(type='at', text='reg-tc-disp')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='at', text='reg-x*')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='length')
Token(type='at', text='arg-type*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='at', text='arg-type*')
Token(type='at', text='c-args')
Token(type='cb', text=')')
Token(type='lc', text='; cookie (0) will be replaced by the procedure, so this')
Token(type='lc', text='; needs to be a quote, not an immediate')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',self-label')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; for locking')
Token(type='ob', text=',(')
Token(type='at', text='save-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%ts')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; Scall-{any,one}-results calls the Scheme implementation of the')
Token(type='lc', text='; callable, locking this callable wrapper (as communicated in %ts)')
Token(type='lc', text='; until just before returning')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='fv*')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='pick-Scall')
Token(type='at', text='result-type')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='restore-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; assuming no use of %cp from here on that could get saved into `(%tc-ref cp)`:')
Token(type='ob', text=',(')
Token(type='at', text='Scheme->C-for-result')
Token(type='at', text='result-type')
Token(type='at', text='c-result')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='c-return')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='handle-do-rest')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='fixed-args')
Token(type='at', text='offset')
Token(type='at', text='save-asm-ra?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='arg')
Token(type='at', text='reg*')
Token(type='at', text='fv-start')
Token(type='cb', text=')')
Token(type='lc', text='; not using interface')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='arg-number')
Token(type='at', text='fixed-args')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rl')
Token(type='at', text='arg-registers')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='rl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv-offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='arg-number')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text=',fv-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='fv-offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='at', text='arg-number')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='rl')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='arg-number')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='rl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: try to avoid using ts by starting at the end and coming back until ac0')
Token(type='lc', text='; reaches k(sfp), so we can use ts and/or td as an argument register.  (need one')
Token(type='lc', text='; available for the memory-memory moves)')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lstart')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lstart")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ldone')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ldone")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='bump-xp-and-store-cdr')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%xp')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ldone')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; set ac0 to number of rest elements')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',fixed-args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',arg')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; adjust & scale ac0 to size of rest list in bytes')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='pair-shift')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; allocate the space')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-pair')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='save-asm-ra?')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; point ac0 past end of list')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; store the first element')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',arg')
Token(type='cb', text=')')
Token(type='lc', text="; store the list in the first-element's old home")
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',arg')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='lc', text='; store remaining reg elements, then loop through frame elements')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='reg*')
Token(type='at', text='reg*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='at', text=',bump-xp-and-store-cdr')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; set ts to start of the fram arguments')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',fv-start')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lstart')
Token(type='cb', text=')')
Token(type='lc', text='; copy next element from stack to list')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ts')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',bump-xp-and-store-cdr')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lstart')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ldone')
Token(type='cb', text=')')
Token(type='lc', text='; store nil in the last cdr')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-named-info-lambda')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-info-lambda')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='interface')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-do-rest')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='fixed-args')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-named-info-lambda')
Token(type='at', text="'dorest")
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='asm-enter')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='dorest-intrinsics')
Token(type='at', text='fixed-args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='handle-do-rest')
Token(type='at', text='fixed-args')
Token(type='at', text='offset')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-return-live*')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='dorest-intrinsics')
Token(type='at', text='fixed-args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='frame-args-offset')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: commonize these procedures (as macros) outside of')
Token(type='lc', text='; np-expand-hand-coded/np-impose-calling-conventions?')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-arg-opnd')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regnum')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='at', text='regnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-ref')
Token(type='at', text='arg-registers')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Lvalue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='regnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='interface')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',interface')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%cp")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',%cp')
Token(type='ob', text=',(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%ret')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%ret')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%cp")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='xp/cp')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='load-xp/cp')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='xp/cp')
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='load-xp/cp')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='%set-esp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='at', text='%mref')
Token(type='at', text='ref-reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%esp")
Token(type='cb', text=')')
Token(type='lc', text='; write-through to tc so %esp need not be saved when going to C')
Token(type='ob', text="#'`(")
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%tc')
Token(type='ob', text=',(')
Token(type='at', text='tc-disp')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="#'`(")
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='nuate-help')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; Since cp is not always a real register, and the mref form requires us to put a var of some sort')
Token(type='lc', text='; in for its base, we need to move cp to to a real register.  Unfortunately, there do not seem to be')
Token(type='lc', text='; enough real registers available, since ac0 is in use through out, xp and td serve as temopraries, and')
Token(type='lc', text="; we'd like to keep ts free to serve for memory to memory moves.")
Token(type='lc', text='; Since this is the case, we need a temporary to put cp into when we are working with it and')
Token(type='lc', text='; xp is the natural choice (or td or ts if we switched amongst their roles)')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='lc', text='; cont. in cp and xp/cp, arg count in ac0, stack base in sfp, old frame base in yp')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lmultishot')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lmultishot")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lcopy-values')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lcopy-values")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lcopyup-values')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lcopyup-values")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lcopydown-values')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lcopydown-values")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lcopy-stack')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lcopy-stack")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lreturn')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lreturn")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-clength-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='lc', text='; length and clength match, so it is either mutlishot or shot1shot')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='scaled-shot-1-shot-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; shot 1-shot')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#t')
Token(type='at', text="'object")
Token(type='at', text="'$oops")
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='st', text='"attempt to invoke shot one-shot continuation"')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; multishot')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lmultishot')
Token(type='cb', text=')')
Token(type='lc', text='; split if clength > underflow-limit')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='>')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='underflow-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='lc', text='; resize unless stack-base + clength + size(values) <= esp')
Token(type='lc', text='; this is conservative to save a few instructions: really need')
Token(type='lc', text='; stack-base + clength <= esp and clength + size(values) < stack-size;')
Token(type='lc', text='; also, size may include argument register values')
Token(type='lc', text='; Carefully using ts again')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ts')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ts')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='at', text=',%ts')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='with-saved-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='scheme-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac1')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='split-and-resize')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-clength-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; (new) stack base in sfp, clength in ac1, old frame base in yp')
Token(type='lc', text='; set up return address and stack link')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-link-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; set %td to end of the destination area / base of stack values dest')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%td')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text="; don't shift if no stack values")
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<=')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; set xp to old frame base')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%yp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; set sfp to stack values bytes')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; shift stack return values up or down')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',%xp')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lcopyup-values')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='at', text=',%sfp')
Token(type='at', text=',frame-args-offset')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='at', text=',%sfp')
Token(type='at', text=',frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; restore for invariants below; td is already okay')
Token(type='at', text=',load-xp/cp')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lcopyup-values')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lcopydown-values')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='at', text=',frame-args-offset')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='at', text=',frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; restore for invariants below')
Token(type='at', text=',load-xp/cp')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-clength-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lcopydown-values')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; invariants: xp/cp = continuation, sfp = stack base, td = end of destination area')
Token(type='lc', text='; set %xp to saved stack base')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lcopy-stack')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%sfp')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lcopy-stack')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',load-xp/cp')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lreturn')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; 1 shot')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; treat as multishot if clength + size(values) > length')
Token(type='lc', text='; conservative: some values may be in argument registers')
Token(type='lc', text='; AWK - very carefully using ts here as we are out of other registers')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ts')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lmultishot')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; set up stack link')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-link-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text="; place old stack in ac1 for now to cache him later (after we've removed")
Token(type='lc', text='; the values, so that we have a place to store the length and link)')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='lc', text='; grab saved stack')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text="; set up tc's scheme-stack variable")
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='lc', text='; set up esp as stack-base + length - slop')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='stack-slop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%set-esp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ts')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; set up frame pointer to stack-base + current length')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; bypass copy loop if no stack values')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<=')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; set td to stack values bytes')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; set xp, td to top of stack values src, dest')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%yp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; move stack return values to top of saved stack segment')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lcopy-values')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text=',%td')
Token(type='at', text=',frame-args-offset')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='at', text=',%td')
Token(type='at', text=',frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',load-xp/cp')
Token(type='lc', text='; need to load cp-reg, since xp is wiped out')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lcopy-values')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; place old stack in stack cache')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-cache')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-cache')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='lc', text="; set up tc's stack-size variable")
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; mark continuation shot')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='scaled-shot-1-shot-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-clength-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='scaled-shot-1-shot-flag')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; return with 1 or multiple values')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lreturn')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ret')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ret')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='return-address-mv-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',%ret')
Token(type='at', text=',arg-registers')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv0')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',fv0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='return-address-mv-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',arg-registers')
Token(type='at', text='...')
Token(type='at', text=',fv0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Program')
Token(type='at', text=':')
Token(type='at', text='Program')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Program')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='labels')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',l*')
Token(type='at', text=',le*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='labels')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',l*')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='le*')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',local0*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='dcl*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='max-fv')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='local*')
Token(type='at', text='local0*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='le-label')
Token(type='at', text='l')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tlbody')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='nodups')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='local')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='local')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable')
Token(type='at', text=',info')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lambda-info')
Token(type='ob', text='(')
Token(type='at', text='make-info-lambda')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-arg-type*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-foreign-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-flag-template')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='max-fv')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='local*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tlbody')
Token(type='ob', text='(')
Token(type='at', text='build-fcallable')
Token(type='at', text='info')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',lambda-info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='hand-coded')
Token(type='at', text=',sym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='sym')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dorest0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do-rest')
Token(type='at', text='0')
Token(type='at', text='frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dorest1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do-rest')
Token(type='at', text='1')
Token(type='at', text='frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dorest2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do-rest')
Token(type='at', text='2')
Token(type='at', text='frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dorest3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do-rest')
Token(type='at', text='3')
Token(type='at', text='frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dorest4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do-rest')
Token(type='at', text='4')
Token(type='at', text='frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dorest5')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do-rest')
Token(type='at', text='5')
Token(type='at', text='frame-args-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='callcc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-named-info-lambda')
Token(type='at', text="'callcc")
Token(type='ob', text="'(")
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-clength-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library-code")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='dounderflow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-rp-header')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ref-ret')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-winders-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='winders')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-closure')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-continuation')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: remove next line once get-room preserves %td')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='nuate')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ref-ret')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-winders-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='winders')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ref-ret')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-link-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%sfp')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-clength-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-link-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call1cc')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-named-info-lambda')
Token(type='at', text="'call1cc")
Token(type='ob', text="'(")
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library-code")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='dounderflow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-rp-header')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ref-ret')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-winders-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='winders')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-closure')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-continuation')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: remove next line once get-room preserves %td')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='nuate')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ref-ret')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-winders-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='winders')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%ret')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-link-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-clength-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%sfp')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; we need to get ourselves a new stack.  we carve it out of the old')
Token(type='lc', text='; one if the old one is large enough.  if not, we look for one in')
Token(type='lc', text='; the cache.  if the cache is empty, we allocate a new stack.')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='one-shot-headroom')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<=')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='one-shot-headroom')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%sfp')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library-code")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='dounderflow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-rp-header')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; set continuation length to entire stack size')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-stack-length-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-cache')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='typemod')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='default-stack-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='default-stack-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%set-esp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='default-stack-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-slop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library-code")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='dounderflow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-rp-header')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-cache')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; next stack-segment')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; stack-segment size')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack-size')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%set-esp')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',%ac0')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-slop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library-code")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='dounderflow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-rp-header')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dounderflow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lret')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lret")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lmvreturn')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lmvreturn")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-named-info-lambda')
Token(type='at', text="'winder-dummy")
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; (asm align)')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lret')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rp-header')
Token(type='at', text=',Lmvreturn')
Token(type='at', text='0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lmvreturn')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='stack-link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%cp")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='at', text=',xp/cp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%yp')
Token(type='cb', text=')')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='nuate-help')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='nuate')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='make-named-info-lambda')
Token(type='at', text="'continuation")
Token(type='ob', text="'(")
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-flags-set!')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-flag-continuation')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-flag-system')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='at', text=',load-xp/cp')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='winders')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',xp/cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='continuation-winders-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%yp')
Token(type='cb', text=')')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='nuate-help')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='handle-do-rest')
Token(type='at', text='0')
Token(type='at', text='frame-args-offset')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%tc-ref')
Token(type='at', text='scheme-stack')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'library-code")
Token(type='ob', text='(')
Token(type='at', text='lookup-libspec')
Token(type='at', text='dounderflow*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%cp')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='hand-coded')
Token(type='at', text=',sym')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='Ref')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='Ref')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Ref')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='Ref')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text="; TODO: cannot call ref in cata, as we don't allow top-level cata")
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='ob', text=',(')
Token(type='at', text='Ref')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Ref')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text=':')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"Effect is responsible for handling mvcalls"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='do-rest')
Token(type='at', text=',fixed-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='fixed-args')
Token(type='at', text='dorest-intrinsic-max')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='dorest-intrinsics')
Token(type='at', text='fixed-args')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-do-rest')
Token(type='at', text='fixed-args')
Token(type='at', text='frame-args-offset')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; TODO: get internal error when , is missing from ,l')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mventry-point')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='remove-frame')
Token(type='at', text=',newframe-info-for-mventry-point')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='restore-local-saves')
Token(type='at', text=',newframe-info-for-mventry-point')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='mrvl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mrvl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-nontail-call')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0?')
Token(type='at', text='t1*')
Token(type='at', text='t*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='mrvl')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',mrvl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='remove-frame')
Token(type='at', text=',newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='restore-local-saves')
Token(type='at', text=',newframe-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvset')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text=',x**')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',ebody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frame-x**')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-formal-registers!')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='nfv**')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nfv')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'mvset-nfv")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='nfv')
Token(type='cb', text=')')
Token(type='at', text='nfv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='frame-x**')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='mrvl')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'mrvl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-nontail-call')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0?')
Token(type='at', text='t1*')
Token(type='at', text='t*')
Token(type='at', text='nfv**')
Token(type='at', text='mrvl')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='newframe-info-for-mventry-point')
Token(type='at', text='newframe-info')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='ebody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-nontail-call')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0?')
Token(type='at', text='t1*')
Token(type='at', text='t*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='retval')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'retval")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='remove-frame')
Token(type='at', text=',newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',retval')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='restore-local-saves')
Token(type='at', text=',newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',retval')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='t0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-foreign-call')
Token(type='at', text='info')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='t0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-foreign-call')
Token(type='at', text='info')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='lvalue')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='entry-point')
Token(type='ob', text='(')
Token(type='at', text=',x*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',dcl')
Token(type='at', text=',mcp')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='uvar-type')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text="'ptr")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"can\'t handle anything but plain vanilla types yet"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; clear and recompute referenced flags on entry-point formals in case tail-frame')
Token(type='lc', text='; optimization eliminates all of the references')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced!')
Token(type='at', text='mcp')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='do-frame')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='set-formal-registers!')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fv-idx')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='fv-idx')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-frame')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='fv-idx')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='bind-formals')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='mcp')
Token(type='at', text='x*')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-cpset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='mcp')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='mcp')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='mcp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',mcp')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; we set cp after registers and before frame vars, since it might')
Token(type='lc', text='; or might not be a register')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='mcp')
Token(type='at', text='mcp')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-cpset')
Token(type='at', text='mcp')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-referenced?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='fv-offset')
Token(type='at', text='loc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-cpset')
Token(type='at', text='mcp')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',loc')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='at', text=',loc')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='mcp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='mcp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tlbody')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',dcl')
Token(type='cb', text=')')
Token(type='lc', text="; TODO: don't want to save ret for leaf routines")
Token(type='lc', text="; TODO: don't necessarily want to position ret save here")
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',%ret')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='overflood-check')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='bind-formals')
Token(type='at', text='mcp')
Token(type='at', text='x*')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mvcall')
Token(type='at', text=',info')
Token(type='at', text=',mdcl')
Token(type='at', text=',t0?')
Token(type='at', text=',t1*')
Token(type='at', text='...')
Token(type='ob', text='(')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-tail-call')
Token(type='at', text='info')
Token(type='at', text='mdcl')
Token(type='at', text='t0?')
Token(type='at', text='t1*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='foreign-call')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='t0')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='t1*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='lc', text='; CAUTION: fv0 must hold return address when we call into C')
Token(type='ob', text=',(')
Token(type='at', text='build-foreign-call')
Token(type='at', text='info')
Token(type='at', text='t0')
Token(type='at', text='t1*')
Token(type='at', text='%ac0')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',rhs')
Token(type='ob', text='(')
Token(type='at', text='do-return')
Token(type='ob', text=',(')
Token(type='at', text='Rhs')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='t')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-return')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text=',info')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-mv-return')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-expand-hand-coded')
Token(type='at', text=':')
Token(type='at', text='L13')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L13.5')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='asm-module')
Token(type='at', text='asm-enter')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Ldoargerr')
Token(type='ob', text='(')
Token(type='at', text='make-Ldoargerr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-$type-check')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-info')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='interface*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-info-lambda')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='interface*')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-arg-opnd')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regnum')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<=')
Token(type='at', text='n')
Token(type='at', text='regnum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list-ref')
Token(type='at', text='arg-registers')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='Lvalue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='regnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-call')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%cp")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%cp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',%cp')
Token(type='ob', text=',(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%ret')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%ret')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='make-list*-procedure')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='at', text='name')
Token(type='ob', text="'(")
Token(type='at', text='-2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: would be nice to avoid cmpl here')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: would be nice to avoid second cmpl here')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ldoargerr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='pair-shift')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-pair')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='reg*')
Token(type='at', text='arg-registers')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='lc', text='; filled in first i pairs')
Token(type='lc', text='; have at least two stack arguments')
Token(type='lc', text='; ac0 is at least (i+1) * pair-size; also amount allocated')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; point xp to last pair of list')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',%xp')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; adjust from two ptrs per pair to one ptr per stack element')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; point ac0 to second-to-last stack argument')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',%sfp')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ac0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='make-do/call')
Token(type='at', text='make-do/ret')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-do')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='enter')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='lc', text='; ret-loc is relevant only on machines with %ret reg:')
Token(type='lc', text=';   #f => ret is known to be at sfp[0]---no need to save or restore')
Token(type='lc', text=';   non-#f => save and restore to/from ret-loc')
Token(type='lc', text='; if C needs to know about or might change the return address, ret-loc')
Token(type='lc', text='; must be either #f or sfp[0].  otherwise, it can be (%tc-ref ret), which')
Token(type='lc', text="; is useful if we don't know if %ret holds the return address.  in that case,")
Token(type='lc', text='; saving %ret to (%tc-ref ret) does no harm, nor does restoring it')
Token(type='lc', text="; from there, but it might be harmful to save %ret to sfp[0], since %ret's")
Token(type='lc', text='; contents are unknown.')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ret-loc')
Token(type='at', text='name')
Token(type='at', text='entry')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='at', text='name')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='enter')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='ret-loc')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',ret-loc')
Token(type='at', text=',%ret')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='with-saved-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='#t')
Token(type='at', text='entry')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='ret-loc')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%ret')
Token(type='at', text=',ret-loc')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-do/call')
Token(type='ob', text='(')
Token(type='at', text='make-do')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='make-do/ret')
Token(type='at', text='entry-live*')
Token(type='at', text='return-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-enter')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='at', text=',entry-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='asm-return')
Token(type='at', text=',return-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-dofargint')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='size')
Token(type='at', text='entry-live*')
Token(type='at', text='return-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='at', text='name')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='asm-enter')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='at', text=',entry-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%ac0')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ac1')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lnegative')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lnegative")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lreturn')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lreturn")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lreturn')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-negative-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lnegative')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',ac1')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lreturn')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lnegative')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lnegative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-/eq')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'eq?")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',ac1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',ac1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='lognot')
Token(type='at', text=',ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lreturn')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lnegative')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lnegative")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lreturn')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lreturn")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lreturn')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-negative-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lnegative')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lreturn')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lnegative')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lnegative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lreturn')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='name')
Token(type='st', text='"cannot handle size ~s"')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',return-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-dofretint')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='size')
Token(type='at', text='entry-live*')
Token(type='at', text='return-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='at', text='name')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='asm-enter')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='at', text=',entry-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-negative-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ac1')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lstore1')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lstore1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lstore2')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lstore2")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',ac1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='lognot')
Token(type='at', text=',ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: use condition code here')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',ac1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-negative-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lstore1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-negative-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lstore2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: use condition code here')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lstore1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lstore2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lstore1')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lstore1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lstore2')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lstore2")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='<')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-negative-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lstore1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-negative-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lstore2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lstore1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lstore2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='name')
Token(type='st', text='"cannot handle size ~s"')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',return-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-dofretuns')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='size')
Token(type='at', text='entry-live*')
Token(type='at', text='return-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='at', text='name')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='asm-enter')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='at', text=',entry-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ac1')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',ac1')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='=')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bits')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bigit-bits')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant-alloc')
Token(type='at', text='type-typed-object')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bignum')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bignum-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-positive-bignum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='ob', text='(')
Token(type='at', text='bigit-type')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%zero')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bignum-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bigit-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='name')
Token(type='st', text='"cannot handle size ~s"')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',return-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-dofretu*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='type')
Token(type='at', text='size')
Token(type='at', text='entry-live*')
Token(type='at', text='return-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13.5')
Token(type='at', text='CaseLambdaExpr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop1')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltop2')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop2")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='at', text='name')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='asm-enter')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='at', text=',entry-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='lc', text='; argument in ac0, return value in xp')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',return-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%ac0')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ts')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='ob', text='#vu8(')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',return-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='header-size-bytevector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-typed-object')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='type-bytevector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',return-live*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%load')
Token(type='at', text=',%ac0')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-load')
Token(type='at', text='type')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%store')
Token(type='at', text=',%xp')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='at', text=',%ts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='hand-coded')
Token(type='at', text=',sym')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='at', text='sym')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values-procedure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regnum')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'top")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"values"')
Token(type='ob', text="'(")
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ret')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='return-address-mv-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',%ret')
Token(type='at', text=',arg-registers')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='at', text=',%ref-ret')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='return-address-mv-return-address-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='at', text=',arg-registers')
Token(type='at', text='...')
Token(type='ob', text=',(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$apply-procedure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lloop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'loop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ldone')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'done")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"$apply"')
Token(type='ob', text="'(")
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text=';; TODO: when fixnum-offset = log2-ptr-bytes, we can avoid an sll by saving')
Token(type='lc', text=';; %ac0 before we shift it right.')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='fixnum-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ldone')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%td')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='>')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='with-saved-ret-reg')
Token(type='ob', text='(')
Token(type='at', text='with-saved-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac1')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='handle-apply-overflood')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='load-regs')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='regs')
Token(type='at', text='arg-registers')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='regs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lloop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-nil')
Token(type='at', text='snil')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ldone')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lloop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='regs')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-nil')
Token(type='at', text='snil')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ldone')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='load-regs')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='list*-procedure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-list*-procedure')
Token(type='st', text='"list*"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='cons*-procedure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-list*-procedure')
Token(type='st', text='"cons*"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$record-procedure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"$record"')
Token(type='ob', text="'(")
Token(type='at', text='-2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ldoargerr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-typed-object')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='reg*')
Token(type='at', text='arg-registers')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; point xp to last element of record')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',%xp')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; point ac0 to last stack argument')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',%sfp')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ac0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='record-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vector-procedure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"vector"')
Token(type='ob', text="'(")
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='at', text="'object")
Token(type='ob', text="'#(")
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logand')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='byte-alignment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-typed-object')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='delta')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-length-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='delta')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='delta')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',delta')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='logor')
Token(type='at', text=',%td')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='type-vector')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='vector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='reg*')
Token(type='at', text='arg-registers')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; point xp to last element of vector')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%xp')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; point ac0 to last stack argument')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',%sfp')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ac0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='vector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='list-procedure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"list"')
Token(type='ob', text="'(")
Token(type='at', text='-1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='pair-shift')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='ob', text=',(')
Token(type='at', text='make-info-alloc')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='type-pair')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='reg*')
Token(type='at', text='arg-registers')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='lc', text='; filled in first i pairs')
Token(type='lc', text='; have at least one stack argument')
Token(type='lc', text='; ac0 is amount allocated, or size-pair * # elements')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='lc', text='; point xp to last pair of list')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',%xp')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; adjust from two ptrs per pair to one ptr per stack element')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; point ac0 to last stack argument')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%lea')
Token(type='at', text=',%sfp')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%ac0')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='at', text=',%sfp')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-car-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='car')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',%ac0')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='snil')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='pair-cdr-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-pair')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$instantiate-code-object')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"$instantiate-code-object"')
Token(type='ob', text="'(")
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='with-saved-ret-reg')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='save-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='scheme-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='instantiate-code-object')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='restore-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='values-error')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do/call')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='ret')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='st', text='"values-error"')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='handle-values-error')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='domvleterr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do/call')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='ret')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='st', text='"domvleterr"')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='handle-mvlet-error')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='doargerr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do/call')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='ret')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='st', text='"doargerr"')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='handle-arg-error')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='call-error')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-do/call')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='ret')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='st', text='"call-error"')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='handle-docall-error')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dooverflow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='make-do/ret')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dooverflow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dooverflow')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='st', text='"dooverflow"')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='handle-overflow')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dooverflood')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='make-do/ret')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dooverflood')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dooverflood')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='st', text='"dooverflood"')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='handle-overflood')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='scan-remembered-set')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='make-do/ret')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='scan-remembered-set')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='scan-remembered-set')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='ret')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='st', text='"scan-remembered-set"')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='scan-remembered-set')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='get-room')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='make-do/ret')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='get-room')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='get-room')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='%tc-ref')
Token(type='at', text='ret')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='st', text='"get-room"')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='get-more-room')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='nonprocedure-code')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"nonprocedure-code"')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-value-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%type-check')
Token(type='at', text='mask-closure')
Token(type='at', text='type-closure')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='symbol-pvalue-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='closure-code-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='with-saved-ret-reg')
Token(type='ob', text='(')
Token(type='at', text='with-saved-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='scheme-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='handle-nonprocedure-symbol')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$foreign-entry-procedure')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"$foreign-entry"')
Token(type='ob', text="'(")
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='with-saved-ret-reg')
Token(type='ob', text='(')
Token(type='at', text='with-saved-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ac1')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='foreign-entry')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='$install-library-entry-procedure')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"$install-library-entry"')
Token(type='ob', text="'(")
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='with-saved-ret-reg')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='save-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='scheme-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='install-library-entry')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='restore-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='svoid')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='bytevector=?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='bv1')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'bv1")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='bv2')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'bv2")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='idx')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'idx")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='len2')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'len2")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='argcnt->max-fv')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='max')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Ltop')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltop")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Ltrue')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Ltrue")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lfail')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lfail")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='iptr-bytes')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"bytevector=?"')
Token(type='ob', text="'(")
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='argcnt->max-fv')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',bv1')
Token(type='at', text=',bv2')
Token(type='at', text=',idx')
Token(type='at', text=',len2')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='make-arg-opnd')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',bv1')
Token(type='at', text=',bv2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltrue')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',idx')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',len2')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-type-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='bytevector-length-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',len2')
Token(type='at', text=',idx')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='>=')
Token(type='at', text=',idx')
Token(type='at', text=',iptr-bytes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',idx')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',idx')
Token(type='at', text=',iptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',bv1')
Token(type='at', text=',iptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',bv2')
Token(type='at', text=',iptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Ltop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lfail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',idx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='bytevector-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',idx')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',iptr-bytes')
Token(type='at', text=',idx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',idx')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',idx')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='constant-case')
Token(type='at', text='native-endianness')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='little')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',bv1')
Token(type='at', text=',idx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sll')
Token(type='at', text=',bv2')
Token(type='at', text=',idx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='big')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv1')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',bv1')
Token(type='at', text=',idx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',bv2')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='srl')
Token(type='at', text=',bv2')
Token(type='at', text=',idx')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='eq?')
Token(type='at', text=',bv1')
Token(type='at', text=',bv2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Ltrue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='strue')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lfail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lfail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ac0')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='sfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofargint32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofargint')
Token(type='st', text='"dofargint32"')
Token(type='at', text='32')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofargint32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofargint32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofargint64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofargint')
Token(type='st', text='"dofargint64"')
Token(type='at', text='64')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofargint64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofargint64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofretint32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofretint')
Token(type='st', text='"doretint32"')
Token(type='at', text='32')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofretint32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofretint32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofretint64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofretint')
Token(type='st', text='"doretint64"')
Token(type='at', text='64')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofretint64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofretint64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofretuns32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofretuns')
Token(type='st', text='"doretuns32"')
Token(type='at', text='32')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofretuns32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofretuns32')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofretuns64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofretuns')
Token(type='st', text='"doretuns64"')
Token(type='at', text='64')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofretuns64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofretuns64')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofretu8*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofretu*')
Token(type='st', text='"dofretu8*"')
Token(type='at', text="'unsigned-8")
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofretu8*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofretu8*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofretu16*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofretu*')
Token(type='st', text='"dofretu16*"')
Token(type='at', text="'unsigned-16")
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofretu16*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofretu16*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dofretu32*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-dofretu*')
Token(type='st', text='"dofretu32*"')
Token(type='at', text="'unsigned-32")
Token(type='at', text='4')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-entry-live*')
Token(type='at', text='dofretu32*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-return-live*')
Token(type='at', text='dofretu32*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='error-invoke')
Token(type='cb', text=')')
Token(type='lc', text='; more generally "tail-reentry"')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"error-invoke"')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='invoke-prelude')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='restore-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='scheme-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ret")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%ret')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%sfp')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='invoke')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lret')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lret")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lexit')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lexit")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='Lmvreturn')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lmvreturn")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='ob', text=',(')
Token(type='at', text='make-info')
Token(type='st', text='"invoke"')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='lc', text='; TODO: add alignment')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text='align')
Token(type='cb', text=')')
Token(type='lc', text='; must start aligned or align below may fail')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='invoke-prelude')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='restore-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='at', text='%cp')
Token(type='at', text='scheme-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%ac1')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new-frame')
Token(type='ob', text=',(')
Token(type='at', text='make-info-newframe')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=",'(")
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='at', text=',Lret')
Token(type='cb', text=')')
Token(type='lc', text='; NB: hack!!!')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ref-ret')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',Lret')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='size-rp-header')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail')
Token(type='ob', text=',(')
Token(type='at', text='do-call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; argcnt already in ac0')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text='align')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lret')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rp-header')
Token(type='at', text=',Lmvreturn')
Token(type='ob', text=',(')
Token(type='at', text='*')
Token(type='at', text='2')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='lc', text='; cchain is live at sfp[ptr-bytes]')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; single-value as expected')
Token(type='ob', text=',(')
Token(type='at', text='save-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='scheme-args')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lexit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-c-simple-call')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='lookup-c-entry')
Token(type='at', text='Sreturn')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%c-simple-call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lmvreturn')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ac1')
Token(type='cb', text=')')
Token(type='at', text=',%ac0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='save-scheme-state')
Token(type='ob', text='(')
Token(type='at', text='in')
Token(type='at', text='%ac0')
Token(type='at', text='%ac1')
Token(type='at', text='scheme-args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='%cp')
Token(type='at', text='%xp')
Token(type='at', text='%yp')
Token(type='at', text='%ts')
Token(type='at', text='%td')
Token(type='at', text='extra-regs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lexit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unrecognized hand-coded name ~s"')
Token(type='at', text='sym')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-expose-allocation-pointer')
Token(type='at', text=':')
Token(type='at', text='L13.5')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L14')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='lc', text='; NB: uses %ts when %ap is not a real register')
Token(type='lc', text="; NB: should use an unspillable, but we don't have unspillables yet")
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-tmp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='np-languages')
Token(type='at', text='make-tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='local*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='refap')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L14')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%ap')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='refeap')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L14')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ref-reg')
Token(type='at', text='%eap')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L14')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-alloc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='lvalue')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='Lget-room')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Lget-room")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%ap")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='at', text='%ap')
Token(type='at', text='values')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%ts')
Token(type='at', text=',refap')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='p')
Token(type='at', text='%ts')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='seq')
Token(type='at', text=',e')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',refap')
Token(type='at', text=',%ts')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ap')
Token(type='at', text='store-ap')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',ap')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='info-alloc-tag')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='typemod')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L14')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='bytes-per-segment')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; reset_allocation_pointer never uses the last segment of the address')
Token(type='lc', text='; space, so we can allocate less than bytes-per-segment w/o carry check')
Token(type='ob', text='(')
Token(type='at', text='store-ap')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',ap')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+')
Token(type='at', text=',ap')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='store-ap')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',ap')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='+/carry')
Token(type='at', text=',ap')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-info-condition-code')
Token(type='at', text="'carry")
Token(type='at', text='#f')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text=',%condition-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',Lget-room')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',refeap')
Token(type='at', text=',ap')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',Lget-room')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-alloc-save-flrv?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='save-flrv')
Token(type='cb', text=')')
Token(type='at', text=',e')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='restore-flrv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',%xp')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='get-room')
Token(type='ob', text='(')
Token(type='at', text='info-alloc-save-ra?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',%xp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-inc-cc-counter')
Token(type='at', text='arg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%inline')
Token(type='at', text='inc-cc-counter')
Token(type='at', text=',%tc')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='tc-alloc-counter-disp')
Token(type='cb', text=')')
Token(type='at', text=',arg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='build-shift-and-inc-cc-counter')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tcnt')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'tcnt")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',tcnt')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='sra')
Token(type='at', text=',t')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-inc-cc-counter')
Token(type='at', text='tcnt')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='alloc-helper')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='lvalue')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='generate-allocation-counts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L14')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='build-inc-cc-counter')
Token(type='ob', text='(')
Token(type='at', text='in-context')
Token(type='at', text='Triv')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fxsra')
Token(type='at', text='imm')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='log2-ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-alloc')
Token(type='at', text='info')
Token(type='at', text='lvalue')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='var?')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text=',(')
Token(type='at', text='build-shift-and-inc-cc-counter')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-alloc')
Token(type='at', text='info')
Token(type='at', text='lvalue')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='talloc')
Token(type='ob', text='(')
Token(type='at', text='make-tmp')
Token(type='at', text="'talloc")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',talloc')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-shift-and-inc-cc-counter')
Token(type='at', text='talloc')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='build-alloc')
Token(type='at', text='info')
Token(type='at', text='lvalue')
Token(type='at', text='talloc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-alloc')
Token(type='at', text='info')
Token(type='at', text='lvalue')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',effect-prim')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='effect-prim')
Token(type='at', text='%remember')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%eap")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',refap')
Token(type='at', text=',refeap')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='scan-remembered-set')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',refeap')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',refeap')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; write through to tc so dirty-list bounds are always known in case of an')
Token(type='lc', text='; invalid memory reference or illegal instruction')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',%tc')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='tc-disp')
Token(type='at', text='%eap')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',refeap')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',refeap')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='at', text=',refeap')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='u<')
Token(type='at', text=',refap')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='%seq')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='scan-remembered-set')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text=',%asmlibcall!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='at', text=',refeap')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%inline')
Token(type='at', text='-')
Token(type='at', text=',%td')
Token(type='ob', text=',(')
Token(type='at', text='%constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',refeap')
Token(type='at', text=',%td')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='%mref')
Token(type='at', text=',%td')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text='(')
Token(type='at', text='alloc')
Token(type='at', text=',info')
Token(type='ob', text=',[')
Token(type='at', text='t')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='alloc-helper')
Token(type='at', text='info')
Token(type='at', text='lvalue')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local0*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='local*')
Token(type='at', text='local0*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tlbody')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='goto-block')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rec')
Token(type='at', text='make-goto-block')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='if-block')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='live-out')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='true')
Token(type='at', text='false')
Token(type='at', text="'uninitialized")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='newframe-block')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='rp*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='rp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='live-rp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='live-call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='live-out')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='at', text='next')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text="'uninitialized")
Token(type='at', text="'uninitialized")
Token(type='at', text="'uninitialized")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='joto-block')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='nfv*')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='nfv*')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='tail-block')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='exit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='bcache')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='if-bcache')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='bcache')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='tail-bcache')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='bcache')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='cache-block-info')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-bcache')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-if-bcache')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-tail-bcache')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='restore-block-info!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='bcache')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='bcache-effect*')
Token(type='at', text='bcache')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='if-bcache-pred')
Token(type='at', text='bcache')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='tail-bcache-tail')
Token(type='at', text='bcache')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-expose-basic-blocks')
Token(type='at', text=':')
Token(type='at', text='L14')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-instr!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='ir')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-label-link!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='at', text='l')
Token(type='at', text='setter')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='setter')
Token(type='at', text='from')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='setter')
Token(type='at', text='from')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='x')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='resolve-waiting-links!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='block?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='add-link!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-link!')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='l')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='build-graph')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L14')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-goto-block')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='local-label?')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-label-link!')
Token(type='at', text='block')
Token(type='at', text='l')
Token(type='at', text='goto-block-next-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-tail-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-true/false-block')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='at', text='label-name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text='label-name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Lvalue')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',lvalue')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text='lvalue')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text=';; TODO: framework should come up with some way of handling or complaining about a')
Token(type='lc', text=';; (maybe foo) when returning from a multiple value case.')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text=':')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',value-prim')
Token(type='ob', text=',[')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='t')
Token(type='at', text='target')
Token(type='at', text='->')
Token(type='at', text='t')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Rhs')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',value-prim')
Token(type='at', text=',t')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-goto-block')
Token(type='at', text='l')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='ob', text=',[')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='e0')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text=',p0')
Token(type='at', text=',tl1')
Token(type='ob', text=',[')
Token(type='at', text='f-block')
Token(type='at', text='block*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='tl1')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='p0')
Token(type='at', text='t-block')
Token(type='at', text='f-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text=',var*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-tail-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='jump')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',var*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto')
Token(type='at', text=',l')
Token(type='ob', text='(')
Token(type='at', text=',nfv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-joto-block')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-label-link!')
Token(type='at', text='block')
Token(type='at', text='l')
Token(type='at', text='joto-block-next-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-tail-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='asm-return')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-c-return')
Token(type='at', text=',info')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-tail-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='asm-c-return')
Token(type='at', text=',info')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unexpected Tail ~s"')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='nop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',effect-prim')
Token(type='ob', text=',[')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='t')
Token(type='at', text='target')
Token(type='at', text='->')
Token(type='at', text='t')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text=',info')
Token(type='at', text=',effect-prim')
Token(type='at', text=',t')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflood-check')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflood-check')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable-overflow-check')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='fcallable-overflow-check')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='new-frame')
Token(type='at', text=',info')
Token(type='at', text=',rpl*')
Token(type='at', text='...')
Token(type='at', text=',rpl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-newframe-block')
Token(type='at', text='info')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'docall")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='target')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rp*')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='at', text='rp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='#f')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*-set!')
Token(type='at', text='block')
Token(type='at', text='rp*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rpl*')
Token(type='at', text='rpl*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rp*')
Token(type='at', text='rp*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-label-link!')
Token(type='at', text='rp*')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='at', text='set-car!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='rpl*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='rp*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-label-link!')
Token(type='at', text='block')
Token(type='at', text='rpl')
Token(type='at', text='newframe-block-rp-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='remove-frame')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='remove-frame')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='restore-local-saves')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='restore-local-saves')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='return-point')
Token(type='at', text=',info')
Token(type='at', text=',rpl')
Token(type='at', text=',mrvl')
Token(type='ob', text='(')
Token(type='at', text=',cnfv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='return-point')
Token(type='at', text=',info')
Token(type='at', text=',rpl')
Token(type='at', text=',mrvl')
Token(type='ob', text='(')
Token(type='at', text=',cnfv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-return-point!')
Token(type='at', text='target')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rp-header')
Token(type='at', text=',mrvl')
Token(type='at', text=',fs')
Token(type='at', text=',lpm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='rp-header')
Token(type='at', text=',mrvl')
Token(type='at', text=',fs')
Token(type='at', text=',lpm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-return-point!')
Token(type='at', text='target')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='shift-arg')
Token(type='at', text=',reg')
Token(type='at', text=',imm')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='shift-arg')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text=',reg')
Token(type='at', text=',imm')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-pariah!')
Token(type='at', text='target')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='profile')
Token(type='at', text=',src')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-src*-set!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='src')
Token(type='ob', text='(')
Token(type='at', text='block-src*')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail')
Token(type='at', text=',tl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='tl')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='target')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve-waiting-links!')
Token(type='at', text='l')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-goto-block')
Token(type='at', text='l')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='ob', text=',[')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='e0')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='ob', text=',[')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='lvalue')
Token(type='at', text='target')
Token(type='at', text='->')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='Rhs')
Token(type='at', text=':')
Token(type='at', text='rhs')
Token(type='at', text='target')
Token(type='at', text='->')
Token(type='at', text='rhs')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text=',p0')
Token(type='at', text=',e1')
Token(type='at', text=',e2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t-block')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='f-block')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='at', text='target')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'ej")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='cons*')
Token(type='at', text='t-block')
Token(type='at', text='f-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='target')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='f-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='e2')
Token(type='at', text='f-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='e1')
Token(type='at', text='t-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='p0')
Token(type='at', text='t-block')
Token(type='at', text='f-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='target')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='check-live')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unexpected Effect ~s"')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='t-target')
Token(type='at', text='f-target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-true/false-block')
Token(type='at', text='t-target')
Token(type='at', text='block*')
Token(type='at', text="'lt")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-true/false-block')
Token(type='at', text='f-target')
Token(type='at', text='block*')
Token(type='at', text="'lf")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',pred-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-if-block')
Token(type='at', text='t-target')
Token(type='at', text='f-target')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='t-target')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='t-target')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'lt")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='f-target')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='f-target')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'lf")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text=',info')
Token(type='at', text=',pred-prim')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='seq')
Token(type='at', text=',e0')
Token(type='ob', text=',[')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='e0')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-goto-block')
Token(type='at', text='l')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text=',p0')
Token(type='at', text=',p1')
Token(type='ob', text=',[')
Token(type='at', text='f-block')
Token(type='at', text='block*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='t-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='p1')
Token(type='at', text='t-target')
Token(type='at', text='f-target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='p0')
Token(type='at', text='t-block')
Token(type='at', text='f-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mlabel')
Token(type='at', text=',p')
Token(type='ob', text='(')
Token(type='at', text=',l*')
Token(type='at', text=',p*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l*')
Token(type='at', text='l*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='p*')
Token(type='at', text='p*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='at', text='block*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='p')
Token(type='at', text='t-target')
Token(type='at', text='f-target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='p*')
Token(type='cb', text=')')
Token(type='at', text='t-target')
Token(type='at', text='f-target')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve-waiting-links!')
Token(type='at', text='l')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='block')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='p*')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='$oops')
Token(type='at', text='who')
Token(type='st', text='"unexpected Pred ~s"')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='ir')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',tlbody')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='entry-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-graph')
Token(type='at', text='tlbody')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='entry-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'entry")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='label')
Token(type='at', text='entry-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='entry-block')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; NB: if entry-block is not a dcl block, it must appear first in entry-block*,')
Token(type='lc', text='; NB: as it is the generic entry point for the procedure')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='entry-block*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block*')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='entry-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='entry-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; mark reachable blocks')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='rec')
Token(type='at', text='mark!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='from')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mark!')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mark!')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mark!')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mark!')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mark!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='mark!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mark!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized from ~s"')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='lc', text='; discard unreachable blocks, some of of which build-graph stupidly produces')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='at', text='block-seen?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='block-label')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-add-block-source!')
Token(type='at', text=':')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block-checksum')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxlogor')
Token(type='ob', text='(')
Token(type='at', text='fxsll')
Token(type='ob', text='(')
Token(type='at', text='fxlogand')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='ob', text='(')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='#x001')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='#x010')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='#x011')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='#x100')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='#x101')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='$block-counter')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$block-counter')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-pseudo-src-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-source')
Token(type='ob', text='(')
Token(type='at', text='$sfd')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='block-checksum')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-remove-repeater-blocks!')
Token(type='at', text=':')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='path-compress!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='block-src*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-repeater!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='path-compress!')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next-set!')
Token(type='at', text='b')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='b')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='resolve')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='path-compress!')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='resolve!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='get')
Token(type='at', text='put!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='get')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='put!')
Token(type='at', text='from')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='goto-block-next')
Token(type='at', text='goto-block-next-set!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='joto-block-next')
Token(type='at', text='joto-block-next-set!')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='if-block-true')
Token(type='at', text='if-block-true-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='if-block-false')
Token(type='at', text='if-block-false-set!')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='newframe-block-next')
Token(type='at', text='newframe-block-next-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*-set!')
Token(type='at', text='from')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='resolve')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='newframe-block-rp-set!')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b0')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='b0')
Token(type='ob', text='(')
Token(type='at', text='resolve')
Token(type='at', text='b0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='b')
Token(type='at', text='b0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='dcl')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='b')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='resolve')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-propagate-pariahty!')
Token(type='at', text=':')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='propagate!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-pariah!')
Token(type='at', text='b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate!')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate!')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='lc', text='; could set likely branch direction before marking targets as pariahs,')
Token(type='lc', text='; but these are all pariah blocks anyway')
Token(type='ob', text='(')
Token(type='at', text='propagate!')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate!')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='propagate!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='ormap')
Token(type='at', text='block-seen?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; optimistically assume all blocks are pariahs, then un-pariah anything reachable from')
Token(type='lc', text='; the entry block without going through a known pariah block')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-pariah?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-pariah!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='propagate!')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='np-insert-profiling')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='start-block')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='link*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='link')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='from')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='mst')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='at', text='from')
Token(type='at', text='to')
Token(type='at', text='0')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='add-link-records!')
Token(type='lc', text='; also adds exit-block links')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-link')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='link')
Token(type='ob', text='(')
Token(type='at', text='make-link')
Token(type='at', text='from')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='link')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='to')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-true-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-false-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-exit-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='to')
Token(type='at', text='exit-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; link start-block to rp blocks since they are, in reality, extra entry points that')
Token(type='lc', text='; need to be measured separately due to the potential for control operations')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rplink*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='start-block')
Token(type='at', text='rp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rplink')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='start-block')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='start-block-link*-set!')
Token(type='at', text='start-block')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='rplink*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='rplink')
Token(type='ob', text='(')
Token(type='at', text='start-block-link*')
Token(type='at', text='start-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; and also record links in newframe-block for remove-link-records!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*-set!')
Token(type='at', text='to')
Token(type='at', text='rplink*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp-set!')
Token(type='at', text='to')
Token(type='at', text='rplink')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='all-block*')
Token(type='ob', text='(')
Token(type='at', text='cons*')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*-set!')
Token(type='at', text='block')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='all-block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='start-block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='entry-link*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-link')
Token(type='at', text='start-block')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='start-block-link*-set!')
Token(type='at', text='start-block')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-link*')
Token(type='ob', text='(')
Token(type='at', text='start-block-link*')
Token(type='at', text='start-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='all-block*')
Token(type='cb', text=')')
Token(type='at', text='entry-link*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='remove-link-records!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-true-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-false-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-exit-set!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='link-to')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*-set!')
Token(type='at', text='block')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='weight-graph!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='sum-link-weights')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='links')
Token(type='cb', text=')')
Token(type='lc', text='; using #3$fx+ to ensure that we wrap when we go over the fixnum range')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='#3%fx+')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='links')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='process-link')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='block-finished?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='lc', text='; cycle?')
Token(type='ob', text='(')
Token(type='at', text='link-weight-set!')
Token(type='at', text='link')
Token(type='at', text='500')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-link')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-link')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-link')
Token(type='ob', text='(')
Token(type='at', text='process-link')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-link')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-finished!')
Token(type='at', text='block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='propagate-flow')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='sum')
Token(type='ob', text='(')
Token(type='at', text='sum-link-weights')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='links')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='tail-block-exit')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='links')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; AWK: we are missing the notion of those instructions that usually')
Token(type='lc', text='; succeed (dooverflow, dooverflood, call-error, fx+? and fx-? in')
Token(type='lc', text='; the original blocks.ss code)')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pariah*')
Token(type='at', text='non-pariah*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='partition')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-pariah?')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='links')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='non-pariah*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='divide-flow')
Token(type='at', text='sum')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='pariah*')
Token(type='cb', text=')')
Token(type='at', text='pariah*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='divide-flow')
Token(type='at', text='sum')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='non-pariah*')
Token(type='cb', text=')')
Token(type='at', text='non-pariah*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='divide-flow')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='flow')
Token(type='at', text='n')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-weight-set!')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='at', text='flow')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fxquotient')
Token(type='at', text='flow')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-weight-set!')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='divide-flow')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='flow')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='exit->start')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='exit-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-finished!')
Token(type='at', text='start-block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-finished!')
Token(type='at', text='exit-block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='lc', text='; DFS to find cycles & determine order to propagate flow')
Token(type='ob', text='(')
Token(type='at', text='link-weight-set!')
Token(type='at', text='exit->start')
Token(type='at', text='1000')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='propagate-flow')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='process-link')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='start-block-link*')
Token(type='at', text='start-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons*')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='mst-top')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='mst-top')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='start-block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='exit-block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='pq')
Token(type='ob', text='(')
Token(type='at', text='pqinitialize')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='mst-in-link')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pqupdate')
Token(type='at', text='link')
Token(type='ob', text='(')
Token(type='at', text='link-from')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='mst-out-link')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pqupdate')
Token(type='at', text='link')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; add the exit->start link to the mst')
Token(type='ob', text='(')
Token(type='at', text='link-mst-set!')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='exit-block')
Token(type='cb', text=')')
Token(type='at', text='exit-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='mst-out-link')
Token(type='ob', text='(')
Token(type='at', text='start-block-link*')
Token(type='at', text='start-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='mst')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='pqempty?')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='r')
Token(type='ob', text='(')
Token(type='at', text='pqremove')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='link')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-mst-set!')
Token(type='at', text='link')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='mst-in-link')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mst-out-link')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mst-out-link')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mst-out-link')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mst-out-link')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mst-out-link')
Token(type='ob', text='(')
Token(type='at', text='tail-block-exit')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mst-out-link')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mst')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='pqinitialize')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='make-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text=';; add dummy first block in the priority-queue')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='make-link')
Token(type='at', text='#f')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-weight-set!')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='pqfirst')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='l')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='size')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='pqfirst')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='pqupheap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='y')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='heap')
Token(type='ob', text='(')
Token(type='at', text='fx/')
Token(type='at', text='k')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='w')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pqupheap')
Token(type='at', text='heap')
Token(type='ob', text='(')
Token(type='at', text='fx/')
Token(type='at', text='k')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='pqdownheap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='heap')
Token(type='at', text='n')
Token(type='at', text='k')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='fx/')
Token(type='at', text='n')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='j')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='k')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='y1')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='heap')
Token(type='at', text='j')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='y2')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='j')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='heap')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='j')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='w1')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='y1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='w2')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='y2')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='y2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='most-negative-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='w1')
Token(type='at', text='w2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='w')
Token(type='at', text='w1')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='at', text='y1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='y1')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pqdownheap')
Token(type='at', text='heap')
Token(type='at', text='n')
Token(type='at', text='j')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='w')
Token(type='at', text='w2')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='at', text='y2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='y2')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pqdownheap')
Token(type='at', text='heap')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='j')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='pqempty?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='pqremove')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='heap')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-car!')
Token(type='at', text='pq')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='r')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='heap')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='heap')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='pqdownheap')
Token(type='at', text='heap')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='pqupdate')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='link')
Token(type='at', text='block')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='k')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='k')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='heap')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-car!')
Token(type='at', text='pq')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='pqupheap')
Token(type='at', text='heap')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='link')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='heap')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='pq')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='w')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='w')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='pqupheap')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='heap')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='link')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='instrument')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='checks-cc?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',pred-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pred-prim')
Token(type='at', text='%condition-code')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-counter!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-instr!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='effect*')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-return-point?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='lc', text='; rp-header / return-point form must be first')
Token(type='ob', text='(')
Token(type='at', text='cons*')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='ir')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-instr!')
Token(type='at', text='block')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text=',null-info')
Token(type='at', text=',%inc-profile-counter')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#t')
Token(type='at', text="'object")
Token(type='at', text='counter')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='record-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-add-counter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new*')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='link-counter')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='from')
Token(type='ob', text='(')
Token(type='at', text='link-from')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='to')
Token(type='at', text='exit-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='checks-cc?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-counter!')
Token(type='at', text='to')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='at', text='new*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='checks-cc?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-counter!')
Token(type='at', text='from')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='at', text='new*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='to')
Token(type='at', text='exit-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='checks-cc?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='make-link')
Token(type='at', text='block')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='from')
Token(type='at', text='start-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='direct-call-label?')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='direct-call-label-referenced')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='lc', text="; we're adding the new block between the (virtual) start block and one")
Token(type='lc', text='; of our (referenced) dcls.  we need to move the dcl label to the new')
Token(type='lc', text='; block so the counter is incremented when we come in from the outside')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='block')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'exdcl")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='to')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='label')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'profile")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='block')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-to-set!')
Token(type='at', text='link')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='lc', text="; set link mst for p-dot-graph/profiling's benefit")
Token(type='ob', text='(')
Token(type='at', text='link-mst-set!')
Token(type='at', text='l')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next-set!')
Token(type='at', text='block')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='link')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-counter!')
Token(type='at', text='block')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block')
Token(type='at', text='new*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='new*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='maybe-add-counter')
Token(type='at', text='new*')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-pinfo')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='lc', text='; op -> counter | (plus-counter* . minus-counter*)')
Token(type='lc', text='; plus-counter* -> (op ...)')
Token(type='lc', text='; minus-counter* -> (op ...)')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-op')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='plus')
Token(type='at', text='minus')
Token(type='cb', text=')')
Token(type='lc', text='; optimize ((op) . ()) => op')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='minus')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='plus')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='plus')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='plus')
Token(type='at', text='minus')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='exit-ops')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-build-op')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='link')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='link')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='build-op')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-build-op')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-build-op')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-build-op')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-build-op')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-build-op')
Token(type='ob', text='(')
Token(type='at', text='tail-block-exit')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='maybe-build-op')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='enter-ops')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='build-op')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='l')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-op')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='link-mst')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='op')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-op')
Token(type='ob', text='(')
Token(type='at', text='exit-ops')
Token(type='at', text='n')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='enter-ops')
Token(type='at', text='n')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-op')
Token(type='ob', text='(')
Token(type='at', text='enter-ops')
Token(type='at', text='n')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='exit-ops')
Token(type='at', text='n')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-op-set!')
Token(type='at', text='l')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='link-counter')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='counter')
Token(type='ob', text='(')
Token(type='at', text='make-profile-counter')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-counter-set!')
Token(type='at', text='l')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-op-set!')
Token(type='at', text='l')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='at', text='counter')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='filter-src*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='$compile-profile')
Token(type='cb', text=')')
Token(type='at', text="'source")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-src*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='block-pseudo-src')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='at', text='list')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ls')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='src*')
Token(type='ob', text='(')
Token(type='at', text='filter-src*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='src*')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-rblock')
Token(type='at', text='src*')
Token(type='ob', text='(')
Token(type='at', text='make-op')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='build-op')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='p-graph/profiling')
Token(type='at', text='p-dot-graph/profiling')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='block-link*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; leave out newframe-block => rp links, since we profiler uses its own start-block => rp links')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='tail-block-exit')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='start-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='start-block-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block->label')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'unknown")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='block')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='print-gensym')
Token(type='at', text="'pretty/suffix")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~s"')
Token(type='ob', text='(')
Token(type='at', text='block->label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='p-dot-graph/profiling')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block*')
Token(type='at', text='exit-block')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='print-link')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reversed?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='reversed?')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-from')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='link-from')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"   "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-string')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" -> "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-string')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='block-non-tail-call?')
Token(type='ob', text='(')
Token(type='at', text='link-from')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='at', text='exit-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" [color=grey]"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='link-mst')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='reversed?')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" [color=blue]"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" [color=black]"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='reversed?')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" [color=pink]"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" [color=red]"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='write-char')
Token(type='ch', text='#\\;')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; print the tree in green')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='link-mst')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='link-mst')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='link-from')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-from')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"   "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-string')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" -> "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-string')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"  [color=green];\\n"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block->pretty-string')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list->string')
Token(type='ob', text='(')
Token(type='at', text='subst')
Token(type='ch', text='#\\_')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='subst')
Token(type='ch', text='#\\_')
Token(type='ch', text='#\\-')
Token(type='ob', text='(')
Token(type='at', text='string->list')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"digraph PROFILE {\\n"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"   node [shape = box];"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='at', text='block*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='link*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='in-link*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='print-link')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='link*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='print-link')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='in-link*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"}\\n"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-string')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='block-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='link*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='in-link*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='p-graph/profiling')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block*')
Token(type='at', text='name')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~a:\\n"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='print-graph')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='print-length')
Token(type='at', text='6')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='print-level')
Token(type='at', text='3')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='print-gensym')
Token(type='at', text="'pretty/suffix")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~a: "')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='links')
Token(type='ob', text='(')
Token(type='at', text='block-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='links')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='link')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='links')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~a(~d)~a"')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-weight')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='link-mst')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='st', text='""')
Token(type='st', text='"*"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='links')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='", "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='links')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='" in=~d:"')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='link-counter')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   Bump count to ~a\\n"')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='link-op')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   Link count to ~a computed from other counts\\n"')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   ~a -> ~a -- ~s\\n"')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='link-from')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='link-to')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='link-op')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text="; We no longer have the code to report here, so we're reporting from source")
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~{   ~s~%~}"')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='unparse-L15a')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='start-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   ~s~%"')
Token(type='ob', text='(')
Token(type='at', text='unparse-L15a')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   ~s~%"')
Token(type='ob', text='(')
Token(type='at', text='unparse-L15a')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-insert-profiling')
Token(type='at', text=':')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='start-block')
Token(type='ob', text='(')
Token(type='at', text='make-start-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='exit-block')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='at', text='start-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='start-block')
Token(type='at', text="'start")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='exit-block')
Token(type='at', text="'exit")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='entry-link*')
Token(type='ob', text='(')
Token(type='at', text='add-link-records!')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='weight-graph!')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mst-top')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-pinfo*-set!')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='build-pinfo')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-pinfo*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; now insert increments for counters added by build-pinfo')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='instrument')
Token(type='at', text='start-block')
Token(type='at', text='exit-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='entry-block*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='link-to')
Token(type='at', text='entry-link*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='$assembly-output')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='start-block')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='exit-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p-graph/profiling')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$assembly-output')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p-dot-graph/profiling')
Token(type='at', text='block*')
Token(type='at', text='exit-block')
Token(type='ob', text='(')
Token(type='at', text='$assembly-output')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='remove-link-records!')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-finished!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='block-label')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='p-graph')
Token(type='at', text='p-dot-graph')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block->label')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'unknown")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='block')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='print-gensym')
Token(type='at', text="'pretty/suffix")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~s"')
Token(type='ob', text='(')
Token(type='at', text='block->label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='p-dot-graph')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block*')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='print-link')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"   "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" -> "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='link')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='write-char')
Token(type='ch', text='#\\;')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block->pretty-string')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list->string')
Token(type='ob', text='(')
Token(type='at', text='subst')
Token(type='ch', text='#\\_')
Token(type='ch', text='#\\.')
Token(type='ob', text='(')
Token(type='at', text='subst')
Token(type='ch', text='#\\_')
Token(type='ch', text='#\\-')
Token(type='ob', text='(')
Token(type='at', text='string->list')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='block-link*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block-name')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-string')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='block-name')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-string')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text=',@(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"digraph BLOCKS {\\n"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"   node [shape = box];"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='at', text='block*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='link*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='print-link')
Token(type='at', text='link*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='"}\\n"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-string')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='block-pariah?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='" [color=red]"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='block-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='link*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='p-graph')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block*')
Token(type='at', text='name')
Token(type='at', text='p')
Token(type='at', text='unparser')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"\\n~a:"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='print-graph')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='print-length')
Token(type='at', text='6')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='print-level')
Token(type='at', text='3')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='print-gensym')
Token(type='at', text="'pretty/suffix")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~a (depth = ~s~@[, pariah~]):\\n"')
Token(type='ob', text='(')
Token(type='at', text='block->pretty-name')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-depth')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-pariah?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~{   ~s~%~}"')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='unparser')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   ~s\\n"')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='ob', text=',(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   ~s\\n"')
Token(type='ob', text='`(')
Token(type='at', text='joto')
Token(type='ob', text=',(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   ~s\\n"')
Token(type='ob', text='`(')
Token(type='at', text='if')
Token(type='ob', text=',(')
Token(type='at', text='unparser')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='ob', text=',(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='ob', text=',(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   ~s\\n"')
Token(type='ob', text='(')
Token(type='at', text='unparser')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"   ~s\\n"')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='ob', text=',(')
Token(type='at', text='block->pretty-name')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-add-in-links!')
Token(type='at', text=':')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-in-link!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*-set!')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='from')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-in-link!')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-in-link!')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-in-link!')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-in-link!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='add-in-link!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-in-link!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-in-link!')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-compute-loop-depth!')
Token(type='at', text=':')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='ormap')
Token(type='at', text='block-seen?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='ormap')
Token(type='at', text='block-finished?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lh*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='rec')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-finished?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='block-loop-header!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='lh*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='b')
Token(type='at', text='lh*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-finished!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='lh*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-index-set!')
Token(type='at', text='b')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='lh*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tree-size')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='lh*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='blockvec')
Token(type='ob', text='(')
Token(type='at', text='list->vector')
Token(type='at', text='lh*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='lb*')
Token(type='at', text='lh*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='remove-block')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='tree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='block-index')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-unset')
Token(type='at', text='tree')
Token(type='at', text='tree-size')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='at', text='tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text="; invert sense of block-finished so we don't have to reset")
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block-finished?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='block-finished?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='block-finished!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='at', text='bool')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-finished!')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='bool')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='rec')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='block-finished?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='lhs')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='blockvec')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-finished?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='lhs')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set')
Token(type='at', text='lhs')
Token(type='at', text='tree-size')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tree-size')
Token(type='at', text='empty-tree')
Token(type='ob', text='(')
Token(type='at', text='block-loop-headers')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='block-index')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set')
Token(type='at', text='empty-tree')
Token(type='at', text='tree-size')
Token(type='ob', text='(')
Token(type='at', text='block-index')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='empty-tree')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lhs')
Token(type='ob', text='(')
Token(type='at', text='remove-block')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='lc', text='; must follow same order as loop above so we find the same loop headers')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lhs')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-merge')
Token(type='at', text='lhs')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tree-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='lc', text='; must follow same order as loop above so we find the same loop headers')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='lhs')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-merge')
Token(type='at', text='lhs')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='tree-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lhs')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-merge')
Token(type='at', text='lhs')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tree-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='block-loop-header?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='block-loop-headers')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='lb*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='b')
Token(type='at', text='lb*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-finished!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-loop-headers-set!')
Token(type='at', text='b')
Token(type='at', text='lhs')
Token(type='cb', text=')')
Token(type='at', text='lhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; seems like we should be able to use (reverse lh*) rather than entry-block* here')
Token(type='lc', text='; but we end up finding different loop headers in some cases')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='rec')
Token(type='at', text='g')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-depth')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='depth')
Token(type='ob', text='(')
Token(type='at', text='tree-fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='depth')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='ob', text='(')
Token(type='at', text='g')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='blockvec')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='depth')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tree-size')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='block-loop-headers')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='depth')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-loop-header?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='depth')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='depth')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-depth-set!')
Token(type='at', text='b')
Token(type='at', text='depth')
Token(type='cb', text=')')
Token(type='at', text='depth')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='lb*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='p-dot-graph')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='current-output-port')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='p-graph')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='current-output-port')
Token(type='cb', text=')')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-finished!')
Token(type='at', text='b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-weight-references!')
Token(type='at', text=':')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='weight-block!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='max-weight')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='weight')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='weight')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='fl=')
Token(type='at', text='max-weight')
Token(type='at', text='0.0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='flonum->fixnum')
Token(type='ob', text='(')
Token(type='at', text='fl/')
Token(type='at', text='weight')
Token(type='ob', text='(')
Token(type='at', text='fl/')
Token(type='at', text='max-weight')
Token(type='at', text='1024.0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-pariah?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='expt')
Token(type='at', text='4')
Token(type='ob', text='(')
Token(type='at', text='fxmin')
Token(type='ob', text='(')
Token(type='at', text='block-depth')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='5')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-weight-set!')
Token(type='at', text='block')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='weight')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='fixnum')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; refs and sets are weighted equally')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='process-var')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-ref-weight-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fixnum')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='uvar-ref-weight')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Lvalue')
Token(type='cb', text=')')
Token(type='at', text='lvalue')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='process-var')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-var')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-var')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='[')
Token(type='at', text=',lvalue')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Rhs')
Token(type='cb', text=')')
Token(type='at', text='rhs')
Token(type='ob', text='[')
Token(type='at', text=',lvalue')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',value-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='Triv')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',pred-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='Triv')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected pred ~s"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='at', text='tl')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',live-info')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text=',var*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='instr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='at', text='instr')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',effect-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='Triv')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='newframe-info')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-info')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-weight-set!')
Token(type='at', text='newframe-info')
Token(type='ob', text='(')
Token(type='at', text='fixnum')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-weight')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; now know for each block its loop nesting depth and pariahty')
Token(type='lc', text='; now weight calls and refs accordingly')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='$profile-block-data?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='weight*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='psrc')
Token(type='ob', text='(')
Token(type='at', text='block-pseudo-src')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='psrc')
Token(type='ob', text='(')
Token(type='at', text='profile-query-weight')
Token(type='at', text='psrc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='max-weight')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='m')
Token(type='at', text='block')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='weight')
Token(type='ob', text='(')
Token(type='at', text='flmax')
Token(type='at', text='m')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='at', text='m')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0.0')
Token(type='at', text='block*')
Token(type='at', text='weight*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='weight-block!')
Token(type='at', text='max-weight')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='at', text='weight*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='wb')
Token(type='ob', text='(')
Token(type='at', text='weight-block!')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='wb')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; this must come before np-allocate-registers since asm-module is imported')
Token(type='lc', text='; by the included file <architecture>-instructions.ss')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='np-generate-code')
Token(type='at', text='asm-module')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='aop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='funcrel*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='current-func')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-funcrel')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reloc')
Token(type='at', text='l')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='stuff')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='funcrel*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='stuff')
Token(type='at', text='funcrel*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='reloc')
Token(type='at', text='stuff')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: generate code forward => backward and thread through a machine-state')
Token(type='lc', text='; record that says what each register contains, including the condition-code')
Token(type='lc', text='; register, so that we can avoid redundant loads and tests.  For example,')
Token(type='lc', text='; second set! of td in (seq (set! td ,(%mref tc 20)) ... (set! td ,(%mref tc 20)))')
Token(type='lc', text='; should go away with no intervening assignment of td or tc[20].  Similarly,')
Token(type='lc', text='; in (seq (mset! tc 36 (incr ,(%mref tc 36))) (if (eq? ,(%mref tc 36) 0) L1 L2),')
Token(type='lc', text="; the test should reduce to a check of the 'z' flag.")
Token(type='lc', text='; plain chunks arise only as the destination for a rachunk')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='chunk')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='size')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='new')
Token(type='ob', text='(')
Token(type='at', text='asm-size*')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='lchunk')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='gchunk')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='l')
Token(type='at', text='laddr')
Token(type='at', text='next-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='at', text='next-offset')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='local-label-offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='next-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='cgchunk')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='info')
Token(type='at', text='l1')
Token(type='at', text='l2')
Token(type='at', text='laddr1')
Token(type='at', text='laddr2')
Token(type='at', text='next-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='l1')
Token(type='at', text='l2')
Token(type='at', text='next-offset')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='label-offset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='local-label?')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='at', text='l1')
Token(type='at', text='l2')
Token(type='ob', text='(')
Token(type='at', text='label-offset')
Token(type='at', text='l1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='label-offset')
Token(type='at', text='l2')
Token(type='cb', text=')')
Token(type='at', text='next-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; rachunks arise only during code generation to support machines like the ARM that determine')
Token(type='lc', text='; return addresses for Scheme calls using pc-relative add or lea instructions')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='rachunk')
Token(type='ob', text='(')
Token(type='at', text='parent')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sealed')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='dest')
Token(type='at', text='l')
Token(type='at', text='incr-offset')
Token(type='at', text='laddr')
Token(type='at', text='next-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='protocol')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='dest')
Token(type='at', text='l')
Token(type='at', text='incr-offset')
Token(type='at', text='next-offset')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pargs->new')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='at', text='dest')
Token(type='at', text='l')
Token(type='at', text='incr-offset')
Token(type='ob', text='(')
Token(type='at', text='local-label-offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='next-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-generate-code')
Token(type='at', text=':')
Token(type='at', text='L16')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='munge-recur?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='c-trace')
Token(type='lc', text='; copied from compile.ss')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='size')
Token(type='at', text='trace-list')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='p')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~a: ~%"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='print-length')
Token(type='at', text='5')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='print-level')
Token(type='at', text='3')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='print-gensym')
Token(type='at', text="'pretty/suffix")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='dump')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='trace-list')
Token(type='at', text='trace-list')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='last-addr')
Token(type='at', text='size')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='trace-list')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='addr')
Token(type='at', text='op')
Token(type='at', text='.')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='op')
Token(type='at', text="'label")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~{~s~^, ~}:\\n"')
Token(type='at', text='addr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dump')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='trace-list')
Token(type='cb', text=')')
Token(type='at', text='last-addr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~d:~9t~a~24t"')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='size')
Token(type='at', text='last-addr')
Token(type='cb', text=')')
Token(type='at', text='op')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='args')
Token(type='at', text='args')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='arg')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='string?')
Token(type='at', text='arg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='at', text='arg')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='write')
Token(type='at', text='arg')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='display')
Token(type='st', text='", "')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='dump')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='trace-list')
Token(type='cb', text=')')
Token(type='at', text='addr')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='trace-list')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"~d:~9t<end~@[ ~a~]>\\n"')
Token(type='at', text='size')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; munge gets the code in forward order, but really wants to process it')
Token(type='lc', text='; backwards to find the label offsets.  Maybe the size would be better')
Token(type='lc', text='; tracked by doing it more like cp2 does right now and then patching in')
Token(type='lc', text='; the foward jumps and tightening up the code.')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='munge')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='c*')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='munge-pass')
Token(type='at', text='c*')
Token(type='at', text='iteration')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='get-local-label-offset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration-set!')
Token(type='at', text='l')
Token(type='at', text='iteration')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='c*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='rc*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='c*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='rc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='rc*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lchunk?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='lchunk-l')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='get-local-label-offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-offset-set!')
Token(type='at', text='l')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='iteration')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='munge-recur?')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='c')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='gchunk?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='gchunk-l')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='get-local-label-offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='gchunk-laddr')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='gchunk-next-offset')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='c')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='asm-jump')
Token(type='at', text='l')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='c')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='cgchunk?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l1')
Token(type='ob', text='(')
Token(type='at', text='cgchunk-l1')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l2')
Token(type='ob', text='(')
Token(type='at', text='cgchunk-l2')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='libspec-label?')
Token(type='at', text='l1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='get-local-label-offset')
Token(type='at', text='l1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cgchunk-laddr1')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='libspec-label?')
Token(type='at', text='l2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='get-local-label-offset')
Token(type='at', text='l2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cgchunk-laddr2')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='cgchunk-next-offset')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='c')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='asm-conditional-jump')
Token(type='ob', text='(')
Token(type='at', text='cgchunk-info')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='l1')
Token(type='at', text='l2')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='c')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rachunk?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='rachunk-l')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='get-local-label-offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rachunk-laddr')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='rachunk-next-offset')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='asm-return-address')
Token(type='ob', text='(')
Token(type='at', text='rachunk-dest')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='rachunk-incr-offset')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='c')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; NB: generic test, so must be last!')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='chunk?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='rc*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='c')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected chunk ~s"')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='asm-fixup-opnd')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='tc-offset-map')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='q')
Token(type='ob', text='(')
Token(type='at', text='datum->syntax')
Token(type='at', text="#'*")
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='caddr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='string->symbol')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"$~s"')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='getprop')
Token(type='at', text="'tc")
Token(type='at', text="'*fields*")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text="#`'#,q")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-case')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='library')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='library')
Token(type='ob', text=',(')
Token(type='at', text='libspec-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='library-code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='library-code')
Token(type='ob', text=',(')
Token(type='at', text='libspec-name')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='entry')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='entry')
Token(type='ob', text=',(')
Token(type='at', text='vector-ref')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='c-entry-name-vector')
Token(type='cb', text=')')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='reg')
Token(type='at', text='%tc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='assv')
Token(type='at', text='offset')
Token(type='at', text='tc-offset-map')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='at', text='cdr')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='`(')
Token(type='at', text='disp')
Token(type='at', text=',offset')
Token(type='ob', text=',(')
Token(type='at', text='reg-name')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset')
Token(type='at', text='reg1')
Token(type='at', text='reg2')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='index')
Token(type='at', text=',offset')
Token(type='ob', text=',(')
Token(type='at', text='reg-name')
Token(type='at', text='reg1')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='reg-name')
Token(type='at', text='reg2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='at', text='r')
Token(type='ob', text='(')
Token(type='at', text='reg-name')
Token(type='at', text='r')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='local-label?')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='print-gensym')
Token(type='at', text="'pretty/suffix")
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~s(~d)"')
Token(type='at', text='l')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='format')
Token(type='st', text='"~s"')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='x')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='extract-trace-code')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trace*')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='code*')
Token(type='at', text='code*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='code')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='trace*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-case')
Token(type='at', text='code')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='op')
Token(type='at', text='.')
Token(type='at', text='opnd*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='ob', text='(')
Token(type='at', text=',offset')
Token(type='at', text=',op')
Token(type='ob', text=',@(')
Token(type='at', text='map')
Token(type='at', text='asm-fixup-opnd')
Token(type='at', text='opnd*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',@trace*')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='at', text='l*')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='l*')
Token(type='cb', text=')')
Token(type='at', text='trace*')
Token(type='ob', text='`(')
Token(type='ob', text='(')
Token(type='at', text=',l*')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='at', text=',@trace*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='trace*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='asm-size')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='trace*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='extract-code')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c*')
Token(type='at', text='c*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='code')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='chunk-code*')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='aop')
Token(type='ob', text='(')
Token(type='at', text='lchunk?')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='lchunk-l')
Token(type='at', text='c')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='`(')
Token(type='at', text='label')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='c*')
Token(type='at', text='c*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='size')
Token(type='at', text='size')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='iteration')
Token(type='at', text='2')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='munge-recur?')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='munge-recur?')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='c*')
Token(type='at', text='new-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='munge-pass')
Token(type='at', text='c*')
Token(type='at', text='iteration')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='c*')
Token(type='at', text='new-size')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='iteration')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='code*')
Token(type='ob', text='(')
Token(type='at', text='extract-code')
Token(type='at', text='c*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='aop')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='remp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-case')
Token(type='at', text='code')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='at', text='stuff')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='extract-trace-code')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='code*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; TODO: teach c-mkcode & c-faslcode how to indirect labels')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='resolve-funcrel!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='funcrel')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='at', text='funcrel')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='code')
Token(type='ob', text='(')
Token(type='at', text='$c-func-code-record')
Token(type='ob', text='(')
Token(type='at', text='local-label-func')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-case')
Token(type='at', text='code')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='func')
Token(type='at', text='subtype')
Token(type='at', text='free')
Token(type='at', text='name')
Token(type='at', text='arity-mask')
Token(type='at', text='size')
Token(type='at', text='code-list')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-car!')
Token(type='at', text='funcrel')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='local-label-offset')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='size')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='funcrel')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='funcrel')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-car!')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='funcrel')
Token(type='cb', text=')')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected record ~s"')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='touch-label!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='libspec-label?')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration-set!')
Token(type='at', text='l')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='LambdaBody')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='at', text='func')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='#%$assembly-output')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p-dot-graph')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='current-output-port')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p-graph')
Token(type='at', text='block*')
Token(type='at', text="'whatever")
Token(type='ob', text='(')
Token(type='at', text='current-output-port')
Token(type='cb', text=')')
Token(type='at', text='unparse-L16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration-set!')
Token(type='at', text='l')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-func-set!')
Token(type='at', text='l')
Token(type='at', text='func')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='current-func')
Token(type='at', text='func')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='chunk*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='munge')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='code*')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Block')
Token(type='at', text='block')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='chunk')
Token(type='ob', text='(')
Token(type='at', text='make-lchunk')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='local-label-offset-set!')
Token(type='at', text='l')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='ob', text='(')
Token(type='at', text='local-label-iteration')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='munge-recur?')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='chunk')
Token(type='at', text='chunk*')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Block')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Exit')
Token(type='at', text='block')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='code*')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='at', text='code*')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Exit')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-goto')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='touch-label!')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='chunk')
Token(type='ob', text='(')
Token(type='at', text='asm-jump')
Token(type='at', text='l')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='chunk')
Token(type='at', text='chunk*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-goto')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-goto')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l1')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='l2')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='at', text='l1')
Token(type='at', text='l2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='touch-label!')
Token(type='at', text='l1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='touch-label!')
Token(type='at', text='l2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='code*')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='l1')
Token(type='at', text='l2')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='code*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='chunk')
Token(type='at', text='chunk*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-goto')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='code*')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-c-return')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='asm-c-return')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='asm-direct-jump')
Token(type='at', text='l')
Token(type='at', text='offset0')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='asm-literal-jump')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='asm-indirect-jump')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='libspec-label?')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='asm-library-jump')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Program')
Token(type='at', text=':')
Token(type='at', text='Program')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='code')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='labels')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',l*')
Token(type='ob', text=',[')
Token(type='at', text='Lambda->func')
Token(type='at', text=':')
Token(type='at', text='le*')
Token(type='at', text='->')
Token(type='at', text='func*')
Token(type='cb', text=']')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='traceit')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='at', text='name')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text='args')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='t')
Token(type='at', text='args')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='funcrel*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='aop')
Token(type='ob', text='(')
Token(type='at', text='$assembly-output')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='munge-recur?')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='local-label-func-set!')
Token(type='at', text='l*')
Token(type='at', text='func*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ptrace*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text='le*')
Token(type='at', text='func*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='resolve-funcrel!')
Token(type='at', text='funcrel*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='aop')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ptrace')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ptrace')
Token(type='at', text='aop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ptrace*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='flush-output-port')
Token(type='at', text='aop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-func')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lambda->func')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='func')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-$c-func')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; the final version of code* (which has things resolved)')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='func')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block-printer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='unparser')
Token(type='at', text='name')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p-dot-graph')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='current-output-port')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p-graph')
Token(type='at', text='block*')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='current-output-port')
Token(type='cb', text=')')
Token(type='at', text='unparser')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-printer')
Token(type='at', text='unparse-L16')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='code*')
Token(type='at', text='trace*')
Token(type='at', text='code-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='LambdaBody')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='at', text='func')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$c-make-code')
Token(type='at', text='func')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-flags')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='interface*->mask')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-interface*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='code-size')
Token(type='at', text='code*')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-ctci')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-code-info')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-closure-rep')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text="'closure")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='n')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='uvar-source')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='fv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='source')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='v')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='unannotate')
Token(type='at', text='source')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctci-live')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='vector-map')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='code-data-disp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='size-rp-header')
Token(type='cb', text=')')
Token(type='at', text='code-size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ctrpi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-rp-info')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='local-label-offset')
Token(type='ob', text='(')
Token(type='at', text='ctrpi-label')
Token(type='at', text='ctrpi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctrpi-src')
Token(type='at', text='ctrpi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctrpi-sexpr')
Token(type='at', text='ctrpi')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctrpi-mask')
Token(type='at', text='ctrpi')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list->vector')
Token(type='ob', text='(')
Token(type='at', text='ctci-rpi*')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-sort!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='rp-info-offset')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='rp-info-offset')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='generate-procedure-source-information')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-code-info')
Token(type='at', text='src')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-pinfo*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='c-trace')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='code-size')
Token(type='at', text='trace*')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='code*')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='code*')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rp-header')
Token(type='at', text=',mrvl')
Token(type='at', text=',fs')
Token(type='at', text=',lpm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='asm-rp-header')
Token(type='at', text='code*')
Token(type='at', text='mrvl')
Token(type='at', text='fs')
Token(type='at', text='lpm')
Token(type='at', text='current-func')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='local-label-func')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='at', text='current-func')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='chunk')
Token(type='ob', text='(')
Token(type='at', text='make-chunk')
Token(type='at', text='code*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='chunk*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='chunk')
Token(type='at', text='chunk*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='chunk')
Token(type='ob', text='(')
Token(type='at', text='asm-return-address')
Token(type='at', text='x')
Token(type='at', text='l')
Token(type='at', text='offset1')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='chunk')
Token(type='at', text='chunk*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='chunk-size')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='proc')
Token(type='at', text='code*')
Token(type='at', text='lvalue')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='asm-move')
Token(type='at', text='code*')
Token(type='at', text='lvalue')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='proc')
Token(type='at', text='code*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='chunk*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='l1')
Token(type='at', text='l2')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='code*')
Token(type='at', text='chunk')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='at', text='proc')
Token(type='at', text='l1')
Token(type='at', text='l2')
Token(type='at', text='offset')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Program')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='Triv->rand')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L16')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='operand')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='operand')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text="'reg")
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x2')
Token(type='at', text='%zero')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='disp')
Token(type='at', text=',imm')
Token(type='at', text=',x1')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='index')
Token(type='at', text=',imm')
Token(type='at', text=',x2')
Token(type='at', text=',x1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-literal-indirect?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text="'literal@")
Token(type='at', text="'literal")
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='info-literal-offset')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='type')
Token(type='ob', text='(')
Token(type='at', text='info-literal-type')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='type')
Token(type='at', text="'closure")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$c-make-closure')
Token(type='ob', text='(')
Token(type='at', text='local-label-func')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text=',type')
Token(type='ob', text=',(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='imm')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-funcrel')
Token(type='at', text="'literal")
Token(type='at', text='l')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-mem-opnd')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='index')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L16')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='at', text='imm')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='index')
Token(type='at', text='%zero')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='disp')
Token(type='at', text=',offset')
Token(type='at', text=',base')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='index')
Token(type='at', text=',offset')
Token(type='at', text=',base')
Token(type='at', text=',index')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='asm-size*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='size')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='size')
Token(type='ob', text='(')
Token(type='at', text='asm-size')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='Trivit')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='b0')
Token(type='at', text='b1')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='Triv->rand')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='at', text='b0')
Token(type='at', text='b1')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='aop-cons*')
Token(type='ob', text='(')
Token(type='at', text='syntax-rules')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='asm')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='cons*')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='aop')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='asm')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='interface*->mask')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='i*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='mask')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='at', text='mask')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='-')
Token(type='at', text='-1')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='i*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='architecture')
Token(type='at', text='assembler')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='at', text='asm-module')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='np-allocate-registers')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='max-fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='max-fs@call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-threaded')
Token(type='at', text='poison-cset')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='no-live*')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='union-live')
Token(type='lc', text='; union live1 and live2.  result is eq? to live1 if result is same as live1.')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live1')
Token(type='at', text='live2')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-merge')
Token(type='at', text='live1')
Token(type='at', text='live2')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='same-live?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live1')
Token(type='at', text='live2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-same?')
Token(type='at', text='live1')
Token(type='at', text='live2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='live?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='live-size')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set?')
Token(type='at', text='live*')
Token(type='at', text='live-size')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='get-live-vars')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='live-size')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-extract')
Token(type='at', text='live*')
Token(type='at', text='live-size')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-add-var')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='lc', text='; add x to live*.  result is eq? to live* if x is already in live*.')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set')
Token(type='at', text='live*')
Token(type='at', text='live-size')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='tree-same?')
Token(type='at', text='new')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-remove-var')
Token(type='lc', text='; remove x from live*.  result is eq? to live* if x is not in live*.')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='index')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-unset')
Token(type='at', text='live*')
Token(type='at', text='live-size')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='tree-same?')
Token(type='at', text='new')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='make-empty-cset')
Token(type='at', text='make-full-cset')
Token(type='at', text='cset-full?')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='conflict-bit-unset!')
Token(type='at', text='conflict-bit-set?')
Token(type='at', text='conflict-bit-count')
Token(type='at', text='cset-merge!')
Token(type='at', text='cset-copy')
Token(type='at', text='cset-for-each')
Token(type='at', text='extract-conflicts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-record-type')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='nongenerative')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fields')
Token(type='at', text='size')
Token(type='ob', text='(')
Token(type='at', text='mutable')
Token(type='at', text='tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-empty-cset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-cset')
Token(type='at', text='size')
Token(type='at', text='empty-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-full-cset')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='size')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-cset')
Token(type='at', text='size')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='cset-full?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='at', text='full-tree')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='conflict-bit-set!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-tree-set!')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='conflict-bit-unset!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-tree-set!')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-unset')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='conflict-bit-set?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-set?')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='conflict-bit-count')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-bit-count')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='cset-merge!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset1')
Token(type='at', text='cset2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-tree-set!')
Token(type='at', text='cset1')
Token(type='ob', text='(')
Token(type='at', text='tree-merge')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='cset-copy')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-cset')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='cset-for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset')
Token(type='at', text='proc')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-for-each')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='at', text='proc')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='extract-conflicts')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cset')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-extract')
Token(type='ob', text='(')
Token(type='at', text='cset-tree')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-size')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='do-live-analysis!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live-size')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-var')
Token(type='ob', text='(')
Token(type='at', text='make-add-var')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='remove-var')
Token(type='ob', text='(')
Token(type='at', text='make-remove-var')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='scan-block')
Token(type='lc', text='; if we maintain a list of kills and a list of useless variables for')
Token(type='lc', text='; each block, and we discover on entry to scan-block that the useless')
Token(type='lc', text='; variables are still useless (not live in "out"), we can compute the')
Token(type='lc', text='; new in set without scanning the block by removing the kills from')
Token(type='lc', text='; the out set and unioning the result with the saved in set.  should')
Token(type='lc', text='; try this and see if it is enough of a win to justify the added')
Token(type='lc', text='; complexity.')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Rhs')
Token(type='cb', text=')')
Token(type='at', text='rhs')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',value-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-kill*?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='remove-var')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-kill*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-live*?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-live*-live*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',pred-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-kill*?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='remove-var')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-kill*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-live*?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-live*-live*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected pred ~s"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='tl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='at', text='tl')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='libspec-label?')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='add-var')
Token(type='at', text='no-live*')
Token(type='ob', text='(')
Token(type='at', text='libspec-label-live-reg*')
Token(type='at', text='l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='out')
Token(type='at', text='no-live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='add-var')
Token(type='at', text='no-live*')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-c-return')
Token(type='at', text=',info')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='out')
Token(type='at', text='no-live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='add-var')
Token(type='at', text='no-live*')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',live-info')
Token(type='at', text=',t')
Token(type='ob', text='(')
Token(type='at', text=',var*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='at', text='var*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected tail instruction ~s"')
Token(type='at', text='tl')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Effect*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='instr*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='instr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='at', text='instr')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',x')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-out')
Token(type='ob', text='(')
Token(type='at', text='remove-var')
Token(type='at', text='out')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-out')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Rhs')
Token(type='cb', text=')')
Token(type='at', text='rhs')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',value-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='primitive-pure?')
Token(type='at', text='value-prim')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='live-info-useless-set!')
Token(type='at', text='live-info')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='live-info-useless-set!')
Token(type='at', text='live-info')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='new-out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='new-out')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='out')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',effect-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-kill*?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='remove-var')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-kill*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-live*?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-live*-live*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='remove-frame')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='restore-local-saves')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='shift-arg')
Token(type='at', text=',live-info')
Token(type='at', text=',reg')
Token(type='at', text=',imm')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='at', text=',live-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflood-check')
Token(type='at', text=',live-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable-overflow-check')
Token(type='at', text=',live-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='at', text=',live-info')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='out')
Token(type='at', text='instr*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; NB: consider storing instructions in reverse order back in expose-basic-blocks')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='effect*')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='at', text='out')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='force-live-in!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text="'uninitialized")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='lc', text='; think we need need not recur on in-link* here even though we changed in')
Token(type='lc', text="; - if an in-link is seen, it's already on the worklist")
Token(type='lc', text='; - if an in-link is not seen, we must not have visited it yet or it would')
Token(type='lc', text=";   have already forced us.  someone will visit it later unless it's")
Token(type='lc', text=';   orphaned, and we think we have no orphaned blocks')
Token(type='ob', text='(')
Token(type='at', text='block-live-in-set!')
Token(type='at', text='block')
Token(type='at', text='no-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-live!')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='different?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='old-out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='old-out')
Token(type='at', text="'uninitialized")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='same-live?')
Token(type='at', text='out')
Token(type='at', text='old-out')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='propagate-live!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='lc', text="; NB: could record out, and if out hasn't changed, skip the scan")
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='in')
Token(type='ob', text='(')
Token(type='at', text='scan-block')
Token(type='at', text='block')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='different?')
Token(type='at', text='in')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-live-in-set!')
Token(type='at', text='block')
Token(type='at', text='in')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-live!')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='do-live!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='next-block')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='force-live-in!')
Token(type='at', text='next-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate-live!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='next-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='true-block')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='false-block')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='force-live-in!')
Token(type='at', text='true-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='force-live-in!')
Token(type='at', text='false-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='union-live')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='true-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='false-block')
Token(type='cb', text=')')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='different?')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='if-block-live-out')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-live-out-set!')
Token(type='at', text='block')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate-live!')
Token(type='at', text='block')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='next-block')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='force-live-in!')
Token(type='at', text='next-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate-live!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nfv*')
Token(type='ob', text='(')
Token(type='at', text='joto-block-nfv*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='next')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='next-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='i')
Token(type='at', text='max-fv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='next')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='new-next')
Token(type='ob', text='(')
Token(type='at', text='remove-var')
Token(type='at', text='next')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='new-next')
Token(type='at', text='next')
Token(type='cb', text=')')
Token(type='at', text='next')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='at', text='next')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='next-block')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rp-block*')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rp-block')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='force-live-in!')
Token(type='at', text='next-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='force-live-in!')
Token(type='at', text='rp-block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='force-live-in!')
Token(type='at', text='rp-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rp')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='rp-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='newframe-info')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-info')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='call')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-rp')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='rp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-call')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-rp-set!')
Token(type='at', text='block')
Token(type='at', text='rp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='call')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='remove-var')
Token(type='at', text='live*')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='rp')
Token(type='ob', text='(')
Token(type='at', text='cons*')
Token(type='lc', text='; could base set of registers to kill on expected return values')
Token(type='ob', text='(')
Token(type='at', text='reg-cons*')
Token(type='at', text='%ret')
Token(type='at', text='%ac0')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-cnfv*')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-nfv**')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-call-set!')
Token(type='at', text='block')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='at', text='call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='union-live')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='union-live')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='live')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='next-block')
Token(type='cb', text=')')
Token(type='at', text='rp-block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='add-var')
Token(type='at', text='call')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-cnfv*')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='different?')
Token(type='at', text='out')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-out')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-out-set!')
Token(type='at', text='block')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate-live!')
Token(type='at', text='block')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='block')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='propagate-live!')
Token(type='at', text='block')
Token(type='at', text='no-live*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='entry-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='entry-block')
Token(type='cb', text=')')
Token(type='at', text="'uninitialized")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='entry-block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do-live!')
Token(type='at', text='entry-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='check-entry-live!')
Token(type='lc', text='; when enabled, spits out messages about uvars and unexpected registers that are live')
Token(type='lc', text='; on entry.  there should never be any live uvars.  for procedures that started life')
Token(type='lc', text="; as ordinary lambda expressions, there shouldn't be anything but ac0, cp, and argument")
Token(type='lc', text='; registers, which we weed out here.  for library routines, there are often additional')
Token(type='lc', text="; registers, sometimes for good reason and sometimes because we are lazy and didn't give")
Token(type='lc', text='; outselves a mechanism to prune out unneeded saves and restores.  for foreign-callable')
Token(type='lc', text='; procedures, C argument registers and callee-save registers might show up live.')
Token(type='lc', text='; we could enable a variant of this always that just checks normal procedures.  also,')
Token(type='lc', text="; it might be nice to make it a bit more efficient, though it probably doesn't matter.")
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='entry-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='okay-live?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='%ac0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%cp")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x')
Token(type='at', text='%cp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='x')
Token(type='at', text='arg-registers')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='undead')
Token(type='ob', text='(')
Token(type='at', text='remp')
Token(type='at', text='okay-live?')
Token(type='ob', text='(')
Token(type='at', text='get-live-vars')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='entry-block')
Token(type='cb', text=')')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='undead')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"Warning: live on entry to ~a: ~s\\n"')
Token(type='at', text='name')
Token(type='at', text='undead')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='record-call-live!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block*')
Token(type='at', text='varvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='newframe-info')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-info')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='call-live*')
Token(type='ob', text='(')
Token(type='at', text='get-live-vars')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-call')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-length')
Token(type='at', text='varvec')
Token(type='cb', text=')')
Token(type='at', text='varvec')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='fixnum')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fixnum?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='most-positive-fixnum')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-spilled!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-pariah?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-save-weight-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fixnum')
Token(type='ob', text='(')
Token(type='at', text='+')
Token(type='ob', text='(')
Token(type='at', text='uvar-save-weight')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-weight')
Token(type='at', text='newframe-info')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-call-live*-set!')
Token(type='at', text='newframe-info')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; maintain move sets as (var . weight) lists, sorted by weight (largest first)')
Token(type='lc', text='; 2014/06/26: allx move set size averages .79 elements with a max of 12, so no')
Token(type='lc', text='; need for anything fancier than this weighted version of insertion sort')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='$add-move!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x1')
Token(type='at', text='x2')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-move*-set!')
Token(type='at', text='x1')
Token(type='ob', text='(')
Token(type='at', text='call-with-values')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='uvar-move*')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x2')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='move')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='move')
Token(type='cb', text=')')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='move')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move')
Token(type='cb', text=')')
Token(type='at', text='weight')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='move2')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='move2')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='move')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='move')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='move2')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='cons')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='identify-poison!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='kspillable')
Token(type='at', text='varvec')
Token(type='at', text='live-size')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='kpoison')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='increment-live-counts!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-for-each')
Token(type='at', text='live')
Token(type='at', text='live-size')
Token(type='at', text='0')
Token(type='at', text='kspillable')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='range')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='uvar-live-count')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='range')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='kpoison')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='kpoison')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-live-count-set!')
Token(type='at', text='x')
Token(type='at', text='range')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',x')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='live-info-useless')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='at', text='live*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='live*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='vlive')
Token(type='ob', text='(')
Token(type='at', text='list->vector')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Effect')
Token(type='at', text='live*')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nvlive')
Token(type='ob', text='(')
Token(type='at', text='vector-length')
Token(type='at', text='vlive')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='refine')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='skip')
Token(type='at', text='64')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='stride')
Token(type='at', text='64')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='skip')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='stride')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='i')
Token(type='at', text='nvlive')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='increment-live-counts!')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='vlive')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='stride')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='ob', text='(')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='kspillable')
Token(type='at', text='kpoison')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='stride')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='1000000')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='refine')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='skip')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='skip')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='do-spillable-conflict!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='kspillable')
Token(type='at', text='kfv')
Token(type='at', text='varvec')
Token(type='at', text='live-size')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='remove-var')
Token(type='ob', text='(')
Token(type='at', text='make-remove-var')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-move!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x1')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$add-move!')
Token(type='at', text='x1')
Token(type='at', text='x2')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$add-move!')
Token(type='at', text='x2')
Token(type='at', text='x1')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-conflict!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='lc', text='; invariants:')
Token(type='lc', text=';   all poison spillables explicitly point to all spillables')
Token(type='lc', text=';   all non-poison spillables implicitly point to all poison spillables via poison-cset')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x-offset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='x-offset')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='x-offset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-for-each')
Token(type='at', text='out')
Token(type='at', text='live-size')
Token(type='at', text='kspillable')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='kspillable')
Token(type='at', text='kfv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='lc', text='; frame y -> poison spillable x')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='x-offset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='tree-for-each')
Token(type='at', text='out')
Token(type='at', text='live-size')
Token(type='at', text='0')
Token(type='at', text='kspillable')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='y')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='lc', text='; non-poison spillable x -> non-poison spillable y')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='cset')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='lc', text='; and vice versa')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-for-each')
Token(type='at', text='out')
Token(type='at', text='live-size')
Token(type='at', text='kspillable')
Token(type='at', text='live-size')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='y')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; frame or register y -> non-poison spillable x')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='x-offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='kspillable')
Token(type='at', text='kfv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-for-each')
Token(type='at', text='out')
Token(type='at', text='live-size')
Token(type='at', text='0')
Token(type='at', text='kspillable')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='lc', text='; frame x -> poison or non-poison spillable y')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='cset')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-for-each')
Token(type='at', text='out')
Token(type='at', text='live-size')
Token(type='at', text='0')
Token(type='at', text='kspillable')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; register x -> non-poison spillable y')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='cset')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rhs')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Rhs')
Token(type='cb', text=')')
Token(type='at', text='rhs')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',value-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='info-kill*?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-conflict!')
Token(type='at', text='x')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-kill*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',x')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='live-info-useless')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='var?')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='add-conflict!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='remove-var')
Token(type='at', text='live')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-move!')
Token(type='at', text='x')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-conflict!')
Token(type='at', text='x')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='rhs')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='rhs')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',effect-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='guard')
Token(type='ob', text='(')
Token(type='at', text='info-kill*?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-conflict!')
Token(type='at', text='x')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-kill*-kill*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='e')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='poison-cset')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='lc', text="; leaving each poison spillable in conflict with itself, but this shouldn't matter")
Token(type='lc', text='; since we never ask for the degree of a poison spillable')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-full-cset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-empty-cset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='kspillable')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-empty-cset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='at', text='Effect')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='show-conflicts')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='varvec')
Token(type='at', text='unvarvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='any?')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"\\n~s conflicts:"')
Token(type='at', text='name')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='ls')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='extract-conflicts')
Token(type='at', text='cset')
Token(type='at', text='varvec')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='extract-conflicts')
Token(type='at', text='cset')
Token(type='at', text='unvarvec')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='any?')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='"\\n~s:~{ ~s~}"')
Token(type='at', text='x')
Token(type='at', text='ls')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='spillable*')
Token(type='at', text='unspillable*')
Token(type='ob', text='(')
Token(type='at', text='vector->list')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='get-fv')
Token(type='ob', text='(')
Token(type='at', text='iota')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='max-fv')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='at', text='any?')
Token(type='ob', text='(')
Token(type='at', text='printf')
Token(type='st', text='" none"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newline')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='assign-frame!')
Token(type='at', text='assign-new-frame!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='update-conflict!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='fv')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cset1')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cset2')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='cset1')
Token(type='ob', text='(')
Token(type='at', text='cset-merge!')
Token(type='at', text='cset1')
Token(type='at', text='cset2')
Token(type='cb', text=')')
Token(type='lc', text='; tempting to set to cset2 rather than (cset-copy cset2), but this would not be')
Token(type='lc', text='; correct for local saves, which need their unaltered sets for later, and copying')
Token(type='lc', text='; is cheap anyway.')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='cset-copy')
Token(type='at', text='cset2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-merge!')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='at', text='poison-cset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='assign-frame!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='sort-spill*')
Token(type='lc', text='; NB: sorts based on likelihood of successfully assigning move-related vars to the same location')
Token(type='lc', text='; NB: probably should sort based on value of assigning move-related vars to the same location,')
Token(type='lc', text='; NB: i.e., taking into account the ref-weight')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='car')
Token(type='ob', text='(')
Token(type='at', text='list-sort')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='relevant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-spilled?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='uvar-move*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='w')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='move')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='relevant?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='move')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='w')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='find-move-related-home')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x0')
Token(type='at', text='succ')
Token(type='at', text='fail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='conflict-fv?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set?')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='at', text='x0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='work*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='clear-seen!')
Token(type='at', text='void')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='clear-seen!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='uvar-move*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='work*')
Token(type='at', text='work*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='var')
Token(type='ob', text='(')
Token(type='at', text='caar')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='try-fv')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='conflict-fv?')
Token(type='at', text='x0')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='move*')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='succ')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='var')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='try-fv')
Token(type='at', text='var')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='var')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='var')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='try-fv')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='var')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='move*')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='find-home!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='spill')
Token(type='at', text='max-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='return')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='home')
Token(type='at', text='max-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='spill')
Token(type='at', text='home')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='update-conflict!')
Token(type='at', text='home')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='max-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='find-move-related-home')
Token(type='at', text='spill')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='home')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='return')
Token(type='at', text='home')
Token(type='at', text='max-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='first-open')
Token(type='at', text='first-open')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='cset-full?')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='first-open')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='spill-offset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv-offset')
Token(type='at', text='first-open')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fv')
Token(type='at', text='fv')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='at', text='cset')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set?')
Token(type='at', text='cset')
Token(type='at', text='spill-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv-offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='fv-offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='fv-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='fv-offset')
Token(type='at', text='fv')
Token(type='at', text='cset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='return')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='at', text='fv-offset')
Token(type='at', text='max-fv')
Token(type='cb', text=')')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='find-homes!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='spill*')
Token(type='at', text='max-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='max-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='find-home!')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='at', text='max-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='find-homes!')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='at', text='max-fv')
Token(type='at', text='first-open')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; NOTE: call-live uvars should be sorted so that those that are call-live with few other')
Token(type='lc', text='; variables are earlier in the list (and more likely to get a low frame location);')
Token(type='lc', text='; additionally if they are live across many frames they should be prioritized over those')
Token(type='lc', text='; live across only a few (only when setup-nfv?)')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='find-homes!')
Token(type='ob', text='(')
Token(type='at', text='sort-spill*')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='at', text='max-fv')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='assign-new-frame!')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='lambda-info')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='remove-var')
Token(type='ob', text='(')
Token(type='at', text='make-remove-var')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='find-max-fv')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='call-max-fv')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='ob', text='(')
Token(type='at', text='fv-offset')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='call-max-fv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='-1')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='cool?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='base')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nfv*')
Token(type='at', text='nfv*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='at', text='base')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set?')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='assign-new-frame!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cnfv*')
Token(type='at', text='nfv**')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-offsets!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='nfv*')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='at', text='offset')
Token(type='at', text='max-fv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nfv')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='home')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='nfv')
Token(type='at', text='home')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='update-conflict!')
Token(type='at', text='home')
Token(type='at', text='nfv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-offsets!')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='arg-offset')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; +1 for return address slot')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='base')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='find-max-fv')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='arg-base')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='base')
Token(type='at', text='arg-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='cool?')
Token(type='at', text='base')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cool?')
Token(type='at', text='arg-base')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='nfv**')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='max-fs@call')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='at', text='max-fs@call')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; max frame size @ call in ptrs')
Token(type='ob', text='(')
Token(type='at', text='set-offsets!')
Token(type='at', text='cnfv*')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='nfv*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set-offsets!')
Token(type='at', text='nfv*')
Token(type='at', text='arg-base')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='nfv**')
Token(type='cb', text=')')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='base')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-mask')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='bucket-width')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='ob', text='(')
Token(type='at', text='fixnum-width')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='32')
Token(type='at', text='16')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='nbits')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='m')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='at', text='m')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='-1')
Token(type='at', text='index*')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='nbuckets')
Token(type='ob', text='(')
Token(type='at', text='fxdiv')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='nbits')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='bucket-width')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='bucket-width')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='buckets')
Token(type='ob', text='(')
Token(type='at', text='make-fxvector')
Token(type='at', text='nbuckets')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='at', text='j')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxdiv-and-mod')
Token(type='at', text='index')
Token(type='at', text='bucket-width')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxvector-set!')
Token(type='at', text='buckets')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fxlogbit1')
Token(type='at', text='j')
Token(type='ob', text='(')
Token(type='at', text='fxvector-ref')
Token(type='at', text='buckets')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='index*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='base')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='len')
Token(type='at', text='nbuckets')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='len')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='len')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='fxvector-ref')
Token(type='at', text='buckets')
Token(type='at', text='base')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='half')
Token(type='ob', text='(')
Token(type='at', text='fxsrl')
Token(type='at', text='len')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logor')
Token(type='ob', text='(')
Token(type='at', text='bitwise-arithmetic-shift-left')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='base')
Token(type='at', text='half')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='len')
Token(type='at', text='half')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='half')
Token(type='at', text='bucket-width')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='base')
Token(type='at', text='half')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='build-live-pointer-mask')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='build-mask')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='cons-fv')
Token(type='at', text='fv')
Token(type='at', text='index*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fv-offset')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='offset')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='lc', text='; no bit for fv0')
Token(type='at', text='index*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='index*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons-fv')
Token(type='at', text='live')
Token(type='at', text='index*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='uvar-type')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='at', text="'ptr")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons-fv')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='at', text='index*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='index*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='process-info-newframe!')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-frame-words')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='call-live*')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-call-live*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-frame-words-set!')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-cnfv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='assign-new-frame!')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-nfv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-nfv**')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='cnfv*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-local-save*-set!')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-local-save?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='record-inspector-info!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='rpl')
Token(type='at', text='call-live*')
Token(type='at', text='lpm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='call-live*')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='at', text='rpl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='call-live*')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-ctci')
Token(type='at', text='lambda-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='mask')
Token(type='ob', text='(')
Token(type='at', text='build-mask')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='i*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-iii')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='name.offset')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='ob', text='(')
Token(type='at', text='ctci-live')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='at', text='index')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='logbit?')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='name.offset')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='lpm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='index')
Token(type='at', text='i*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='i*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='call-live*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='mask')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctci-rpi*-set!')
Token(type='at', text='ctci')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='make-ctrpi')
Token(type='at', text='rpl')
Token(type='at', text='src')
Token(type='at', text='sexpr')
Token(type='at', text='mask')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctci-rpi*')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',live-info')
Token(type='ob', text=',[')
Token(type='at', text='t')
Token(type='cb', text=']')
Token(type='ob', text='(')
Token(type='at', text=',var*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='jump')
Token(type='at', text=',live-info')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='asm-return')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-c-return')
Token(type='at', text=',info')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='asm-c-return')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='foldable-Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='return-point')
Token(type='at', text=',info')
Token(type='at', text=',rpl')
Token(type='at', text=',mrvl')
Token(type='ob', text='(')
Token(type='at', text=',cnfv*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-info-newframe!')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='lpm')
Token(type='ob', text='(')
Token(type='at', text='build-live-pointer-mask')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='cnfv*')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-call-live*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-inspector-info!')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-src')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-sexpr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='rpl')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-call-live*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='lpm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='<')
Token(type='at', text='-1')
Token(type='at', text='lpm')
Token(type='ob', text='(')
Token(type='at', text='ash')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-frame-words')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='`(')
Token(type='at', text='rp-header')
Token(type='at', text=',mrvl')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-frame-words')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text=',lpm')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='remove-frame')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-info-newframe!')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons*')
Token(type='ob', text='`(')
Token(type='at', text='fp-offset')
Token(type='at', text=',live-info')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-frame-words')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflood-check')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='restore-local-saves')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live?')
Token(type='at', text='live')
Token(type='at', text='live-size')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-local-save*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='at', text='live')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='new-effect*')
Token(type='at', text='new-effect*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='remove-var')
Token(type='at', text='live')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='at', text=',x')
Token(type='ob', text=',(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='shift-arg')
Token(type='at', text=',live-info')
Token(type='at', text=',reg')
Token(type='at', text=',imm')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-info-newframe!')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frame-words')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-frame-words')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='frame-words')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='shift-offset')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='frame-words')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='shift-offset')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',reg')
Token(type='at', text=',%zero')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',reg')
Token(type='at', text=',%zero')
Token(type='at', text=',shift-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='check-live')
Token(type='at', text=',live-info')
Token(type='at', text=',reg*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='live')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='remove-var')
Token(type='at', text='live')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='t')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"(check-live) ~s is not live"')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='live')
Token(type='at', text='no-live*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"(check-live) unexpected live vars ~s"')
Token(type='ob', text='(')
Token(type='at', text='get-live-vars')
Token(type='at', text='live')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='lc', text='; NB: experiment with different comparisions.  might want ref weight')
Token(type='lc', text='; NB: to be at least more than save weight to relieve register pressure.')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar-spilled?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='ob', text='(')
Token(type='at', text='uvar-ref-weight')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-save-weight')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-local-save!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='at', text='foldable-Effect')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='info')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-info')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='process-info-newframe!')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live?')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-call')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='live-size')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-local-save*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-live-out')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='new-effect*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='loc')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$add-move!')
Token(type='at', text='x')
Token(type='at', text='loc')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='at', text=',loc')
Token(type='at', text=',x')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='`(')
Token(type='at', text='fp-offset')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-frame-words')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-newframe-local-save*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='uvar-local-save?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-spilled!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-save-weight-set!')
Token(type='at', text='x')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='dummy')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='record-fp-offsets!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='record-fp-offsets!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='cur-off')
Token(type='at', text='effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='at', text='effect')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-offset')
Token(type='at', text=',live-info')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cur-off')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='cur-off')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='fx>=')
Token(type='at', text='cur-off')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='cur-off')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='block-off')
Token(type='ob', text='(')
Token(type='at', text='block-fp-offset')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='block-off')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='cur-off')
Token(type='at', text='block-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"conflicting fp-offset value for block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='effect*')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-fp-offset-set!')
Token(type='at', text='block')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-fp-offsets!')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Effect')
Token(type='at', text='cur-off')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-fp-offsets!')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cur-off')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Effect')
Token(type='at', text='cur-off')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-fp-offsets!')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-fp-offsets!')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cur-off')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Effect')
Token(type='at', text='cur-off')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-fp-offsets!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='rp')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-fp-offsets!')
Token(type='at', text='rp')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-fp-offsets!')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-fp-offsets!')
Token(type='at', text='block')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='finalize-frame-locations!')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='var->loc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='fv->mref')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fv?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Lvalue')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='at', text=',%sfp')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fv-offset')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x0')
Token(type='at', text=',x1')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='ob', text=',(')
Token(type='at', text='fv->mref')
Token(type='ob', text='(')
Token(type='at', text='var->loc')
Token(type='at', text='x0')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='fv->mref')
Token(type='ob', text='(')
Token(type='at', text='var->loc')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='fv->mref')
Token(type='ob', text='(')
Token(type='at', text='var->loc')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; NB: defining Triv & Rhs with cur-off argument so we actually get to our version of Lvalue')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text=':')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='effect*')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cur-off')
Token(type='ob', text='(')
Token(type='at', text='block-fp-offset')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15b')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fp-offset')
Token(type='at', text=',live-info')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',%sfp')
Token(type='ob', text=',(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='imm')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='lc', text='; subtract just to make the generated code more clear')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',null-info')
Token(type='at', text=',%-')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='fx-')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='inline')
Token(type='at', text=',null-info')
Token(type='at', text=',%+')
Token(type='at', text=',%sfp')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='cur-off')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',x0')
Token(type='at', text=',x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x0')
Token(type='ob', text='(')
Token(type='at', text='var->loc')
Token(type='at', text='x0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x1')
Token(type='ob', text='(')
Token(type='at', text='var->loc')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x0')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='ob', text=',(')
Token(type='at', text='fv->mref')
Token(type='at', text='x0')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='fv->mref')
Token(type='at', text='x1')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='at', text='cur-off')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='dummy')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='select-instructions!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-tmp')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='np-languages')
Token(type='at', text='make-unspillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-unspillable')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='unspillable*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='tmp')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-restricted-unspillable')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='import')
Token(type='ob', text='(')
Token(type='at', text='only')
Token(type='at', text='np-languages')
Token(type='at', text='make-restricted-unspillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='reg?')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='var-index')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-restricted-unspillable')
Token(type='at', text='x')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='unspillable*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='tmp')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='make-precolored-unspillable')
Token(type='lc', text='; instead of using machine registers like eax explicitly, we use an unspillable that')
Token(type='lc', text='; conflicts with everything but the machine register.  this is semantically equivalent')
Token(type='lc', text='; for correct code but causes a spilled unspillable error if we try to use the same')
Token(type='lc', text='; machine register for two conflicting variables')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='name')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='reg-precolored')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='tmp')
Token(type='ob', text='(')
Token(type='at', text='make-restricted-unspillable')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='reg')
Token(type='ob', text='(')
Token(type='at', text='vector->list')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='reg')
Token(type='ob', text='(')
Token(type='at', text='vector->list')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-precolored-set!')
Token(type='at', text='reg')
Token(type='at', text='tmp')
Token(type='cb', text=')')
Token(type='at', text='tmp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='build-set!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='lhs')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-implicit')
Token(type='ob', text='(')
Token(type='at', text='k')
Token(type='at', text='quasiquote')
Token(type='at', text='with-output-language')
Token(type='cb', text=')')
Token(type='ob', text='#`(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='ob', text=',(')
Token(type='at', text='make-live-info')
Token(type='cb', text=')')
Token(type='at', text='lhs')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='imm?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='info-literal-indirect?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='imm0?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='imm')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='imm32?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='immediate')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='lc', text='; allows 2^31...2^32-1 per immediate?')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='signed-32?')
Token(type='at', text='imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text="; 2^31...2^32-1 aren't 32-bit values on 64-bit machines")
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='info-literal-indirect?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='label-ref')
Token(type='at', text=',l')
Token(type='at', text=',offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant-case')
Token(type='at', text='ptr-bits')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='32')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='64')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='literal@?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-literal-indirect?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='mref?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',lvalue1')
Token(type='at', text=',lvalue2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='same?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='a')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='a')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='a')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',lvalue11')
Token(type='at', text=',lvalue12')
Token(type='at', text=',imm1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',lvalue21')
Token(type='at', text=',lvalue22')
Token(type='at', text=',imm2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='lvalue11')
Token(type='at', text='lvalue21')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='lvalue12')
Token(type='at', text='lvalue22')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='lvalue11')
Token(type='at', text='lvalue22')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='lvalue12')
Token(type='at', text='lvalue21')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='at', text='imm1')
Token(type='at', text='imm2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='imm->imm')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',lvalue1')
Token(type='at', text=',lvalue2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected mref ~s"')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='literal@->literal')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text=':')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='literal')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='literal')
Token(type='ob', text=',(')
Token(type='at', text='make-info-literal')
Token(type='at', text='#f')
Token(type='ob', text='(')
Token(type='at', text='info-literal-type')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-literal-addr')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-literal-offset')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected literal ~s"')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='select-instructions!')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='block*')
Token(type='at', text='live-size')
Token(type='at', text='force-overflow?')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='handle-jump')
Token(type='at', text='handle-effect-inline')
Token(type='at', text='handle-pred-inline')
Token(type='at', text='handle-value-inline')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-var')
Token(type='ob', text='(')
Token(type='at', text='make-add-var')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='add-var')
Token(type='at', text='out')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Rhs')
Token(type='cb', text=')')
Token(type='at', text='rhs')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='at', text='pred')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='out')
Token(type='at', text='tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='at', text='tail')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='unwrap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='etree')
Token(type='at', text='effect*')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='out')
Token(type='at', text="'uninitialized")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-values')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='etree')
Token(type='at', text='etree')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='effect*')
Token(type='at', text='effect*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='out')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='pair?')
Token(type='at', text='etree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='effect*')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='etree')
Token(type='cb', text=')')
Token(type='at', text='effect*')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='etree')
Token(type='cb', text=')')
Token(type='at', text='effect*')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='etree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='effect*')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='etree')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='at', text='etree')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',x')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='out')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live-set!')
Token(type='at', text='live-info')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='out')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='at', text='out')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='out')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='effect*')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='at', text='effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='handle-jump')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='t')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='etree')
Token(type='at', text='tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='md-handle-jump')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='unwrap')
Token(type='at', text='etree')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text='live')
Token(type='at', text='tail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='tail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='handle-effect-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='effect-prim')
Token(type='at', text='info')
Token(type='at', text='new-effect*')
Token(type='at', text='t*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unwrap')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='primitive-handler')
Token(type='at', text='effect-prim')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='handle-pred-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pred-prim')
Token(type='at', text='info')
Token(type='at', text='t*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='etree')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='primitive-handler')
Token(type='at', text='pred-prim')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='unwrap')
Token(type='at', text='etree')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='live')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='handle-value-inline')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='lvalue')
Token(type='at', text='value-prim')
Token(type='at', text='info')
Token(type='at', text='new-effect*')
Token(type='at', text='t*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unwrap')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='primitive-handler')
Token(type='at', text='value-prim')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='at', text='lvalue')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='compute-overage')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='max-fs@call')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='at', text='force-overflow?')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='max-fs@call')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='max-fv')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-slop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-frame-limit')
Token(type='cb', text=')')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fxmax')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='at', text='max-fs@call')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-frame-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='fx*')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='max-fv')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='ptr-bytes')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-slop')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-frame-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='overage')
Token(type='ob', text='(')
Token(type='at', text='compute-overage')
Token(type='at', text='max-fs@call')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='handle-overflow-check')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='at', text='info')
Token(type='at', text='new-effect*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='xnew-effect*')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-pred-inline')
Token(type='at', text='%u<')
Token(type='at', text='null-info')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='reg')
Token(type='ob', text='(')
Token(type='at', text='meta-cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='real-register?')
Token(type='at', text="'%esp")
Token(type='cb', text=')')
Token(type='at', text='%esp')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='at', text=',%tc')
Token(type='at', text=',%zero')
Token(type='ob', text=',(')
Token(type='at', text='tc-disp')
Token(type='at', text='%esp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='xnew-effect*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='overflow-check')
Token(type='at', text=',pred')
Token(type='ob', text=',(')
Token(type='at', text='handle-effect-inline')
Token(type='at', text='%asmlibcall!')
Token(type='at', text='info')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='maybe-incr-instr-count')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='checks-cc?')
Token(type='lc', text='; copied from instrument')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',pred-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='pred-prim')
Token(type='at', text='%condition-code')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='count')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='lc', text='; overflow-check counts as one instruction...close enough, since it rarely fails')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rp-header')
Token(type='at', text=',mrvl')
Token(type='at', text=',fs')
Token(type='at', text=',lpm')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='move-related')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='generate-instruction-counts')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='count')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-effect-inline')
Token(type='at', text='%inc-cc-counter')
Token(type='at', text='null-info')
Token(type='at', text='e*')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='%tc')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='ob', text=',(')
Token(type='at', text='constant')
Token(type='at', text='tc-instr-counter-disp')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',n')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-live-in')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rp-header')
Token(type='at', text=',mrvl')
Token(type='at', text=',fs')
Token(type='at', text=',lpm')
Token(type='cb', text=')')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='checks-cc?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text=':')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='lvalue')
Token(type='at', text='new-effect*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',info')
Token(type='at', text=',value-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-value-inline')
Token(type='at', text='lvalue')
Token(type='at', text='value-prim')
Token(type='at', text='info')
Token(type='at', text='new-effect*')
Token(type='at', text='t*')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='handle-value-inline')
Token(type='at', text='lvalue')
Token(type='at', text='%move')
Token(type='at', text='null-info')
Token(type='at', text='new-effect*')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='live')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',live-info')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-jump')
Token(type='at', text='t')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='goto')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-return')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='asm-return')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm-c-return')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='asm-c-return')
Token(type='at', text=',info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='rhs')
Token(type='at', text='lvalue')
Token(type='at', text='new-effect*')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',effect-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-effect-inline')
Token(type='at', text='effect-prim')
Token(type='at', text='info')
Token(type='at', text='new-effect*')
Token(type='at', text='t*')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='rp-header')
Token(type='at', text=',mrvl')
Token(type='at', text=',fs')
Token(type='at', text=',lpm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='rp-header')
Token(type='at', text=',mrvl')
Token(type='at', text=',fs')
Token(type='at', text=',lpm')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='at', text=',live-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='1')
Token(type='at', text='overage')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-frame-limit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-slop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-overflow-check')
Token(type='at', text='%sfp')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dooverflow')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflood-check')
Token(type='at', text=',live-info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='overage')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='lc', text='; dooverflood protocol requires %xp be set where we need esp to be')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='uxp')
Token(type='ob', text='(')
Token(type='at', text='make-precolored-unspillable')
Token(type='at', text="'uxp")
Token(type='at', text='%xp')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-value-inline')
Token(type='at', text='uxp')
Token(type='at', text='%+')
Token(type='at', text='null-info')
Token(type='ob', text='(')
Token(type='at', text='handle-overflow-check')
Token(type='at', text='uxp')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dooverflood')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='%sfp')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15c')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='immediate')
Token(type='at', text=',overage')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fcallable-overflow-check')
Token(type='at', text=',live-info')
Token(type='cb', text=')')
Token(type='lc', text='; max-fs@call = 2: the return address and c-chain stored by C-call->XXX')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='1')
Token(type='ob', text='(')
Token(type='at', text='compute-overage')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-frame-limit')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='constant')
Token(type='at', text='stack-slop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-overflow-check')
Token(type='at', text='%sfp')
Token(type='ob', text='(')
Token(type='at', text='intrinsic-info-asmlib')
Token(type='at', text='dooverflow')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='inline')
Token(type='at', text=',live-info')
Token(type='at', text=',info')
Token(type='at', text=',pred-prim')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='handle-pred-inline')
Token(type='at', text='pred-prim')
Token(type='at', text='info')
Token(type='at', text='t*')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='maybe-incr-instr-count')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='new-effect*')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred-set!')
Token(type='at', text='block')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='new-effect*')
Token(type='at', text='tail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='at', text='tail')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='dummy')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; NB: try to reuse unspillables to reduce the number we create')
Token(type='ob', text='(')
Token(type='at', text='architecture')
Token(type='at', text='instructions')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='do-unspillable-conflict!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='kfv')
Token(type='at', text='kspillable')
Token(type='at', text='varvec')
Token(type='at', text='live-size')
Token(type='at', text='kunspillable')
Token(type='at', text='unvarvec')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='remove-var')
Token(type='ob', text='(')
Token(type='at', text='make-remove-var')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='unspillable?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-unspillable?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-unspillable')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='unspillable*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='unspillable?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-move!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x1')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$add-move!')
Token(type='at', text='x1')
Token(type='at', text='x2')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$add-move!')
Token(type='at', text='x2')
Token(type='at', text='x1')
Token(type='at', text='2')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-move-hint!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x1')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$add-move!')
Token(type='at', text='x1')
Token(type='at', text='x2')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$add-move!')
Token(type='at', text='x2')
Token(type='at', text='x1')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-static-conflict!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='u')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='u-offset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='u')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='at', text='u-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='reg*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-us->s-conflicts!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='out')
Token(type='cb', text=')')
Token(type='lc', text='; x is an unspillable')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x-offset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tree-for-each')
Token(type='at', text='out')
Token(type='at', text='live-size')
Token(type='at', text='0')
Token(type='at', text='live-size')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='y')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='y-cset')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='at', text='y-cset')
Token(type='lc', text='; if y is a spillable, point the unspillable x at y')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='y-offset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='cset')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; point y at the unspillable x')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='y-cset')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-us->us-conflicts!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='lc', text='; x is a unspillable')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x-offset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='y-offset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='cset')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='add-s->us-conflicts!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='lc', text='; x is a spillable or register')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x-offset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='y-offset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; point x at unspillable y')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='at', text='cset')
Token(type='at', text='y-offset')
Token(type='cb', text=')')
Token(type='lc', text='; if x is a spillable, point unspillable y at x')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='x-offset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set!')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='unspillable*')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Triv')
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-unspillable')
Token(type='ob', text='(')
Token(type='at', text='add-unspillable')
Token(type='at', text='unspillable*')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='add-unspillable')
Token(type='at', text='unspillable*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='unspillable*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Rhs')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='unspillable*')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Rhs')
Token(type='cb', text=')')
Token(type='at', text='rhs')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='at', text='unspillable*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='at', text='unspillable*')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected pred ~s"')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='tl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Tail')
Token(type='cb', text=')')
Token(type='at', text='tl')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='jump')
Token(type='at', text=',t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='t')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Effect*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='e*')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',x')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='spillable-live')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='unspillable?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='unspillable*')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='x')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='var?')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='unspillable?')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='add-us->us-conflicts!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='rhs')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-us->s-conflicts!')
Token(type='at', text='x')
Token(type='at', text='spillable-live')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='add-us->us-conflicts!')
Token(type='at', text='x')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-us->s-conflicts!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='remove-var')
Token(type='at', text='spillable-live')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-move!')
Token(type='at', text='x')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='add-us->us-conflicts!')
Token(type='at', text='x')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-us->s-conflicts!')
Token(type='at', text='x')
Token(type='at', text='spillable-live')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='unspillable*')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='unspillable?')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='add-s->us-conflicts!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='rhs')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-move!')
Token(type='at', text='x')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-s->us-conflicts!')
Token(type='at', text='x')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='unspillable*')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Triv')
Token(type='ob', text='(')
Token(type='at', text='Rhs')
Token(type='at', text='unspillable*')
Token(type='at', text='rhs')
Token(type='cb', text=')')
Token(type='at', text='lvalue')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='at', text='Triv')
Token(type='at', text='unspillable*')
Token(type='at', text='t*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='move-related')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-move-hint!')
Token(type='at', text='x1')
Token(type='at', text='x2')
Token(type='cb', text=')')
Token(type='at', text='unspillable*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='at', text=',p')
Token(type='at', text=',e*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='e*')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='unspillable*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-empty-cset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='make-empty-cset')
Token(type='at', text='kunspillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-for-each')
Token(type='at', text='f')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='f')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-for-each')
Token(type='at', text='f')
Token(type='at', text='unvarvec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='add-static-conflict!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='uvar-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='unvarvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='assign-registers!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='lambda-info')
Token(type='at', text='varvec')
Token(type='at', text='unvarvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='k')
Token(type='ob', text='(')
Token(type='at', text='vector-length')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='uvar-weight')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='uvar-ref-weight')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-save-weight')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; could also be calculated when the conflict set is built, which would be more')
Token(type='lc', text='; efficient for low-degree variables')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='compute-degrees!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='lc', text='; account for uvar -> uvar conflicts')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='lc', text='; spills have been trimmed from the var-spillable-conflict* sets')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-count')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-count')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='lc', text='; account for reg -> uvar conflicts')
Token(type='ob', text='(')
Token(type='at', text='vector-for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-for-each')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-for-each')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='unvarvec')
Token(type='at', text='x-offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='find-home!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='conflict?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-unspillable?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-set?')
Token(type='at', text='cset')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='find-move-related-home')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x0')
Token(type='at', text='succ')
Token(type='at', text='fail')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='at', text='x0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='work*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='clear-seen!')
Token(type='at', text='void')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='clear-seen!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-seen!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='uvar-move*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='work*')
Token(type='at', text='work*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fail')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='var')
Token(type='ob', text='(')
Token(type='at', text='caar')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='try-reg')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='conflict?')
Token(type='at', text='reg')
Token(type='at', text='x0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='move*')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='clear-seen!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='succ')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='reg?')
Token(type='at', text='var')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='try-reg')
Token(type='at', text='var')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='var')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='reg')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='var')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='reg?')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='try-reg')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='var')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='move*')
Token(type='at', text='work*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='set-home!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='home')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='update-conflict!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-merge!')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-merge!')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='home')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='update-conflict!')
Token(type='at', text='home')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='find-move-related-home')
Token(type='at', text='x')
Token(type='at', text='set-home!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='offset')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='k')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='offset')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-spilled!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='uvar-unspillable?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"spilled unspillable ~s"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='conflict?')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='regvec')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='offset')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='set-home!')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='regvec')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='pick-victims')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='low-degree?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='k')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='pick-potential-spill')
Token(type='lc', text='; x* is already sorted by weight, so this effectively picks uvar with')
Token(type='lc', text='; the highest degree among those with the lowest weight')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='max-degree')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='max-x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='at', text='max-x')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='uvar-unspillable?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='ob', text='(')
Token(type='at', text='uvar-weight')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-weight')
Token(type='at', text='max-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='max-x')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='degree')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='degree')
Token(type='at', text='max-degree')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='x*')
Token(type='at', text='degree')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='x*')
Token(type='at', text='max-degree')
Token(type='at', text='max-x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='remq')
Token(type='at', text='x')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='remove-victim!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='victim')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-for-each')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='victim')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-for-each')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*')
Token(type='at', text='victim')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='unvarvec')
Token(type='at', text='offset')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree-set!')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='ob', text='(')
Token(type='at', text='uvar-degree')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='sort-victims')
Token(type='lc', text='; NB: sorts based on likelihood of successfully assigning move-related vars to the same register')
Token(type='lc', text='; NB: probably should sort based on value of assigning move-related vars to the same register,')
Token(type='lc', text='; NB: i.e., taking into account the ref-weight')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='victim*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='car')
Token(type='ob', text='(')
Token(type='at', text='list-sort')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='relevant?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='reg?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-spilled?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='move*')
Token(type='ob', text='(')
Token(type='at', text='uvar-move*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='w')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='move')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='relevant?')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='move')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='w')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='move')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='x')
Token(type='at', text='w')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='victim*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='victim*')
Token(type='at', text='keeper*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='partition')
Token(type='at', text='low-degree?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='victim*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='victim')
Token(type='at', text='keeper*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pick-potential-spill')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; note: victim can be an unspillable if x* contains only precolored unspillables')
Token(type='ob', text='(')
Token(type='at', text='remove-victim!')
Token(type='at', text='victim')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='victim')
Token(type='cb', text=')')
Token(type='at', text='keeper*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='keeper*')
Token(type='cb', text=')')
Token(type='lc', text='; tried creating a mask from victim*, logand with bv for each x, count the bits,')
Token(type='lc', text="; and subtract from x's uvar-degree-set!.  code in chaff.  didn't help at this point.")
Token(type='lc', text='; perhaps if fxbit-count were implemented better it would')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='remove-victim!')
Token(type='at', text='victim*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='(')
Token(type='at', text='sort-victims')
Token(type='at', text='victim*')
Token(type='cb', text=')')
Token(type='at', text='keeper*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='sort')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='uvar-weight')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-weight')
Token(type='at', text='y')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='compute-degrees!')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x*')
Token(type='at', text='x*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='victim*')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pick-victims')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='x*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='find-home!')
Token(type='at', text='victim*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='everybody-home?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='uvar-location')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='uvar-location')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='record-inspector-information!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='get-closure-fv-names')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='info')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='get-name')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unannotate')
Token(type='ob', text='(')
Token(type='at', text='uvar-source')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='ctci-closure-fv-names')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-closure-rep')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pair')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='p')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='get-name')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='get-name')
Token(type='ob', text='(')
Token(type='at', text='cadr')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctci-closure-fv-names-set!')
Token(type='at', text='ctci')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='list->vector')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='get-name')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctci-closure-fv-names-set!')
Token(type='at', text='ctci')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-ctci')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ctci-live-set!')
Token(type='at', text='ctci')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='spillable*')
Token(type='at', text='spillable*')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='spillable')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='uvar-spilled?')
Token(type='at', text='spillable')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-source')
Token(type='at', text='spillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='source')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='source')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='include')
Token(type='st', text='"types.ss"')
Token(type='cb', text=')')
Token(type='at', text='cpsymbol')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='case')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-closure-rep')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='singleton')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='uvar-source')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-fv*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='=>')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='source')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-iii-set!')
Token(type='at', text='spillable')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='unannotate')
Token(type='at', text='source')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fv-offset')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='spillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='pair')
Token(type='at', text='vector')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-iii-set!')
Token(type='at', text='spillable')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='get-closure-fv-names')
Token(type='at', text='info')
Token(type='at', text='ctci')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fv-offset')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='spillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='closure')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-iii-set!')
Token(type='at', text='spillable')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='unannotate')
Token(type='at', text='source')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fv-offset')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='spillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='v')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-iii-set!')
Token(type='at', text='spillable')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='v')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='unannotate')
Token(type='at', text='source')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fv-offset')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='spillable')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='v')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='f')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='finalize-register-locations!')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L15d')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L15e')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='var->loc')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='uvar?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"no location assigned to uvar ~s"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Lvalue')
Token(type='at', text=':')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Lvalue')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='mref')
Token(type='at', text=',x0')
Token(type='at', text=',x1')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='mref')
Token(type='ob', text=',(')
Token(type='at', text='var->loc')
Token(type='at', text='x0')
Token(type='cb', text=')')
Token(type='ob', text=',(')
Token(type='at', text='var->loc')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='at', text=',imm')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text=',x')
Token(type='ob', text='(')
Token(type='at', text='var->loc')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='ob', text=',[')
Token(type='at', text='lvalue')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='rhs')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='set!')
Token(type='at', text=',lvalue')
Token(type='at', text=',rhs')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='foldable-Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='*')
Token(type='ob', text='(')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='move-related')
Token(type='at', text=',x1')
Token(type='at', text=',x2')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text=',live-info')
Token(type='at', text=',x0')
Token(type='at', text=',x1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x0')
Token(type='ob', text='(')
Token(type='at', text='var->loc')
Token(type='at', text='x0')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='x1')
Token(type='ob', text='(')
Token(type='at', text='var->loc')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='x0')
Token(type='at', text='x1')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='new-effect*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='fold-right')
Token(type='at', text='foldable-Effect')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='dummy')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='expose-overflow-check-blocks!')
Token(type='at', text=':')
Token(type='ob', text='(')
Token(type='at', text='L15e')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='at', text='entry-block0*')
Token(type='at', text='block0*')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='ob', text='(')
Token(type='at', text='L16')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block*')
Token(type='at', text='block0*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='entry-block*')
Token(type='at', text='entry-block0*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-who')
Token(type='at', text='redirect-link!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='old')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next-set!')
Token(type='at', text='from')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"goto-block in-link not found"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next-set!')
Token(type='at', text='from')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"joto-block in-link not found"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-true-set!')
Token(type='at', text='from')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-false-set!')
Token(type='at', text='from')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"if-block in-link not found"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next-set!')
Token(type='at', text='from')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='at', text='old')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp-set!')
Token(type='at', text='from')
Token(type='at', text='new')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='memq')
Token(type='at', text='old')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*-set!')
Token(type='at', text='from')
Token(type='ob', text='(')
Token(type='at', text='subst')
Token(type='at', text='new')
Token(type='at', text='old')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"newframe-block in-link not found"')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unexpected block ~s"')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='insert-check!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='rebefore*')
Token(type='at', text='p')
Token(type='at', text='ehere*')
Token(type='at', text='eafter*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='libcall-block')
Token(type='ob', text='(')
Token(type='at', text='make-goto-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next-set!')
Token(type='at', text='libcall-block')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-pariah!')
Token(type='at', text='libcall-block')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='check-block')
Token(type='ob', text='(')
Token(type='at', text='make-if-block')
Token(type='at', text='block')
Token(type='at', text='libcall-block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred-set!')
Token(type='at', text='check-block')
Token(type='at', text='p')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='check-block')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='rebefore*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='libcall-block')
Token(type='at', text='ehere*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='entry-block*')
Token(type='ob', text='(')
Token(type='at', text='subst')
Token(type='at', text='check-block')
Token(type='at', text='block')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='check-block')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='label')
Token(type='at', text='check-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'post-overflow-check")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='block')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='label')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='label')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'overflowed")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='libcall-block')
Token(type='at', text='label')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='label')
Token(type='at', text='libcall-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='redirect-link!')
Token(type='at', text='block')
Token(type='at', text='check-block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='check-block')
Token(type='at', text='libcall-block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='cons*')
Token(type='at', text='check-block')
Token(type='at', text='libcall-block')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='at', text='block')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='at', text='eafter*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='Effect*')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='at', text='rebefore*')
Token(type='at', text='eafter*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='eafter*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='reverse')
Token(type='at', text='rebefore*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='e')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='eafter*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='eafter*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='eafter*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L15e')
Token(type='at', text='Effect')
Token(type='cb', text=')')
Token(type='at', text='e')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='overflow-check')
Token(type='ob', text=',[')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='p')
Token(type='cb', text=']')
Token(type='ob', text=',[')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='e*')
Token(type='cb', text=']')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='insert-check!')
Token(type='at', text='block')
Token(type='at', text='rebefore*')
Token(type='at', text='p')
Token(type='at', text='e*')
Token(type='at', text='eafter*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text='e')
Token(type='cb', text=')')
Token(type='at', text='rebefore*')
Token(type='cb', text=')')
Token(type='at', text='eafter*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='at', text=':')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='at', text=':')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect')
Token(type='at', text=':')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='Effect')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; NB: without the begin, seems to ignore all but the first subform below')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='Effect*')
Token(type='at', text='block')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='Pred')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail-set!')
Token(type='at', text='block')
Token(type='ob', text='(')
Token(type='at', text='Tail')
Token(type='ob', text='(')
Token(type='at', text='tail-block-tail')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='block')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block0*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='values')
Token(type='ob', text='`(')
Token(type='at', text='dummy')
Token(type='cb', text=')')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='with-live-info-record-writer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='case-lambda')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-writer')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='record-writer')
Token(type='ob', text='(')
Token(type='at', text='record-type-descriptor')
Token(type='at', text='live-info')
Token(type='cb', text=')')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='at', text='p')
Token(type='at', text='wr')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='live-info-useless')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"useless "')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='"<live:"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live')
Token(type='ob', text='(')
Token(type='at', text='live-info-live')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='live')
Token(type='at', text="'uninitialized")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='" uninitialized"')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='" ~s"')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='get-live-vars')
Token(type='at', text='live')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fprintf')
Token(type='at', text='p')
Token(type='st', text='">"')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text='e1')
Token(type='at', text='e2')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-allocate-registers')
Token(type='at', text=':')
Token(type='at', text='L15a')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L16')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='at', text=',max-fv0')
Token(type='ob', text='(')
Token(type='at', text=',local*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block-printer')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='unparser')
Token(type='at', text='name')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p-dot-graph')
Token(type='at', text='block*')
Token(type='ob', text='(')
Token(type='at', text='current-output-port')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='p-graph')
Token(type='at', text='block*')
Token(type='at', text='name')
Token(type='ob', text='(')
Token(type='at', text='current-output-port')
Token(type='cb', text=')')
Token(type='at', text='unparser')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='module')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='RAprinter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='unparser')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-printer')
Token(type='at', text='unparser')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define-syntax')
Token(type='at', text='RApass')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='syntax-case')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='_')
Token(type='at', text='?unparser')
Token(type='at', text='pass-name')
Token(type='at', text='?arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text="#'(")
Token(type='at', text='xpass')
Token(type='at', text='pass-name')
Token(type='ob', text='(')
Token(type='at', text='RAprinter')
Token(type='at', text='?unparser')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='?arg')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='kspillable')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='local*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='kfv')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='max-fv0')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='kreg')
Token(type='ob', text='(')
Token(type='at', text='vector-length')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='spillable*')
Token(type='at', text='local*')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='unspillable*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='max-fv')
Token(type='at', text='max-fv0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='max-fs@call')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='poison-cset')
Token(type='ob', text='(')
Token(type='at', text='make-empty-cset')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='live-size')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='kfv')
Token(type='at', text='kreg')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='varvec')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='live-size')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; set up var indices & varvec mapping from indices to vars')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index-set!')
Token(type='at', text='x')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='varvec')
Token(type='at', text='i')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='kfv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='fv')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='kspillable')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index-set!')
Token(type='at', text='fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='varvec')
Token(type='at', text='i')
Token(type='at', text='fv')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='i')
Token(type='at', text='kreg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='reg')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='regvec')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='kspillable')
Token(type='at', text='kfv')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index-set!')
Token(type='at', text='reg')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='varvec')
Token(type='at', text='i')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-live-info-record-writer')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='lc', text='; run intra/inter-block live analysis')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15a')
Token(type='at', text='do-live-analysis!')
Token(type='at', text='live-size')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='lc', text='; this is worth enabling from time to time...')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='check-entry-live!')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='lc', text='; rerun intra-block live analysis and record (fv v reg v spillable) x spillable conflicts')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15a')
Token(type='at', text='record-call-live!')
Token(type='at', text='block*')
Token(type='at', text='varvec')
Token(type='cb', text=')')
Token(type='lc', text=';; NB: we could just use (vector-length varvec) to get live-size')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='fx>')
Token(type='at', text='kspillable')
Token(type='at', text='1000')
Token(type='cb', text=')')
Token(type='lc', text='; NB: parameter?')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15a')
Token(type='at', text='identify-poison!')
Token(type='at', text='kspillable')
Token(type='at', text='varvec')
Token(type='at', text='live-size')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15a')
Token(type='at', text='do-spillable-conflict!')
Token(type='at', text='kspillable')
Token(type='at', text='kfv')
Token(type='at', text='varvec')
Token(type='at', text='live-size')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='show-conflicts')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='varvec')
Token(type='ob', text="'#(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; find frame homes for call-live variables; adds new fv x spillable conflicts')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15a')
Token(type='at', text='assign-frame!')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='at', text='uvar-spilled?')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='show-homes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15a')
Token(type='at', text='record-inspector-information!')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='lc', text='; determine frame sizes at nontail-call sites and assign homes to new-frame variables')
Token(type='lc', text='; adds new fv x spillable conflicts')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='dummy')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15b')
Token(type='at', text='assign-new-frame!')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L15a')
Token(type='at', text='Dummy')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='dummy')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='info')
Token(type='at', text='live-size')
Token(type='at', text='varvec')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; record fp offset on entry to each block')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15b')
Token(type='at', text='record-fp-offsets!')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='lc', text='; assign frame homes to poison variables')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='spill*')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-spilled!')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15b')
Token(type='at', text='assign-frame!')
Token(type='at', text='spill*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text='; on entry to loop, have assigned call-live and new-frame variables to frame homes, determined frame sizes, and computed block-entry fp offsets')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='saved-reg-csets')
Token(type='ob', text='(')
Token(type='at', text='vector-map')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-copy')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='bcache*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='cache-block-info')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='lc', text="; remove each spill from each other spillable's spillable conflict set")
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='uvar-poison?')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='spill-index')
Token(type='ob', text='(')
Token(type='at', text='var-index')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cset-for-each')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='spill')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='x')
Token(type='ob', text='(')
Token(type='at', text='vector-ref')
Token(type='at', text='varvec')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='uvar-location')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='conflict-bit-unset!')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='at', text='spill-index')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='lc', text="; release the spill's conflict* set")
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='at', text='spill')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='at', text='uvar-location')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='spillable*')
Token(type='ob', text='(')
Token(type='at', text='remp')
Token(type='at', text='uvar-location')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='saved-move*')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='uvar-move*')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='show-homes')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='dummy')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15c')
Token(type='at', text='finalize-frame-locations!')
Token(type='at', text='dummy')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='dummy')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15d')
Token(type='at', text='select-instructions!')
Token(type='at', text='dummy')
Token(type='at', text='block*')
Token(type='at', text='live-size')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-libspec')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='libspec')
Token(type='ob', text='(')
Token(type='at', text='libspec-does-not-expect-headroom?')
Token(type='at', text='libspec')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='reg-precolored-set!')
Token(type='at', text='reg')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='kunspillable')
Token(type='ob', text='(')
Token(type='at', text='length')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='unvarvec')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='kunspillable')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; set up var indices & unvarvec mapping from indices to unspillables')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='i')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-index-set!')
Token(type='at', text='x')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-set!')
Token(type='at', text='unvarvec')
Token(type='at', text='i')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='lc', text='; rerun intra-block live analysis and record (reg v spillable v unspillable) x unspillable conflicts')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15d')
Token(type='at', text='do-unspillable-conflict!')
Token(type='at', text='kfv')
Token(type='at', text='kspillable')
Token(type='at', text='varvec')
Token(type='at', text='live-size')
Token(type='at', text='kunspillable')
Token(type='at', text='unvarvec')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='show-conflicts')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='varvec')
Token(type='at', text='unvarvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15d')
Token(type='at', text='assign-registers!')
Token(type='at', text='info')
Token(type='at', text='varvec')
Token(type='at', text='unvarvec')
Token(type='cb', text=')')
Token(type='lc', text='; release the unspillable conflict sets')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-unspillable-conflict*-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='show-homes')
Token(type='at', text='unspillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='everybody-home?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='dummy')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15e')
Token(type='at', text='finalize-register-locations!')
Token(type='at', text='dummy')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='lc', text='; release the spillable conflict sets')
Token(type='ob', text='(')
Token(type='at', text='vector-for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='reg')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='at', text='reg')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='regvec')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='do')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='i')
Token(type='at', text='max-fv')
Token(type='ob', text='(')
Token(type='at', text='fx-')
Token(type='at', text='i')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='i')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='ob', text='(')
Token(type='at', text='get-fv')
Token(type='at', text='i')
Token(type='cb', text=')')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let-values')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='dummy')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='xpass')
Token(type='at', text='expose-overflow-check-blocks!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='apply')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='dummy')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-printer')
Token(type='at', text='unparse-L16')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-name')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='val*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='list')
Token(type='at', text='dummy')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='block-label')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-block*')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='restore-block-info!')
Token(type='at', text='block*')
Token(type='at', text='bcache*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='vector-for-each')
Token(type='at', text='var-spillable-conflict*-set!')
Token(type='at', text='regvec')
Token(type='at', text='saved-reg-csets')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='uvar-location-set!')
Token(type='at', text='x')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='uvar-move*-set!')
Token(type='at', text='spillable*')
Token(type='at', text='saved-move*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='unspillable*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='RApass')
Token(type='at', text='unparse-L15b')
Token(type='at', text='assign-frame!')
Token(type='ob', text='(')
Token(type='at', text='filter')
Token(type='at', text='uvar-spilled?')
Token(type='at', text='spillable*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; NB: commonize with earlier')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-remove-repeater-blocks-again!')
Token(type='at', text=':')
Token(type='at', text='L16')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L16')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='path-compress!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='lc', text='; NB: ignoring block-src* here, post-profiling')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='ob', text='(')
Token(type='at', text='block-effect*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-repeater!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='end')
Token(type='ob', text='(')
Token(type='at', text='path-compress!')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next-set!')
Token(type='at', text='b')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='at', text='end')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='at', text='b')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='resolve')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='at', text='path-compress!')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='resolve!')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='get')
Token(type='at', text='put!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='to')
Token(type='ob', text='(')
Token(type='at', text='get')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='when')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='put!')
Token(type='at', text='from')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='to')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='goto-block-next')
Token(type='at', text='goto-block-next-set!')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='joto-block-next')
Token(type='at', text='joto-block-next-set!')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='if-block-true')
Token(type='at', text='if-block-true-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='if-block-false')
Token(type='at', text='if-block-false-set!')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='newframe-block-next')
Token(type='at', text='newframe-block-next-set!')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*-set!')
Token(type='at', text='from')
Token(type='ob', text='(')
Token(type='at', text='map')
Token(type='at', text='resolve')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='resolve!')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='newframe-block-rp-set!')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='void')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='from')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let*')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b0')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='b0')
Token(type='ob', text='(')
Token(type='at', text='resolve')
Token(type='at', text='b0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='at', text='b')
Token(type='at', text='b0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='local-label-block-set!')
Token(type='at', text='dcl')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-label-set!')
Token(type='at', text='b')
Token(type='at', text='dcl')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-lambda-dcl*')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='map')
Token(type='at', text='resolve')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='filter')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='block-repeater?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='lc', text='; NB: might instead sort blocks in np-generate-code, which is in a better position')
Token(type='lc', text='; NB: to deal with block ordering when branch displacement sizes are limited')
Token(type='ob', text='(')
Token(type='at', text='define-pass')
Token(type='at', text='np-optimize-block-order!')
Token(type='at', text=':')
Token(type='at', text='L16')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='L16')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='definitions')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='invertible?')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='pred')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='nanopass-case')
Token(type='ob', text='(')
Token(type='at', text='L16')
Token(type='at', text='Pred')
Token(type='cb', text=')')
Token(type='at', text='pred')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='asm')
Token(type='at', text=',info')
Token(type='at', text=',proc')
Token(type='at', text=',t*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='info-condition-code?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='info-condition-code-invertible?')
Token(type='at', text='info')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block-likeliness')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='block-weight')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='block-in-degree')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fold-left')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='n')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='n')
Token(type='ob', text='(')
Token(type='at', text='fx+')
Token(type='at', text='n')
Token(type='at', text='1')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='ob', text='(')
Token(type='at', text='block-in-link*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='CaseLambdaExpr')
Token(type='at', text=':')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='->')
Token(type='at', text='CaseLambdaExpr')
Token(type='ob', text='(')
Token(type='cb', text=')')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text=',block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='ormap')
Token(type='at', text='block-seen?')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='not')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='b')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='w*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='pariah*')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='entry-block*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='rblock*')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='next-worklist-entry')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='w*')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='w*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='null?')
Token(type='at', text='pariah*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='begin')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='andmap')
Token(type='at', text='block-label')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-block*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='safe-assert')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='local-label-block')
Token(type='ob', text='(')
Token(type='at', text='block-label')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='at', text='entry-block*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='for-each')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='block*')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='lambda')
Token(type='at', text=',info')
Token(type='ob', text='(')
Token(type='at', text=',entry-block*')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text=',(')
Token(type='at', text='reverse')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='at', text='...')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='pariah*')
Token(type='cb', text=')')
Token(type='ob', text="'(")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='pariah*')
Token(type='cb', text=')')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='car')
Token(type='at', text='w*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cdr')
Token(type='at', text='w*')
Token(type='cb', text=')')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='next-worklist-entry')
Token(type='at', text='w*')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='rblock*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='b')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-seen!')
Token(type='at', text='b')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cond')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='goto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='goto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='w*')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='joto-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='joto-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='w*')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='if-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='true')
Token(type='ob', text='(')
Token(type='at', text='if-block-true')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='false')
Token(type='ob', text='(')
Token(type='at', text='if-block-false')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='false')
Token(type='at', text='w*')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='block-seen?')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='true')
Token(type='at', text='w*')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='invertible?')
Token(type='ob', text='(')
Token(type='at', text='if-block-pred')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='llntrue')
Token(type='ob', text='(')
Token(type='at', text='block-likeliness')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='llnfalse')
Token(type='ob', text='(')
Token(type='at', text='block-likeliness')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='fx=')
Token(type='at', text='llnfalse')
Token(type='at', text='llntrue')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='block-in-degree')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='block-in-degree')
Token(type='at', text='true')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='llntrue')
Token(type='at', text='llnfalse')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='llntrue')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='false')
Token(type='at', text='w*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='true')
Token(type='at', text='pariah*')
Token(type='cb', text=')')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='false')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='true')
Token(type='at', text='w*')
Token(type='cb', text=')')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='at', text='llnfalse')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='true')
Token(type='at', text='w*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='false')
Token(type='at', text='pariah*')
Token(type='cb', text=')')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='true')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='false')
Token(type='at', text='w*')
Token(type='cb', text=')')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fx<')
Token(type='ob', text='(')
Token(type='at', text='block-likeliness')
Token(type='at', text='false')
Token(type='cb', text=')')
Token(type='at', text='0')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='true')
Token(type='at', text='w*')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='false')
Token(type='at', text='pariah*')
Token(type='cb', text=')')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='at', text='true')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='at', text='false')
Token(type='at', text='w*')
Token(type='cb', text=')')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='newframe-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='loop')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-next')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='append')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp*')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='cons')
Token(type='ob', text='(')
Token(type='at', text='newframe-block-rp')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='at', text='w*')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='ob', text='(')
Token(type='at', text='tail-block?')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='next-worklist-entry')
Token(type='at', text='w*')
Token(type='at', text='pariah*')
Token(type='at', text='rblock*')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='else')
Token(type='ob', text='(')
Token(type='at', text='sorry!')
Token(type='at', text='who')
Token(type='st', text='"unrecognized block ~s"')
Token(type='at', text='b')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='ob', text='(')
Token(type='at', text='np-after-calling-conventions')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='compose')
Token(type='at', text='ir')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-expand-hand-coded')
Token(type='at', text='unparse-L13.5')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-expose-allocation-pointer')
Token(type='at', text='unparse-L14')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-expose-basic-blocks')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-remove-repeater-blocks!')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='$compile-profile')
Token(type='cb', text=')')
Token(type='at', text="'block")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$profile-block-data?')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-add-block-source!')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-propagate-pariahty!')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='or')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='$compile-profile')
Token(type='cb', text=')')
Token(type='at', text="'source")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='ob', text='(')
Token(type='at', text='eq?')
Token(type='ob', text='(')
Token(type='at', text='$compile-profile')
Token(type='cb', text=')')
Token(type='at', text="'block")
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='$sfd')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-insert-profiling')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-add-in-links!')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-compute-loop-depth!')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-weight-references!')
Token(type='at', text='unparse-L15a')
Token(type='cb', text=')')
Token(type='at', text='np-allocate-registers')
Token(type='lc', text="; aggregate pass...don't use pass macro, or it will show up in timings")
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-remove-repeater-blocks-again!')
Token(type='at', text='unparse-L16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-optimize-block-order!')
Token(type='at', text='unparse-L16')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-generate-code')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$np-compile')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='original-input-expression')
Token(type='at', text='pt?')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-initialized-registers')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frame-vars')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='8')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='next-lambda-seqno')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='pass-time?')
Token(type='at', text='pass-time?')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='compose')
Token(type='at', text='original-input-expression')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='cpnanopass')
Token(type='at', text='unparse-L1')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-recognize-let')
Token(type='at', text='unparse-L2')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-discover-names')
Token(type='at', text='unparse-L3')
Token(type='cb', text=')')
Token(type='dc', text='#;')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='unless')
Token(type='ob', text='(')
Token(type='at', text='eqv?')
Token(type='ob', text='(')
Token(type='at', text='optimize-level')
Token(type='cb', text=')')
Token(type='at', text='3')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-check-flags')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-convert-assignments')
Token(type='at', text='unparse-L4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-sanitize-bindings')
Token(type='at', text='unparse-L4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-suppress-procedure-checks')
Token(type='at', text='unparse-L4')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-recognize-mrvs')
Token(type='at', text='unparse-L4.5')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-expand-foreign')
Token(type='at', text='unparse-L4.75')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-recognize-loops')
Token(type='at', text='unparse-L4.875')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-name-anonymous-lambda')
Token(type='at', text='unparse-L5')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-convert-closures')
Token(type='at', text='unparse-L6')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-optimize-direct-call')
Token(type='at', text='unparse-L6')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-identify-scc')
Token(type='at', text='unparse-L6')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='$optimize-closures')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-expand/optimize-closures')
Token(type='at', text='unparse-L7')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-expand-closures')
Token(type='at', text='unparse-L7')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='if')
Token(type='ob', text='(')
Token(type='at', text='fxzero?')
Token(type='ob', text='(')
Token(type='at', text='$loop-unroll-limit')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='ob', text='(')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-profile-unroll-loops')
Token(type='at', text='unparse-L7')
Token(type='cb', text=')')
Token(type='at', text='ir')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-simplify-if')
Token(type='at', text='unparse-L7')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-expand-primitives')
Token(type='at', text='unparse-L9')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-place-overflow-and-trap')
Token(type='at', text='unparse-L9.5')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-rebind-on-ruined-path')
Token(type='at', text='unparse-L9.5')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-finalize-loops')
Token(type='at', text='unparse-L9.75')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-optimize-pred-in-value')
Token(type='at', text='unparse-L9.75')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-remove-complex-opera*')
Token(type='at', text='unparse-L10')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-push-mrvs')
Token(type='at', text='unparse-L10.5')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-normalize-context')
Token(type='at', text='unparse-L11')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-insert-trap-check')
Token(type='at', text='unparse-L11.5')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-flatten-case-lambda')
Token(type='at', text='unparse-L12')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='pass')
Token(type='at', text='np-impose-calling-conventions')
Token(type='at', text='unparse-L13')
Token(type='cb', text=')')
Token(type='at', text='np-after-calling-conventions')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$np-boot-code')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='which')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='with-initialized-registers')
Token(type='ob', text='(')
Token(type='at', text='$c-func-code-record')
Token(type='ob', text='(')
Token(type='at', text='fluid-let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='frame-vars')
Token(type='ob', text='(')
Token(type='at', text='make-vector')
Token(type='at', text='8')
Token(type='at', text='#f')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='next-lambda-seqno')
Token(type='at', text='0')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='pass-time?')
Token(type='at', text='#t')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='parameterize')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='generate-inspector-information')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='ob', text='[')
Token(type='at', text='$compile-profile')
Token(type='at', text='#f')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='np-after-calling-conventions')
Token(type='ob', text='(')
Token(type='at', text='with-output-language')
Token(type='ob', text='(')
Token(type='at', text='L13')
Token(type='at', text='Program')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='let')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text='l')
Token(type='ob', text='(')
Token(type='at', text='make-local-label')
Token(type='at', text="'Linvoke")
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='ob', text='`(')
Token(type='at', text='labels')
Token(type='ob', text='(')
Token(type='ob', text='[')
Token(type='at', text=',l')
Token(type='ob', text='(')
Token(type='at', text='hand-coded')
Token(type='at', text=',which')
Token(type='cb', text=')')
Token(type='cb', text=']')
Token(type='cb', text=')')
Token(type='at', text=',l')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$np-tracer')
Token(type='at', text='tracer')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$np-last-pass')
Token(type='at', text='last-pass')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$track-dynamic-closure-counts')
Token(type='at', text='track-dynamic-closure-counts')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='set!')
Token(type='at', text='$track-static-closure-counts')
Token(type='at', text='track-static-closure-counts')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='nl', text='\n')
Token(type='ob', text='(')
Token(type='at', text='define')
Token(type='at', text='$optimize-closures')
Token(type='ob', text='(')
Token(type='at', text='make-parameter')
Token(type='at', text='#t')
Token(type='ob', text='(')
Token(type='at', text='lambda')
Token(type='ob', text='(')
Token(type='at', text='x')
Token(type='cb', text=')')
Token(type='ob', text='(')
Token(type='at', text='and')
Token(type='at', text='x')
Token(type='at', text='#t')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
Token(type='cb', text=')')
